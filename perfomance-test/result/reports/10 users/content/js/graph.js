/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 1326.0, "series": [{"data": [[0.0, 315.0], [0.1, 315.0], [0.2, 315.0], [0.3, 315.0], [0.4, 315.0], [0.5, 315.0], [0.6, 315.0], [0.7, 315.0], [0.8, 315.0], [0.9, 315.0], [1.0, 315.0], [1.1, 315.0], [1.2, 315.0], [1.3, 315.0], [1.4, 315.0], [1.5, 315.0], [1.6, 315.0], [1.7, 315.0], [1.8, 315.0], [1.9, 315.0], [2.0, 315.0], [2.1, 315.0], [2.2, 315.0], [2.3, 315.0], [2.4, 315.0], [2.5, 315.0], [2.6, 315.0], [2.7, 315.0], [2.8, 315.0], [2.9, 315.0], [3.0, 315.0], [3.1, 315.0], [3.2, 315.0], [3.3, 315.0], [3.4, 315.0], [3.5, 315.0], [3.6, 315.0], [3.7, 315.0], [3.8, 315.0], [3.9, 315.0], [4.0, 315.0], [4.1, 315.0], [4.2, 315.0], [4.3, 315.0], [4.4, 315.0], [4.5, 315.0], [4.6, 315.0], [4.7, 315.0], [4.8, 315.0], [4.9, 315.0], [5.0, 315.0], [5.1, 315.0], [5.2, 315.0], [5.3, 315.0], [5.4, 315.0], [5.5, 315.0], [5.6, 315.0], [5.7, 315.0], [5.8, 315.0], [5.9, 315.0], [6.0, 315.0], [6.1, 315.0], [6.2, 315.0], [6.3, 315.0], [6.4, 315.0], [6.5, 315.0], [6.6, 315.0], [6.7, 315.0], [6.8, 315.0], [6.9, 315.0], [7.0, 315.0], [7.1, 315.0], [7.2, 315.0], [7.3, 315.0], [7.4, 315.0], [7.5, 315.0], [7.6, 315.0], [7.7, 315.0], [7.8, 315.0], [7.9, 315.0], [8.0, 315.0], [8.1, 315.0], [8.2, 315.0], [8.3, 315.0], [8.4, 315.0], [8.5, 315.0], [8.6, 315.0], [8.7, 315.0], [8.8, 315.0], [8.9, 315.0], [9.0, 315.0], [9.1, 315.0], [9.2, 315.0], [9.3, 315.0], [9.4, 315.0], [9.5, 315.0], [9.6, 315.0], [9.7, 315.0], [9.8, 315.0], [9.9, 315.0], [10.0, 315.0], [10.1, 315.0], [10.2, 315.0], [10.3, 315.0], [10.4, 315.0], [10.5, 315.0], [10.6, 315.0], [10.7, 315.0], [10.8, 315.0], [10.9, 315.0], [11.0, 315.0], [11.1, 315.0], [11.2, 315.0], [11.3, 315.0], [11.4, 315.0], [11.5, 315.0], [11.6, 315.0], [11.7, 315.0], [11.8, 315.0], [11.9, 315.0], [12.0, 315.0], [12.1, 315.0], [12.2, 315.0], [12.3, 315.0], [12.4, 315.0], [12.5, 315.0], [12.6, 315.0], [12.7, 315.0], [12.8, 315.0], [12.9, 315.0], [13.0, 315.0], [13.1, 315.0], [13.2, 315.0], [13.3, 315.0], [13.4, 315.0], [13.5, 315.0], [13.6, 315.0], [13.7, 315.0], [13.8, 315.0], [13.9, 315.0], [14.0, 315.0], [14.1, 315.0], [14.2, 315.0], [14.3, 315.0], [14.4, 315.0], [14.5, 315.0], [14.6, 315.0], [14.7, 315.0], [14.8, 315.0], [14.9, 315.0], [15.0, 315.0], [15.1, 315.0], [15.2, 315.0], [15.3, 315.0], [15.4, 315.0], [15.5, 315.0], [15.6, 315.0], [15.7, 315.0], [15.8, 315.0], [15.9, 315.0], [16.0, 315.0], [16.1, 315.0], [16.2, 315.0], [16.3, 315.0], [16.4, 315.0], [16.5, 315.0], [16.6, 315.0], [16.7, 315.0], [16.8, 315.0], [16.9, 315.0], [17.0, 315.0], [17.1, 315.0], [17.2, 315.0], [17.3, 315.0], [17.4, 315.0], [17.5, 315.0], [17.6, 315.0], [17.7, 315.0], [17.8, 315.0], [17.9, 315.0], [18.0, 315.0], [18.1, 315.0], [18.2, 315.0], [18.3, 315.0], [18.4, 315.0], [18.5, 315.0], [18.6, 315.0], [18.7, 315.0], [18.8, 315.0], [18.9, 315.0], [19.0, 315.0], [19.1, 315.0], [19.2, 315.0], [19.3, 315.0], [19.4, 315.0], [19.5, 315.0], [19.6, 315.0], [19.7, 315.0], [19.8, 315.0], [19.9, 315.0], [20.0, 315.0], [20.1, 315.0], [20.2, 315.0], [20.3, 315.0], [20.4, 315.0], [20.5, 315.0], [20.6, 315.0], [20.7, 315.0], [20.8, 315.0], [20.9, 315.0], [21.0, 315.0], [21.1, 315.0], [21.2, 315.0], [21.3, 315.0], [21.4, 315.0], [21.5, 315.0], [21.6, 315.0], [21.7, 315.0], [21.8, 315.0], [21.9, 315.0], [22.0, 315.0], [22.1, 315.0], [22.2, 315.0], [22.3, 315.0], [22.4, 315.0], [22.5, 315.0], [22.6, 315.0], [22.7, 315.0], [22.8, 315.0], [22.9, 315.0], [23.0, 315.0], [23.1, 315.0], [23.2, 315.0], [23.3, 315.0], [23.4, 315.0], [23.5, 315.0], [23.6, 315.0], [23.7, 315.0], [23.8, 315.0], [23.9, 315.0], [24.0, 315.0], [24.1, 315.0], [24.2, 315.0], [24.3, 315.0], [24.4, 315.0], [24.5, 315.0], [24.6, 315.0], [24.7, 315.0], [24.8, 315.0], [24.9, 315.0], [25.0, 315.0], [25.1, 315.0], [25.2, 315.0], [25.3, 315.0], [25.4, 315.0], [25.5, 315.0], [25.6, 315.0], [25.7, 315.0], [25.8, 315.0], [25.9, 315.0], [26.0, 315.0], [26.1, 315.0], [26.2, 315.0], [26.3, 315.0], [26.4, 315.0], [26.5, 315.0], [26.6, 315.0], [26.7, 315.0], [26.8, 315.0], [26.9, 315.0], [27.0, 315.0], [27.1, 315.0], [27.2, 315.0], [27.3, 315.0], [27.4, 315.0], [27.5, 315.0], [27.6, 315.0], [27.7, 315.0], [27.8, 315.0], [27.9, 315.0], [28.0, 315.0], [28.1, 315.0], [28.2, 315.0], [28.3, 315.0], [28.4, 315.0], [28.5, 315.0], [28.6, 315.0], [28.7, 315.0], [28.8, 315.0], [28.9, 315.0], [29.0, 315.0], [29.1, 315.0], [29.2, 315.0], [29.3, 315.0], [29.4, 315.0], [29.5, 315.0], [29.6, 315.0], [29.7, 315.0], [29.8, 315.0], [29.9, 315.0], [30.0, 315.0], [30.1, 315.0], [30.2, 315.0], [30.3, 315.0], [30.4, 315.0], [30.5, 315.0], [30.6, 315.0], [30.7, 315.0], [30.8, 315.0], [30.9, 315.0], [31.0, 315.0], [31.1, 315.0], [31.2, 315.0], [31.3, 315.0], [31.4, 315.0], [31.5, 315.0], [31.6, 315.0], [31.7, 315.0], [31.8, 315.0], [31.9, 315.0], [32.0, 315.0], [32.1, 315.0], [32.2, 315.0], [32.3, 315.0], [32.4, 315.0], [32.5, 315.0], [32.6, 315.0], [32.7, 315.0], [32.8, 315.0], [32.9, 315.0], [33.0, 315.0], [33.1, 315.0], [33.2, 315.0], [33.3, 315.0], [33.4, 315.0], [33.5, 315.0], [33.6, 315.0], [33.7, 315.0], [33.8, 315.0], [33.9, 315.0], [34.0, 315.0], [34.1, 315.0], [34.2, 315.0], [34.3, 315.0], [34.4, 315.0], [34.5, 315.0], [34.6, 315.0], [34.7, 315.0], [34.8, 315.0], [34.9, 315.0], [35.0, 315.0], [35.1, 315.0], [35.2, 315.0], [35.3, 315.0], [35.4, 315.0], [35.5, 315.0], [35.6, 315.0], [35.7, 315.0], [35.8, 315.0], [35.9, 315.0], [36.0, 315.0], [36.1, 315.0], [36.2, 315.0], [36.3, 315.0], [36.4, 315.0], [36.5, 315.0], [36.6, 315.0], [36.7, 315.0], [36.8, 315.0], [36.9, 315.0], [37.0, 315.0], [37.1, 315.0], [37.2, 315.0], [37.3, 315.0], [37.4, 315.0], [37.5, 315.0], [37.6, 315.0], [37.7, 315.0], [37.8, 315.0], [37.9, 315.0], [38.0, 315.0], [38.1, 315.0], [38.2, 315.0], [38.3, 315.0], [38.4, 315.0], [38.5, 315.0], [38.6, 315.0], [38.7, 315.0], [38.8, 315.0], [38.9, 315.0], [39.0, 315.0], [39.1, 315.0], [39.2, 315.0], [39.3, 315.0], [39.4, 315.0], [39.5, 315.0], [39.6, 315.0], [39.7, 315.0], [39.8, 315.0], [39.9, 315.0], [40.0, 315.0], [40.1, 315.0], [40.2, 315.0], [40.3, 315.0], [40.4, 315.0], [40.5, 315.0], [40.6, 315.0], [40.7, 315.0], [40.8, 315.0], [40.9, 315.0], [41.0, 315.0], [41.1, 315.0], [41.2, 315.0], [41.3, 315.0], [41.4, 315.0], [41.5, 315.0], [41.6, 315.0], [41.7, 315.0], [41.8, 315.0], [41.9, 315.0], [42.0, 315.0], [42.1, 315.0], [42.2, 315.0], [42.3, 315.0], [42.4, 315.0], [42.5, 315.0], [42.6, 315.0], [42.7, 315.0], [42.8, 315.0], [42.9, 315.0], [43.0, 315.0], [43.1, 315.0], [43.2, 315.0], [43.3, 315.0], [43.4, 315.0], [43.5, 315.0], [43.6, 315.0], [43.7, 315.0], [43.8, 315.0], [43.9, 315.0], [44.0, 315.0], [44.1, 315.0], [44.2, 315.0], [44.3, 315.0], [44.4, 315.0], [44.5, 315.0], [44.6, 315.0], [44.7, 315.0], [44.8, 315.0], [44.9, 315.0], [45.0, 315.0], [45.1, 315.0], [45.2, 315.0], [45.3, 315.0], [45.4, 315.0], [45.5, 315.0], [45.6, 315.0], [45.7, 315.0], [45.8, 315.0], [45.9, 315.0], [46.0, 315.0], [46.1, 315.0], [46.2, 315.0], [46.3, 315.0], [46.4, 315.0], [46.5, 315.0], [46.6, 315.0], [46.7, 315.0], [46.8, 315.0], [46.9, 315.0], [47.0, 315.0], [47.1, 315.0], [47.2, 315.0], [47.3, 315.0], [47.4, 315.0], [47.5, 315.0], [47.6, 315.0], [47.7, 315.0], [47.8, 315.0], [47.9, 315.0], [48.0, 315.0], [48.1, 315.0], [48.2, 315.0], [48.3, 315.0], [48.4, 315.0], [48.5, 315.0], [48.6, 315.0], [48.7, 315.0], [48.8, 315.0], [48.9, 315.0], [49.0, 315.0], [49.1, 315.0], [49.2, 315.0], [49.3, 315.0], [49.4, 315.0], [49.5, 315.0], [49.6, 315.0], [49.7, 315.0], [49.8, 315.0], [49.9, 315.0], [50.0, 315.0], [50.1, 315.0], [50.2, 315.0], [50.3, 315.0], [50.4, 315.0], [50.5, 315.0], [50.6, 315.0], [50.7, 315.0], [50.8, 315.0], [50.9, 315.0], [51.0, 315.0], [51.1, 315.0], [51.2, 315.0], [51.3, 315.0], [51.4, 315.0], [51.5, 315.0], [51.6, 315.0], [51.7, 315.0], [51.8, 315.0], [51.9, 315.0], [52.0, 315.0], [52.1, 315.0], [52.2, 315.0], [52.3, 315.0], [52.4, 315.0], [52.5, 315.0], [52.6, 315.0], [52.7, 315.0], [52.8, 315.0], [52.9, 315.0], [53.0, 315.0], [53.1, 315.0], [53.2, 315.0], [53.3, 315.0], [53.4, 315.0], [53.5, 315.0], [53.6, 315.0], [53.7, 315.0], [53.8, 315.0], [53.9, 315.0], [54.0, 315.0], [54.1, 315.0], [54.2, 315.0], [54.3, 315.0], [54.4, 315.0], [54.5, 315.0], [54.6, 315.0], [54.7, 315.0], [54.8, 315.0], [54.9, 315.0], [55.0, 315.0], [55.1, 315.0], [55.2, 315.0], [55.3, 315.0], [55.4, 315.0], [55.5, 315.0], [55.6, 315.0], [55.7, 315.0], [55.8, 315.0], [55.9, 315.0], [56.0, 315.0], [56.1, 315.0], [56.2, 315.0], [56.3, 315.0], [56.4, 315.0], [56.5, 315.0], [56.6, 315.0], [56.7, 315.0], [56.8, 315.0], [56.9, 315.0], [57.0, 315.0], [57.1, 315.0], [57.2, 315.0], [57.3, 315.0], [57.4, 315.0], [57.5, 315.0], [57.6, 315.0], [57.7, 315.0], [57.8, 315.0], [57.9, 315.0], [58.0, 315.0], [58.1, 315.0], [58.2, 315.0], [58.3, 315.0], [58.4, 315.0], [58.5, 315.0], [58.6, 315.0], [58.7, 315.0], [58.8, 315.0], [58.9, 315.0], [59.0, 315.0], [59.1, 315.0], [59.2, 315.0], [59.3, 315.0], [59.4, 315.0], [59.5, 315.0], [59.6, 315.0], [59.7, 315.0], [59.8, 315.0], [59.9, 315.0], [60.0, 315.0], [60.1, 315.0], [60.2, 315.0], [60.3, 315.0], [60.4, 315.0], [60.5, 315.0], [60.6, 315.0], [60.7, 315.0], [60.8, 315.0], [60.9, 315.0], [61.0, 315.0], [61.1, 315.0], [61.2, 315.0], [61.3, 315.0], [61.4, 315.0], [61.5, 315.0], [61.6, 315.0], [61.7, 315.0], [61.8, 315.0], [61.9, 315.0], [62.0, 315.0], [62.1, 315.0], [62.2, 315.0], [62.3, 315.0], [62.4, 315.0], [62.5, 315.0], [62.6, 315.0], [62.7, 315.0], [62.8, 315.0], [62.9, 315.0], [63.0, 315.0], [63.1, 315.0], [63.2, 315.0], [63.3, 315.0], [63.4, 315.0], [63.5, 315.0], [63.6, 315.0], [63.7, 315.0], [63.8, 315.0], [63.9, 315.0], [64.0, 315.0], [64.1, 315.0], [64.2, 315.0], [64.3, 315.0], [64.4, 315.0], [64.5, 315.0], [64.6, 315.0], [64.7, 315.0], [64.8, 315.0], [64.9, 315.0], [65.0, 315.0], [65.1, 315.0], [65.2, 315.0], [65.3, 315.0], [65.4, 315.0], [65.5, 315.0], [65.6, 315.0], [65.7, 315.0], [65.8, 315.0], [65.9, 315.0], [66.0, 315.0], [66.1, 315.0], [66.2, 315.0], [66.3, 315.0], [66.4, 315.0], [66.5, 315.0], [66.6, 315.0], [66.7, 315.0], [66.8, 315.0], [66.9, 315.0], [67.0, 315.0], [67.1, 315.0], [67.2, 315.0], [67.3, 315.0], [67.4, 315.0], [67.5, 315.0], [67.6, 315.0], [67.7, 315.0], [67.8, 315.0], [67.9, 315.0], [68.0, 315.0], [68.1, 315.0], [68.2, 315.0], [68.3, 315.0], [68.4, 315.0], [68.5, 315.0], [68.6, 315.0], [68.7, 315.0], [68.8, 315.0], [68.9, 315.0], [69.0, 315.0], [69.1, 315.0], [69.2, 315.0], [69.3, 315.0], [69.4, 315.0], [69.5, 315.0], [69.6, 315.0], [69.7, 315.0], [69.8, 315.0], [69.9, 315.0], [70.0, 315.0], [70.1, 315.0], [70.2, 315.0], [70.3, 315.0], [70.4, 315.0], [70.5, 315.0], [70.6, 315.0], [70.7, 315.0], [70.8, 315.0], [70.9, 315.0], [71.0, 315.0], [71.1, 315.0], [71.2, 315.0], [71.3, 315.0], [71.4, 315.0], [71.5, 315.0], [71.6, 315.0], [71.7, 315.0], [71.8, 315.0], [71.9, 315.0], [72.0, 315.0], [72.1, 315.0], [72.2, 315.0], [72.3, 315.0], [72.4, 315.0], [72.5, 315.0], [72.6, 315.0], [72.7, 315.0], [72.8, 315.0], [72.9, 315.0], [73.0, 315.0], [73.1, 315.0], [73.2, 315.0], [73.3, 315.0], [73.4, 315.0], [73.5, 315.0], [73.6, 315.0], [73.7, 315.0], [73.8, 315.0], [73.9, 315.0], [74.0, 315.0], [74.1, 315.0], [74.2, 315.0], [74.3, 315.0], [74.4, 315.0], [74.5, 315.0], [74.6, 315.0], [74.7, 315.0], [74.8, 315.0], [74.9, 315.0], [75.0, 315.0], [75.1, 315.0], [75.2, 315.0], [75.3, 315.0], [75.4, 315.0], [75.5, 315.0], [75.6, 315.0], [75.7, 315.0], [75.8, 315.0], [75.9, 315.0], [76.0, 315.0], [76.1, 315.0], [76.2, 315.0], [76.3, 315.0], [76.4, 315.0], [76.5, 315.0], [76.6, 315.0], [76.7, 315.0], [76.8, 315.0], [76.9, 315.0], [77.0, 315.0], [77.1, 315.0], [77.2, 315.0], [77.3, 315.0], [77.4, 315.0], [77.5, 315.0], [77.6, 315.0], [77.7, 315.0], [77.8, 315.0], [77.9, 315.0], [78.0, 315.0], [78.1, 315.0], [78.2, 315.0], [78.3, 315.0], [78.4, 315.0], [78.5, 315.0], [78.6, 315.0], [78.7, 315.0], [78.8, 315.0], [78.9, 315.0], [79.0, 315.0], [79.1, 315.0], [79.2, 315.0], [79.3, 315.0], [79.4, 315.0], [79.5, 315.0], [79.6, 315.0], [79.7, 315.0], [79.8, 315.0], [79.9, 315.0], [80.0, 315.0], [80.1, 315.0], [80.2, 315.0], [80.3, 315.0], [80.4, 315.0], [80.5, 315.0], [80.6, 315.0], [80.7, 315.0], [80.8, 315.0], [80.9, 315.0], [81.0, 315.0], [81.1, 315.0], [81.2, 315.0], [81.3, 315.0], [81.4, 315.0], [81.5, 315.0], [81.6, 315.0], [81.7, 315.0], [81.8, 315.0], [81.9, 315.0], [82.0, 315.0], [82.1, 315.0], [82.2, 315.0], [82.3, 315.0], [82.4, 315.0], [82.5, 315.0], [82.6, 315.0], [82.7, 315.0], [82.8, 315.0], [82.9, 315.0], [83.0, 315.0], [83.1, 315.0], [83.2, 315.0], [83.3, 315.0], [83.4, 315.0], [83.5, 315.0], [83.6, 315.0], [83.7, 315.0], [83.8, 315.0], [83.9, 315.0], [84.0, 315.0], [84.1, 315.0], [84.2, 315.0], [84.3, 315.0], [84.4, 315.0], [84.5, 315.0], [84.6, 315.0], [84.7, 315.0], [84.8, 315.0], [84.9, 315.0], [85.0, 315.0], [85.1, 315.0], [85.2, 315.0], [85.3, 315.0], [85.4, 315.0], [85.5, 315.0], [85.6, 315.0], [85.7, 315.0], [85.8, 315.0], [85.9, 315.0], [86.0, 315.0], [86.1, 315.0], [86.2, 315.0], [86.3, 315.0], [86.4, 315.0], [86.5, 315.0], [86.6, 315.0], [86.7, 315.0], [86.8, 315.0], [86.9, 315.0], [87.0, 315.0], [87.1, 315.0], [87.2, 315.0], [87.3, 315.0], [87.4, 315.0], [87.5, 315.0], [87.6, 315.0], [87.7, 315.0], [87.8, 315.0], [87.9, 315.0], [88.0, 315.0], [88.1, 315.0], [88.2, 315.0], [88.3, 315.0], [88.4, 315.0], [88.5, 315.0], [88.6, 315.0], [88.7, 315.0], [88.8, 315.0], [88.9, 315.0], [89.0, 315.0], [89.1, 315.0], [89.2, 315.0], [89.3, 315.0], [89.4, 315.0], [89.5, 315.0], [89.6, 315.0], [89.7, 315.0], [89.8, 315.0], [89.9, 315.0], [90.0, 315.0], [90.1, 315.0], [90.2, 315.0], [90.3, 315.0], [90.4, 315.0], [90.5, 315.0], [90.6, 315.0], [90.7, 315.0], [90.8, 315.0], [90.9, 315.0], [91.0, 315.0], [91.1, 315.0], [91.2, 315.0], [91.3, 315.0], [91.4, 315.0], [91.5, 315.0], [91.6, 315.0], [91.7, 315.0], [91.8, 315.0], [91.9, 315.0], [92.0, 315.0], [92.1, 315.0], [92.2, 315.0], [92.3, 315.0], [92.4, 315.0], [92.5, 315.0], [92.6, 315.0], [92.7, 315.0], [92.8, 315.0], [92.9, 315.0], [93.0, 315.0], [93.1, 315.0], [93.2, 315.0], [93.3, 315.0], [93.4, 315.0], [93.5, 315.0], [93.6, 315.0], [93.7, 315.0], [93.8, 315.0], [93.9, 315.0], [94.0, 315.0], [94.1, 315.0], [94.2, 315.0], [94.3, 315.0], [94.4, 315.0], [94.5, 315.0], [94.6, 315.0], [94.7, 315.0], [94.8, 315.0], [94.9, 315.0], [95.0, 315.0], [95.1, 315.0], [95.2, 315.0], [95.3, 315.0], [95.4, 315.0], [95.5, 315.0], [95.6, 315.0], [95.7, 315.0], [95.8, 315.0], [95.9, 315.0], [96.0, 315.0], [96.1, 315.0], [96.2, 315.0], [96.3, 315.0], [96.4, 315.0], [96.5, 315.0], [96.6, 315.0], [96.7, 315.0], [96.8, 315.0], [96.9, 315.0], [97.0, 315.0], [97.1, 315.0], [97.2, 315.0], [97.3, 315.0], [97.4, 315.0], [97.5, 315.0], [97.6, 315.0], [97.7, 315.0], [97.8, 315.0], [97.9, 315.0], [98.0, 315.0], [98.1, 315.0], [98.2, 315.0], [98.3, 315.0], [98.4, 315.0], [98.5, 315.0], [98.6, 315.0], [98.7, 315.0], [98.8, 315.0], [98.9, 315.0], [99.0, 315.0], [99.1, 315.0], [99.2, 315.0], [99.3, 315.0], [99.4, 315.0], [99.5, 315.0], [99.6, 315.0], [99.7, 315.0], [99.8, 315.0], [99.9, 315.0]], "isOverall": false, "label": "Register test user", "isController": false}, {"data": [[0.0, 1.0], [0.1, 1.0], [0.2, 1.0], [0.3, 1.0], [0.4, 1.0], [0.5, 1.0], [0.6, 1.0], [0.7, 1.0], [0.8, 1.0], [0.9, 1.0], [1.0, 1.0], [1.1, 1.0], [1.2, 1.0], [1.3, 1.0], [1.4, 1.0], [1.5, 1.0], [1.6, 1.0], [1.7, 1.0], [1.8, 1.0], [1.9, 1.0], [2.0, 1.0], [2.1, 1.0], [2.2, 1.0], [2.3, 1.0], [2.4, 1.0], [2.5, 1.0], [2.6, 1.0], [2.7, 1.0], [2.8, 1.0], [2.9, 1.0], [3.0, 1.0], [3.1, 1.0], [3.2, 1.0], [3.3, 1.0], [3.4, 1.0], [3.5, 1.0], [3.6, 1.0], [3.7, 1.0], [3.8, 1.0], [3.9, 1.0], [4.0, 1.0], [4.1, 1.0], [4.2, 1.0], [4.3, 1.0], [4.4, 1.0], [4.5, 1.0], [4.6, 1.0], [4.7, 1.0], [4.8, 1.0], [4.9, 1.0], [5.0, 1.0], [5.1, 1.0], [5.2, 1.0], [5.3, 1.0], [5.4, 1.0], [5.5, 1.0], [5.6, 1.0], [5.7, 1.0], [5.8, 1.0], [5.9, 1.0], [6.0, 1.0], [6.1, 1.0], [6.2, 1.0], [6.3, 1.0], [6.4, 1.0], [6.5, 1.0], [6.6, 1.0], [6.7, 1.0], [6.8, 1.0], [6.9, 1.0], [7.0, 1.0], [7.1, 1.0], [7.2, 1.0], [7.3, 1.0], [7.4, 1.0], [7.5, 1.0], [7.6, 1.0], [7.7, 1.0], [7.8, 1.0], [7.9, 1.0], [8.0, 1.0], [8.1, 1.0], [8.2, 1.0], [8.3, 1.0], [8.4, 1.0], [8.5, 1.0], [8.6, 1.0], [8.7, 1.0], [8.8, 1.0], [8.9, 1.0], [9.0, 1.0], [9.1, 1.0], [9.2, 1.0], [9.3, 1.0], [9.4, 1.0], [9.5, 1.0], [9.6, 1.0], [9.7, 1.0], [9.8, 1.0], [9.9, 1.0], [10.0, 1.0], [10.1, 1.0], [10.2, 1.0], [10.3, 1.0], [10.4, 1.0], [10.5, 1.0], [10.6, 1.0], [10.7, 1.0], [10.8, 1.0], [10.9, 1.0], [11.0, 1.0], [11.1, 1.0], [11.2, 1.0], [11.3, 1.0], [11.4, 1.0], [11.5, 1.0], [11.6, 1.0], [11.7, 1.0], [11.8, 1.0], [11.9, 1.0], [12.0, 1.0], [12.1, 1.0], [12.2, 1.0], [12.3, 1.0], [12.4, 1.0], [12.5, 1.0], [12.6, 1.0], [12.7, 1.0], [12.8, 1.0], [12.9, 1.0], [13.0, 1.0], [13.1, 1.0], [13.2, 1.0], [13.3, 1.0], [13.4, 1.0], [13.5, 1.0], [13.6, 1.0], [13.7, 1.0], [13.8, 1.0], [13.9, 1.0], [14.0, 1.0], [14.1, 1.0], [14.2, 1.0], [14.3, 1.0], [14.4, 1.0], [14.5, 1.0], [14.6, 1.0], [14.7, 1.0], [14.8, 1.0], [14.9, 1.0], [15.0, 1.0], [15.1, 1.0], [15.2, 1.0], [15.3, 1.0], [15.4, 1.0], [15.5, 1.0], [15.6, 1.0], [15.7, 1.0], [15.8, 1.0], [15.9, 1.0], [16.0, 1.0], [16.1, 1.0], [16.2, 1.0], [16.3, 1.0], [16.4, 1.0], [16.5, 1.0], [16.6, 1.0], [16.7, 1.0], [16.8, 1.0], [16.9, 1.0], [17.0, 1.0], [17.1, 1.0], [17.2, 1.0], [17.3, 1.0], [17.4, 1.0], [17.5, 1.0], [17.6, 1.0], [17.7, 1.0], [17.8, 1.0], [17.9, 1.0], [18.0, 1.0], [18.1, 1.0], [18.2, 1.0], [18.3, 1.0], [18.4, 1.0], [18.5, 1.0], [18.6, 1.0], [18.7, 1.0], [18.8, 1.0], [18.9, 1.0], [19.0, 1.0], [19.1, 1.0], [19.2, 1.0], [19.3, 1.0], [19.4, 1.0], [19.5, 1.0], [19.6, 1.0], [19.7, 1.0], [19.8, 1.0], [19.9, 1.0], [20.0, 1.0], [20.1, 1.0], [20.2, 1.0], [20.3, 1.0], [20.4, 1.0], [20.5, 1.0], [20.6, 1.0], [20.7, 1.0], [20.8, 1.0], [20.9, 1.0], [21.0, 1.0], [21.1, 1.0], [21.2, 1.0], [21.3, 1.0], [21.4, 1.0], [21.5, 1.0], [21.6, 1.0], [21.7, 1.0], [21.8, 1.0], [21.9, 1.0], [22.0, 1.0], [22.1, 1.0], [22.2, 1.0], [22.3, 1.0], [22.4, 1.0], [22.5, 1.0], [22.6, 1.0], [22.7, 1.0], [22.8, 1.0], [22.9, 1.0], [23.0, 1.0], [23.1, 1.0], [23.2, 1.0], [23.3, 1.0], [23.4, 1.0], [23.5, 1.0], [23.6, 1.0], [23.7, 1.0], [23.8, 1.0], [23.9, 1.0], [24.0, 1.0], [24.1, 1.0], [24.2, 1.0], [24.3, 1.0], [24.4, 1.0], [24.5, 1.0], [24.6, 1.0], [24.7, 1.0], [24.8, 1.0], [24.9, 1.0], [25.0, 1.0], [25.1, 1.0], [25.2, 1.0], [25.3, 1.0], [25.4, 1.0], [25.5, 1.0], [25.6, 1.0], [25.7, 1.0], [25.8, 1.0], [25.9, 1.0], [26.0, 1.0], [26.1, 1.0], [26.2, 1.0], [26.3, 1.0], [26.4, 1.0], [26.5, 1.0], [26.6, 1.0], [26.7, 1.0], [26.8, 1.0], [26.9, 1.0], [27.0, 1.0], [27.1, 1.0], [27.2, 1.0], [27.3, 1.0], [27.4, 1.0], [27.5, 1.0], [27.6, 1.0], [27.7, 1.0], [27.8, 1.0], [27.9, 1.0], [28.0, 1.0], [28.1, 1.0], [28.2, 1.0], [28.3, 1.0], [28.4, 1.0], [28.5, 1.0], [28.6, 1.0], [28.7, 1.0], [28.8, 1.0], [28.9, 1.0], [29.0, 1.0], [29.1, 1.0], [29.2, 1.0], [29.3, 1.0], [29.4, 1.0], [29.5, 1.0], [29.6, 1.0], [29.7, 1.0], [29.8, 1.0], [29.9, 1.0], [30.0, 1.0], [30.1, 1.0], [30.2, 1.0], [30.3, 1.0], [30.4, 1.0], [30.5, 1.0], [30.6, 1.0], [30.7, 1.0], [30.8, 1.0], [30.9, 1.0], [31.0, 1.0], [31.1, 1.0], [31.2, 1.0], [31.3, 1.0], [31.4, 1.0], [31.5, 1.0], [31.6, 1.0], [31.7, 1.0], [31.8, 1.0], [31.9, 1.0], [32.0, 1.0], [32.1, 1.0], [32.2, 1.0], [32.3, 1.0], [32.4, 1.0], [32.5, 1.0], [32.6, 1.0], [32.7, 1.0], [32.8, 1.0], [32.9, 1.0], [33.0, 1.0], [33.1, 1.0], [33.2, 1.0], [33.3, 1.0], [33.4, 1.0], [33.5, 1.0], [33.6, 1.0], [33.7, 1.0], [33.8, 1.0], [33.9, 1.0], [34.0, 1.0], [34.1, 1.0], [34.2, 1.0], [34.3, 1.0], [34.4, 1.0], [34.5, 1.0], [34.6, 1.0], [34.7, 1.0], [34.8, 1.0], [34.9, 1.0], [35.0, 1.0], [35.1, 1.0], [35.2, 1.0], [35.3, 1.0], [35.4, 1.0], [35.5, 1.0], [35.6, 1.0], [35.7, 1.0], [35.8, 1.0], [35.9, 1.0], [36.0, 1.0], [36.1, 1.0], [36.2, 1.0], [36.3, 1.0], [36.4, 1.0], [36.5, 1.0], [36.6, 1.0], [36.7, 1.0], [36.8, 1.0], [36.9, 1.0], [37.0, 1.0], [37.1, 1.0], [37.2, 1.0], [37.3, 1.0], [37.4, 1.0], [37.5, 1.0], [37.6, 1.0], [37.7, 1.0], [37.8, 1.0], [37.9, 1.0], [38.0, 1.0], [38.1, 1.0], [38.2, 1.0], [38.3, 1.0], [38.4, 1.0], [38.5, 1.0], [38.6, 1.0], [38.7, 1.0], [38.8, 1.0], [38.9, 1.0], [39.0, 1.0], [39.1, 1.0], [39.2, 1.0], [39.3, 1.0], [39.4, 1.0], [39.5, 1.0], [39.6, 1.0], [39.7, 1.0], [39.8, 1.0], [39.9, 1.0], [40.0, 1.0], [40.1, 1.0], [40.2, 1.0], [40.3, 1.0], [40.4, 1.0], [40.5, 1.0], [40.6, 1.0], [40.7, 1.0], [40.8, 1.0], [40.9, 1.0], [41.0, 1.0], [41.1, 1.0], [41.2, 1.0], [41.3, 1.0], [41.4, 1.0], [41.5, 1.0], [41.6, 1.0], [41.7, 1.0], [41.8, 1.0], [41.9, 1.0], [42.0, 1.0], [42.1, 1.0], [42.2, 1.0], [42.3, 1.0], [42.4, 1.0], [42.5, 1.0], [42.6, 1.0], [42.7, 1.0], [42.8, 1.0], [42.9, 1.0], [43.0, 1.0], [43.1, 1.0], [43.2, 1.0], [43.3, 1.0], [43.4, 1.0], [43.5, 1.0], [43.6, 1.0], [43.7, 1.0], [43.8, 1.0], [43.9, 1.0], [44.0, 1.0], [44.1, 1.0], [44.2, 1.0], [44.3, 1.0], [44.4, 1.0], [44.5, 1.0], [44.6, 1.0], [44.7, 1.0], [44.8, 1.0], [44.9, 1.0], [45.0, 1.0], [45.1, 1.0], [45.2, 1.0], [45.3, 1.0], [45.4, 1.0], [45.5, 1.0], [45.6, 1.0], [45.7, 1.0], [45.8, 1.0], [45.9, 1.0], [46.0, 1.0], [46.1, 1.0], [46.2, 1.0], [46.3, 1.0], [46.4, 1.0], [46.5, 1.0], [46.6, 1.0], [46.7, 1.0], [46.8, 1.0], [46.9, 1.0], [47.0, 1.0], [47.1, 1.0], [47.2, 1.0], [47.3, 1.0], [47.4, 1.0], [47.5, 1.0], [47.6, 1.0], [47.7, 1.0], [47.8, 1.0], [47.9, 1.0], [48.0, 1.0], [48.1, 1.0], [48.2, 1.0], [48.3, 1.0], [48.4, 1.0], [48.5, 1.0], [48.6, 1.0], [48.7, 1.0], [48.8, 1.0], [48.9, 1.0], [49.0, 1.0], [49.1, 1.0], [49.2, 1.0], [49.3, 1.0], [49.4, 1.0], [49.5, 1.0], [49.6, 1.0], [49.7, 1.0], [49.8, 1.0], [49.9, 1.0], [50.0, 1.0], [50.1, 1.0], [50.2, 1.0], [50.3, 1.0], [50.4, 1.0], [50.5, 1.0], [50.6, 1.0], [50.7, 1.0], [50.8, 1.0], [50.9, 1.0], [51.0, 1.0], [51.1, 1.0], [51.2, 1.0], [51.3, 1.0], [51.4, 1.0], [51.5, 1.0], [51.6, 1.0], [51.7, 1.0], [51.8, 1.0], [51.9, 1.0], [52.0, 1.0], [52.1, 1.0], [52.2, 1.0], [52.3, 1.0], [52.4, 1.0], [52.5, 1.0], [52.6, 1.0], [52.7, 1.0], [52.8, 1.0], [52.9, 1.0], [53.0, 1.0], [53.1, 1.0], [53.2, 1.0], [53.3, 1.0], [53.4, 1.0], [53.5, 1.0], [53.6, 1.0], [53.7, 1.0], [53.8, 1.0], [53.9, 1.0], [54.0, 1.0], [54.1, 1.0], [54.2, 1.0], [54.3, 1.0], [54.4, 1.0], [54.5, 1.0], [54.6, 1.0], [54.7, 1.0], [54.8, 1.0], [54.9, 1.0], [55.0, 1.0], [55.1, 1.0], [55.2, 1.0], [55.3, 1.0], [55.4, 1.0], [55.5, 1.0], [55.6, 1.0], [55.7, 1.0], [55.8, 1.0], [55.9, 1.0], [56.0, 1.0], [56.1, 1.0], [56.2, 1.0], [56.3, 1.0], [56.4, 1.0], [56.5, 1.0], [56.6, 1.0], [56.7, 1.0], [56.8, 1.0], [56.9, 1.0], [57.0, 1.0], [57.1, 1.0], [57.2, 1.0], [57.3, 1.0], [57.4, 1.0], [57.5, 1.0], [57.6, 1.0], [57.7, 1.0], [57.8, 1.0], [57.9, 1.0], [58.0, 1.0], [58.1, 1.0], [58.2, 1.0], [58.3, 1.0], [58.4, 1.0], [58.5, 1.0], [58.6, 1.0], [58.7, 1.0], [58.8, 1.0], [58.9, 1.0], [59.0, 1.0], [59.1, 1.0], [59.2, 1.0], [59.3, 1.0], [59.4, 1.0], [59.5, 1.0], [59.6, 1.0], [59.7, 1.0], [59.8, 1.0], [59.9, 1.0], [60.0, 1.0], [60.1, 1.0], [60.2, 1.0], [60.3, 1.0], [60.4, 1.0], [60.5, 1.0], [60.6, 1.0], [60.7, 1.0], [60.8, 1.0], [60.9, 1.0], [61.0, 1.0], [61.1, 1.0], [61.2, 1.0], [61.3, 1.0], [61.4, 1.0], [61.5, 1.0], [61.6, 1.0], [61.7, 1.0], [61.8, 1.0], [61.9, 1.0], [62.0, 1.0], [62.1, 1.0], [62.2, 1.0], [62.3, 1.0], [62.4, 1.0], [62.5, 1.0], [62.6, 1.0], [62.7, 1.0], [62.8, 1.0], [62.9, 1.0], [63.0, 1.0], [63.1, 1.0], [63.2, 1.0], [63.3, 1.0], [63.4, 1.0], [63.5, 1.0], [63.6, 1.0], [63.7, 1.0], [63.8, 1.0], [63.9, 1.0], [64.0, 1.0], [64.1, 1.0], [64.2, 1.0], [64.3, 1.0], [64.4, 1.0], [64.5, 1.0], [64.6, 1.0], [64.7, 1.0], [64.8, 1.0], [64.9, 1.0], [65.0, 1.0], [65.1, 1.0], [65.2, 1.0], [65.3, 1.0], [65.4, 1.0], [65.5, 1.0], [65.6, 1.0], [65.7, 1.0], [65.8, 1.0], [65.9, 1.0], [66.0, 1.0], [66.1, 1.0], [66.2, 1.0], [66.3, 1.0], [66.4, 1.0], [66.5, 1.0], [66.6, 1.0], [66.7, 1.0], [66.8, 1.0], [66.9, 1.0], [67.0, 1.0], [67.1, 1.0], [67.2, 1.0], [67.3, 1.0], [67.4, 1.0], [67.5, 1.0], [67.6, 1.0], [67.7, 1.0], [67.8, 1.0], [67.9, 1.0], [68.0, 1.0], [68.1, 1.0], [68.2, 1.0], [68.3, 1.0], [68.4, 1.0], [68.5, 1.0], [68.6, 1.0], [68.7, 1.0], [68.8, 1.0], [68.9, 1.0], [69.0, 1.0], [69.1, 1.0], [69.2, 1.0], [69.3, 1.0], [69.4, 1.0], [69.5, 1.0], [69.6, 1.0], [69.7, 1.0], [69.8, 1.0], [69.9, 1.0], [70.0, 1.0], [70.1, 1.0], [70.2, 1.0], [70.3, 1.0], [70.4, 1.0], [70.5, 1.0], [70.6, 1.0], [70.7, 1.0], [70.8, 1.0], [70.9, 1.0], [71.0, 1.0], [71.1, 1.0], [71.2, 1.0], [71.3, 1.0], [71.4, 1.0], [71.5, 1.0], [71.6, 1.0], [71.7, 1.0], [71.8, 1.0], [71.9, 1.0], [72.0, 1.0], [72.1, 1.0], [72.2, 1.0], [72.3, 1.0], [72.4, 1.0], [72.5, 1.0], [72.6, 1.0], [72.7, 1.0], [72.8, 1.0], [72.9, 1.0], [73.0, 1.0], [73.1, 1.0], [73.2, 1.0], [73.3, 1.0], [73.4, 1.0], [73.5, 1.0], [73.6, 1.0], [73.7, 1.0], [73.8, 1.0], [73.9, 1.0], [74.0, 1.0], [74.1, 1.0], [74.2, 1.0], [74.3, 1.0], [74.4, 1.0], [74.5, 1.0], [74.6, 1.0], [74.7, 1.0], [74.8, 1.0], [74.9, 1.0], [75.0, 1.0], [75.1, 1.0], [75.2, 1.0], [75.3, 1.0], [75.4, 1.0], [75.5, 1.0], [75.6, 1.0], [75.7, 1.0], [75.8, 1.0], [75.9, 1.0], [76.0, 1.0], [76.1, 1.0], [76.2, 1.0], [76.3, 1.0], [76.4, 1.0], [76.5, 1.0], [76.6, 1.0], [76.7, 1.0], [76.8, 1.0], [76.9, 1.0], [77.0, 1.0], [77.1, 1.0], [77.2, 1.0], [77.3, 1.0], [77.4, 1.0], [77.5, 1.0], [77.6, 1.0], [77.7, 1.0], [77.8, 1.0], [77.9, 1.0], [78.0, 1.0], [78.1, 1.0], [78.2, 1.0], [78.3, 1.0], [78.4, 1.0], [78.5, 1.0], [78.6, 1.0], [78.7, 1.0], [78.8, 1.0], [78.9, 1.0], [79.0, 1.0], [79.1, 1.0], [79.2, 1.0], [79.3, 1.0], [79.4, 1.0], [79.5, 1.0], [79.6, 1.0], [79.7, 1.0], [79.8, 1.0], [79.9, 1.0], [80.0, 1.0], [80.1, 1.0], [80.2, 1.0], [80.3, 1.0], [80.4, 1.0], [80.5, 1.0], [80.6, 1.0], [80.7, 1.0], [80.8, 1.0], [80.9, 1.0], [81.0, 1.0], [81.1, 1.0], [81.2, 1.0], [81.3, 1.0], [81.4, 1.0], [81.5, 1.0], [81.6, 1.0], [81.7, 1.0], [81.8, 1.0], [81.9, 1.0], [82.0, 1.0], [82.1, 1.0], [82.2, 1.0], [82.3, 1.0], [82.4, 1.0], [82.5, 1.0], [82.6, 1.0], [82.7, 1.0], [82.8, 1.0], [82.9, 1.0], [83.0, 1.0], [83.1, 1.0], [83.2, 1.0], [83.3, 1.0], [83.4, 1.0], [83.5, 1.0], [83.6, 1.0], [83.7, 1.0], [83.8, 1.0], [83.9, 1.0], [84.0, 1.0], [84.1, 1.0], [84.2, 1.0], [84.3, 1.0], [84.4, 1.0], [84.5, 1.0], [84.6, 1.0], [84.7, 1.0], [84.8, 1.0], [84.9, 1.0], [85.0, 1.0], [85.1, 1.0], [85.2, 1.0], [85.3, 1.0], [85.4, 1.0], [85.5, 1.0], [85.6, 1.0], [85.7, 1.0], [85.8, 1.0], [85.9, 1.0], [86.0, 1.0], [86.1, 1.0], [86.2, 1.0], [86.3, 1.0], [86.4, 1.0], [86.5, 1.0], [86.6, 1.0], [86.7, 1.0], [86.8, 1.0], [86.9, 1.0], [87.0, 1.0], [87.1, 1.0], [87.2, 1.0], [87.3, 1.0], [87.4, 1.0], [87.5, 1.0], [87.6, 1.0], [87.7, 1.0], [87.8, 1.0], [87.9, 1.0], [88.0, 1.0], [88.1, 1.0], [88.2, 1.0], [88.3, 1.0], [88.4, 1.0], [88.5, 1.0], [88.6, 1.0], [88.7, 1.0], [88.8, 1.0], [88.9, 1.0], [89.0, 1.0], [89.1, 1.0], [89.2, 1.0], [89.3, 1.0], [89.4, 1.0], [89.5, 1.0], [89.6, 1.0], [89.7, 1.0], [89.8, 1.0], [89.9, 1.0], [90.0, 1.0], [90.1, 1.0], [90.2, 1.0], [90.3, 1.0], [90.4, 1.0], [90.5, 1.0], [90.6, 1.0], [90.7, 1.0], [90.8, 1.0], [90.9, 1.0], [91.0, 1.0], [91.1, 1.0], [91.2, 1.0], [91.3, 1.0], [91.4, 1.0], [91.5, 1.0], [91.6, 1.0], [91.7, 1.0], [91.8, 1.0], [91.9, 1.0], [92.0, 1.0], [92.1, 1.0], [92.2, 1.0], [92.3, 1.0], [92.4, 1.0], [92.5, 1.0], [92.6, 1.0], [92.7, 1.0], [92.8, 1.0], [92.9, 1.0], [93.0, 1.0], [93.1, 1.0], [93.2, 1.0], [93.3, 1.0], [93.4, 1.0], [93.5, 1.0], [93.6, 1.0], [93.7, 1.0], [93.8, 1.0], [93.9, 1.0], [94.0, 1.0], [94.1, 1.0], [94.2, 1.0], [94.3, 1.0], [94.4, 1.0], [94.5, 1.0], [94.6, 1.0], [94.7, 1.0], [94.8, 1.0], [94.9, 1.0], [95.0, 1.0], [95.1, 1.0], [95.2, 1.0], [95.3, 1.0], [95.4, 1.0], [95.5, 1.0], [95.6, 1.0], [95.7, 1.0], [95.8, 1.0], [95.9, 1.0], [96.0, 1.0], [96.1, 1.0], [96.2, 1.0], [96.3, 1.0], [96.4, 1.0], [96.5, 1.0], [96.6, 1.0], [96.7, 1.0], [96.8, 1.0], [96.9, 1.0], [97.0, 1.0], [97.1, 1.0], [97.2, 1.0], [97.3, 1.0], [97.4, 1.0], [97.5, 1.0], [97.6, 1.0], [97.7, 1.0], [97.8, 1.0], [97.9, 1.0], [98.0, 1.0], [98.1, 1.0], [98.2, 1.0], [98.3, 1.0], [98.4, 1.0], [98.5, 1.0], [98.6, 1.0], [98.7, 1.0], [98.8, 1.0], [98.9, 1.0], [99.0, 1.0], [99.1, 1.0], [99.2, 1.0], [99.3, 1.0], [99.4, 1.0], [99.5, 1.0], [99.6, 1.0], [99.7, 1.0], [99.8, 1.0], [99.9, 1.0]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[0.0, 92.0], [0.1, 93.0], [0.2, 93.0], [0.3, 94.0], [0.4, 95.0], [0.5, 106.0], [0.6, 109.0], [0.7, 110.0], [0.8, 110.0], [0.9, 111.0], [1.0, 113.0], [1.1, 114.0], [1.2, 115.0], [1.3, 117.0], [1.4, 126.0], [1.5, 144.0], [1.6, 151.0], [1.7, 154.0], [1.8, 157.0], [1.9, 160.0], [2.0, 163.0], [2.1, 166.0], [2.2, 170.0], [2.3, 174.0], [2.4, 180.0], [2.5, 184.0], [2.6, 188.0], [2.7, 193.0], [2.8, 195.0], [2.9, 200.0], [3.0, 203.0], [3.1, 204.0], [3.2, 207.0], [3.3, 210.0], [3.4, 216.0], [3.5, 219.0], [3.6, 222.0], [3.7, 224.0], [3.8, 227.0], [3.9, 230.0], [4.0, 234.0], [4.1, 238.0], [4.2, 242.0], [4.3, 244.0], [4.4, 248.0], [4.5, 252.0], [4.6, 256.0], [4.7, 259.0], [4.8, 263.0], [4.9, 267.0], [5.0, 270.0], [5.1, 274.0], [5.2, 278.0], [5.3, 281.0], [5.4, 285.0], [5.5, 288.0], [5.6, 291.0], [5.7, 294.0], [5.8, 296.0], [5.9, 299.0], [6.0, 301.0], [6.1, 303.0], [6.2, 307.0], [6.3, 309.0], [6.4, 310.0], [6.5, 312.0], [6.6, 313.0], [6.7, 314.0], [6.8, 315.0], [6.9, 316.0], [7.0, 317.0], [7.1, 318.0], [7.2, 319.0], [7.3, 321.0], [7.4, 321.0], [7.5, 323.0], [7.6, 323.0], [7.7, 324.0], [7.8, 325.0], [7.9, 326.0], [8.0, 326.0], [8.1, 327.0], [8.2, 328.0], [8.3, 328.0], [8.4, 329.0], [8.5, 330.0], [8.6, 331.0], [8.7, 331.0], [8.8, 332.0], [8.9, 332.0], [9.0, 333.0], [9.1, 333.0], [9.2, 334.0], [9.3, 334.0], [9.4, 336.0], [9.5, 336.0], [9.6, 337.0], [9.7, 337.0], [9.8, 338.0], [9.9, 338.0], [10.0, 339.0], [10.1, 340.0], [10.2, 340.0], [10.3, 341.0], [10.4, 342.0], [10.5, 342.0], [10.6, 343.0], [10.7, 343.0], [10.8, 344.0], [10.9, 344.0], [11.0, 345.0], [11.1, 345.0], [11.2, 346.0], [11.3, 346.0], [11.4, 347.0], [11.5, 347.0], [11.6, 348.0], [11.7, 348.0], [11.8, 348.0], [11.9, 349.0], [12.0, 349.0], [12.1, 350.0], [12.2, 350.0], [12.3, 350.0], [12.4, 351.0], [12.5, 351.0], [12.6, 352.0], [12.7, 352.0], [12.8, 352.0], [12.9, 353.0], [13.0, 353.0], [13.1, 354.0], [13.2, 354.0], [13.3, 354.0], [13.4, 355.0], [13.5, 355.0], [13.6, 356.0], [13.7, 356.0], [13.8, 356.0], [13.9, 356.0], [14.0, 357.0], [14.1, 357.0], [14.2, 358.0], [14.3, 358.0], [14.4, 358.0], [14.5, 359.0], [14.6, 359.0], [14.7, 359.0], [14.8, 360.0], [14.9, 360.0], [15.0, 360.0], [15.1, 361.0], [15.2, 361.0], [15.3, 361.0], [15.4, 362.0], [15.5, 362.0], [15.6, 363.0], [15.7, 363.0], [15.8, 363.0], [15.9, 364.0], [16.0, 364.0], [16.1, 365.0], [16.2, 365.0], [16.3, 366.0], [16.4, 366.0], [16.5, 366.0], [16.6, 367.0], [16.7, 367.0], [16.8, 367.0], [16.9, 367.0], [17.0, 368.0], [17.1, 368.0], [17.2, 368.0], [17.3, 369.0], [17.4, 369.0], [17.5, 369.0], [17.6, 370.0], [17.7, 370.0], [17.8, 370.0], [17.9, 371.0], [18.0, 371.0], [18.1, 371.0], [18.2, 372.0], [18.3, 372.0], [18.4, 373.0], [18.5, 373.0], [18.6, 373.0], [18.7, 373.0], [18.8, 374.0], [18.9, 374.0], [19.0, 375.0], [19.1, 375.0], [19.2, 375.0], [19.3, 375.0], [19.4, 376.0], [19.5, 376.0], [19.6, 376.0], [19.7, 377.0], [19.8, 377.0], [19.9, 377.0], [20.0, 377.0], [20.1, 378.0], [20.2, 378.0], [20.3, 378.0], [20.4, 378.0], [20.5, 379.0], [20.6, 379.0], [20.7, 379.0], [20.8, 380.0], [20.9, 380.0], [21.0, 380.0], [21.1, 380.0], [21.2, 381.0], [21.3, 381.0], [21.4, 382.0], [21.5, 382.0], [21.6, 382.0], [21.7, 382.0], [21.8, 383.0], [21.9, 383.0], [22.0, 383.0], [22.1, 383.0], [22.2, 384.0], [22.3, 384.0], [22.4, 384.0], [22.5, 384.0], [22.6, 385.0], [22.7, 385.0], [22.8, 385.0], [22.9, 386.0], [23.0, 386.0], [23.1, 386.0], [23.2, 387.0], [23.3, 387.0], [23.4, 387.0], [23.5, 387.0], [23.6, 388.0], [23.7, 388.0], [23.8, 388.0], [23.9, 388.0], [24.0, 389.0], [24.1, 389.0], [24.2, 389.0], [24.3, 389.0], [24.4, 390.0], [24.5, 390.0], [24.6, 390.0], [24.7, 390.0], [24.8, 391.0], [24.9, 391.0], [25.0, 391.0], [25.1, 391.0], [25.2, 392.0], [25.3, 392.0], [25.4, 392.0], [25.5, 392.0], [25.6, 393.0], [25.7, 393.0], [25.8, 393.0], [25.9, 393.0], [26.0, 394.0], [26.1, 394.0], [26.2, 394.0], [26.3, 394.0], [26.4, 395.0], [26.5, 395.0], [26.6, 396.0], [26.7, 396.0], [26.8, 396.0], [26.9, 397.0], [27.0, 397.0], [27.1, 397.0], [27.2, 398.0], [27.3, 398.0], [27.4, 398.0], [27.5, 399.0], [27.6, 399.0], [27.7, 399.0], [27.8, 399.0], [27.9, 400.0], [28.0, 400.0], [28.1, 400.0], [28.2, 400.0], [28.3, 401.0], [28.4, 401.0], [28.5, 401.0], [28.6, 402.0], [28.7, 402.0], [28.8, 402.0], [28.9, 403.0], [29.0, 403.0], [29.1, 403.0], [29.2, 404.0], [29.3, 404.0], [29.4, 404.0], [29.5, 405.0], [29.6, 405.0], [29.7, 405.0], [29.8, 406.0], [29.9, 406.0], [30.0, 406.0], [30.1, 406.0], [30.2, 407.0], [30.3, 407.0], [30.4, 407.0], [30.5, 408.0], [30.6, 408.0], [30.7, 408.0], [30.8, 408.0], [30.9, 409.0], [31.0, 409.0], [31.1, 409.0], [31.2, 410.0], [31.3, 410.0], [31.4, 410.0], [31.5, 410.0], [31.6, 411.0], [31.7, 411.0], [31.8, 411.0], [31.9, 412.0], [32.0, 412.0], [32.1, 412.0], [32.2, 413.0], [32.3, 413.0], [32.4, 413.0], [32.5, 413.0], [32.6, 414.0], [32.7, 414.0], [32.8, 414.0], [32.9, 415.0], [33.0, 415.0], [33.1, 415.0], [33.2, 415.0], [33.3, 416.0], [33.4, 416.0], [33.5, 416.0], [33.6, 416.0], [33.7, 417.0], [33.8, 417.0], [33.9, 417.0], [34.0, 418.0], [34.1, 418.0], [34.2, 418.0], [34.3, 419.0], [34.4, 419.0], [34.5, 419.0], [34.6, 419.0], [34.7, 420.0], [34.8, 420.0], [34.9, 420.0], [35.0, 421.0], [35.1, 421.0], [35.2, 421.0], [35.3, 421.0], [35.4, 422.0], [35.5, 422.0], [35.6, 422.0], [35.7, 423.0], [35.8, 423.0], [35.9, 423.0], [36.0, 423.0], [36.1, 424.0], [36.2, 424.0], [36.3, 424.0], [36.4, 425.0], [36.5, 425.0], [36.6, 425.0], [36.7, 425.0], [36.8, 426.0], [36.9, 426.0], [37.0, 426.0], [37.1, 427.0], [37.2, 427.0], [37.3, 427.0], [37.4, 427.0], [37.5, 428.0], [37.6, 428.0], [37.7, 428.0], [37.8, 428.0], [37.9, 429.0], [38.0, 429.0], [38.1, 429.0], [38.2, 430.0], [38.3, 430.0], [38.4, 430.0], [38.5, 430.0], [38.6, 431.0], [38.7, 431.0], [38.8, 431.0], [38.9, 432.0], [39.0, 432.0], [39.1, 432.0], [39.2, 433.0], [39.3, 433.0], [39.4, 433.0], [39.5, 433.0], [39.6, 434.0], [39.7, 434.0], [39.8, 434.0], [39.9, 435.0], [40.0, 435.0], [40.1, 435.0], [40.2, 435.0], [40.3, 436.0], [40.4, 436.0], [40.5, 436.0], [40.6, 437.0], [40.7, 437.0], [40.8, 437.0], [40.9, 437.0], [41.0, 438.0], [41.1, 438.0], [41.2, 438.0], [41.3, 438.0], [41.4, 439.0], [41.5, 439.0], [41.6, 439.0], [41.7, 440.0], [41.8, 440.0], [41.9, 440.0], [42.0, 441.0], [42.1, 441.0], [42.2, 441.0], [42.3, 442.0], [42.4, 442.0], [42.5, 442.0], [42.6, 443.0], [42.7, 443.0], [42.8, 443.0], [42.9, 444.0], [43.0, 444.0], [43.1, 444.0], [43.2, 444.0], [43.3, 445.0], [43.4, 445.0], [43.5, 445.0], [43.6, 446.0], [43.7, 446.0], [43.8, 446.0], [43.9, 447.0], [44.0, 447.0], [44.1, 447.0], [44.2, 448.0], [44.3, 448.0], [44.4, 448.0], [44.5, 448.0], [44.6, 449.0], [44.7, 449.0], [44.8, 449.0], [44.9, 449.0], [45.0, 450.0], [45.1, 450.0], [45.2, 450.0], [45.3, 450.0], [45.4, 451.0], [45.5, 451.0], [45.6, 452.0], [45.7, 452.0], [45.8, 452.0], [45.9, 453.0], [46.0, 453.0], [46.1, 453.0], [46.2, 453.0], [46.3, 454.0], [46.4, 454.0], [46.5, 454.0], [46.6, 455.0], [46.7, 455.0], [46.8, 455.0], [46.9, 456.0], [47.0, 456.0], [47.1, 456.0], [47.2, 457.0], [47.3, 457.0], [47.4, 458.0], [47.5, 458.0], [47.6, 459.0], [47.7, 459.0], [47.8, 459.0], [47.9, 460.0], [48.0, 460.0], [48.1, 461.0], [48.2, 461.0], [48.3, 462.0], [48.4, 462.0], [48.5, 462.0], [48.6, 463.0], [48.7, 463.0], [48.8, 464.0], [48.9, 464.0], [49.0, 464.0], [49.1, 465.0], [49.2, 465.0], [49.3, 465.0], [49.4, 466.0], [49.5, 466.0], [49.6, 467.0], [49.7, 467.0], [49.8, 467.0], [49.9, 468.0], [50.0, 468.0], [50.1, 468.0], [50.2, 469.0], [50.3, 469.0], [50.4, 469.0], [50.5, 470.0], [50.6, 470.0], [50.7, 471.0], [50.8, 471.0], [50.9, 471.0], [51.0, 471.0], [51.1, 472.0], [51.2, 473.0], [51.3, 473.0], [51.4, 473.0], [51.5, 473.0], [51.6, 474.0], [51.7, 474.0], [51.8, 475.0], [51.9, 475.0], [52.0, 476.0], [52.1, 476.0], [52.2, 477.0], [52.3, 477.0], [52.4, 477.0], [52.5, 478.0], [52.6, 478.0], [52.7, 479.0], [52.8, 479.0], [52.9, 480.0], [53.0, 480.0], [53.1, 480.0], [53.2, 481.0], [53.3, 481.0], [53.4, 481.0], [53.5, 482.0], [53.6, 482.0], [53.7, 483.0], [53.8, 483.0], [53.9, 484.0], [54.0, 484.0], [54.1, 484.0], [54.2, 485.0], [54.3, 485.0], [54.4, 486.0], [54.5, 487.0], [54.6, 487.0], [54.7, 487.0], [54.8, 488.0], [54.9, 488.0], [55.0, 489.0], [55.1, 489.0], [55.2, 490.0], [55.3, 490.0], [55.4, 491.0], [55.5, 492.0], [55.6, 492.0], [55.7, 493.0], [55.8, 493.0], [55.9, 494.0], [56.0, 494.0], [56.1, 494.0], [56.2, 495.0], [56.3, 495.0], [56.4, 496.0], [56.5, 496.0], [56.6, 497.0], [56.7, 497.0], [56.8, 498.0], [56.9, 499.0], [57.0, 499.0], [57.1, 499.0], [57.2, 500.0], [57.3, 501.0], [57.4, 501.0], [57.5, 501.0], [57.6, 502.0], [57.7, 502.0], [57.8, 503.0], [57.9, 504.0], [58.0, 504.0], [58.1, 505.0], [58.2, 506.0], [58.3, 506.0], [58.4, 507.0], [58.5, 507.0], [58.6, 508.0], [58.7, 508.0], [58.8, 509.0], [58.9, 510.0], [59.0, 510.0], [59.1, 511.0], [59.2, 512.0], [59.3, 512.0], [59.4, 513.0], [59.5, 514.0], [59.6, 514.0], [59.7, 515.0], [59.8, 516.0], [59.9, 516.0], [60.0, 517.0], [60.1, 518.0], [60.2, 519.0], [60.3, 520.0], [60.4, 521.0], [60.5, 522.0], [60.6, 523.0], [60.7, 523.0], [60.8, 523.0], [60.9, 524.0], [61.0, 525.0], [61.1, 526.0], [61.2, 526.0], [61.3, 527.0], [61.4, 527.0], [61.5, 528.0], [61.6, 529.0], [61.7, 530.0], [61.8, 531.0], [61.9, 531.0], [62.0, 532.0], [62.1, 532.0], [62.2, 533.0], [62.3, 534.0], [62.4, 534.0], [62.5, 535.0], [62.6, 535.0], [62.7, 536.0], [62.8, 537.0], [62.9, 538.0], [63.0, 538.0], [63.1, 539.0], [63.2, 540.0], [63.3, 540.0], [63.4, 541.0], [63.5, 541.0], [63.6, 542.0], [63.7, 542.0], [63.8, 543.0], [63.9, 544.0], [64.0, 545.0], [64.1, 546.0], [64.2, 547.0], [64.3, 548.0], [64.4, 549.0], [64.5, 549.0], [64.6, 550.0], [64.7, 551.0], [64.8, 552.0], [64.9, 552.0], [65.0, 553.0], [65.1, 554.0], [65.2, 555.0], [65.3, 556.0], [65.4, 556.0], [65.5, 557.0], [65.6, 558.0], [65.7, 558.0], [65.8, 559.0], [65.9, 560.0], [66.0, 561.0], [66.1, 561.0], [66.2, 562.0], [66.3, 563.0], [66.4, 564.0], [66.5, 565.0], [66.6, 565.0], [66.7, 566.0], [66.8, 566.0], [66.9, 567.0], [67.0, 568.0], [67.1, 568.0], [67.2, 569.0], [67.3, 570.0], [67.4, 570.0], [67.5, 572.0], [67.6, 573.0], [67.7, 574.0], [67.8, 575.0], [67.9, 575.0], [68.0, 576.0], [68.1, 577.0], [68.2, 578.0], [68.3, 578.0], [68.4, 579.0], [68.5, 579.0], [68.6, 580.0], [68.7, 581.0], [68.8, 582.0], [68.9, 583.0], [69.0, 584.0], [69.1, 585.0], [69.2, 585.0], [69.3, 586.0], [69.4, 586.0], [69.5, 587.0], [69.6, 587.0], [69.7, 588.0], [69.8, 589.0], [69.9, 590.0], [70.0, 590.0], [70.1, 591.0], [70.2, 592.0], [70.3, 592.0], [70.4, 593.0], [70.5, 593.0], [70.6, 594.0], [70.7, 595.0], [70.8, 596.0], [70.9, 596.0], [71.0, 597.0], [71.1, 597.0], [71.2, 598.0], [71.3, 598.0], [71.4, 599.0], [71.5, 600.0], [71.6, 600.0], [71.7, 601.0], [71.8, 601.0], [71.9, 602.0], [72.0, 603.0], [72.1, 603.0], [72.2, 604.0], [72.3, 604.0], [72.4, 605.0], [72.5, 606.0], [72.6, 607.0], [72.7, 608.0], [72.8, 608.0], [72.9, 608.0], [73.0, 609.0], [73.1, 609.0], [73.2, 610.0], [73.3, 610.0], [73.4, 611.0], [73.5, 611.0], [73.6, 612.0], [73.7, 613.0], [73.8, 613.0], [73.9, 614.0], [74.0, 614.0], [74.1, 615.0], [74.2, 616.0], [74.3, 616.0], [74.4, 616.0], [74.5, 617.0], [74.6, 617.0], [74.7, 618.0], [74.8, 619.0], [74.9, 619.0], [75.0, 620.0], [75.1, 620.0], [75.2, 621.0], [75.3, 622.0], [75.4, 622.0], [75.5, 623.0], [75.6, 624.0], [75.7, 624.0], [75.8, 625.0], [75.9, 625.0], [76.0, 626.0], [76.1, 626.0], [76.2, 627.0], [76.3, 628.0], [76.4, 628.0], [76.5, 629.0], [76.6, 629.0], [76.7, 630.0], [76.8, 631.0], [76.9, 631.0], [77.0, 632.0], [77.1, 632.0], [77.2, 633.0], [77.3, 633.0], [77.4, 634.0], [77.5, 634.0], [77.6, 635.0], [77.7, 636.0], [77.8, 636.0], [77.9, 637.0], [78.0, 637.0], [78.1, 638.0], [78.2, 638.0], [78.3, 639.0], [78.4, 639.0], [78.5, 640.0], [78.6, 640.0], [78.7, 641.0], [78.8, 642.0], [78.9, 642.0], [79.0, 642.0], [79.1, 643.0], [79.2, 644.0], [79.3, 644.0], [79.4, 645.0], [79.5, 645.0], [79.6, 646.0], [79.7, 646.0], [79.8, 646.0], [79.9, 647.0], [80.0, 647.0], [80.1, 648.0], [80.2, 649.0], [80.3, 649.0], [80.4, 649.0], [80.5, 650.0], [80.6, 651.0], [80.7, 651.0], [80.8, 652.0], [80.9, 652.0], [81.0, 653.0], [81.1, 653.0], [81.2, 654.0], [81.3, 654.0], [81.4, 655.0], [81.5, 655.0], [81.6, 656.0], [81.7, 656.0], [81.8, 657.0], [81.9, 657.0], [82.0, 658.0], [82.1, 658.0], [82.2, 659.0], [82.3, 659.0], [82.4, 659.0], [82.5, 660.0], [82.6, 660.0], [82.7, 660.0], [82.8, 661.0], [82.9, 661.0], [83.0, 662.0], [83.1, 663.0], [83.2, 663.0], [83.3, 664.0], [83.4, 665.0], [83.5, 666.0], [83.6, 666.0], [83.7, 667.0], [83.8, 667.0], [83.9, 667.0], [84.0, 668.0], [84.1, 669.0], [84.2, 669.0], [84.3, 670.0], [84.4, 670.0], [84.5, 671.0], [84.6, 671.0], [84.7, 672.0], [84.8, 673.0], [84.9, 674.0], [85.0, 675.0], [85.1, 675.0], [85.2, 676.0], [85.3, 677.0], [85.4, 677.0], [85.5, 678.0], [85.6, 679.0], [85.7, 679.0], [85.8, 680.0], [85.9, 680.0], [86.0, 681.0], [86.1, 682.0], [86.2, 682.0], [86.3, 683.0], [86.4, 684.0], [86.5, 684.0], [86.6, 685.0], [86.7, 686.0], [86.8, 686.0], [86.9, 687.0], [87.0, 687.0], [87.1, 687.0], [87.2, 688.0], [87.3, 689.0], [87.4, 689.0], [87.5, 690.0], [87.6, 690.0], [87.7, 691.0], [87.8, 691.0], [87.9, 692.0], [88.0, 692.0], [88.1, 693.0], [88.2, 694.0], [88.3, 694.0], [88.4, 695.0], [88.5, 696.0], [88.6, 697.0], [88.7, 697.0], [88.8, 698.0], [88.9, 699.0], [89.0, 700.0], [89.1, 700.0], [89.2, 701.0], [89.3, 702.0], [89.4, 703.0], [89.5, 704.0], [89.6, 704.0], [89.7, 705.0], [89.8, 706.0], [89.9, 707.0], [90.0, 707.0], [90.1, 708.0], [90.2, 709.0], [90.3, 710.0], [90.4, 710.0], [90.5, 711.0], [90.6, 712.0], [90.7, 713.0], [90.8, 713.0], [90.9, 714.0], [91.0, 715.0], [91.1, 715.0], [91.2, 716.0], [91.3, 717.0], [91.4, 718.0], [91.5, 719.0], [91.6, 719.0], [91.7, 720.0], [91.8, 721.0], [91.9, 722.0], [92.0, 722.0], [92.1, 723.0], [92.2, 724.0], [92.3, 725.0], [92.4, 726.0], [92.5, 726.0], [92.6, 727.0], [92.7, 728.0], [92.8, 729.0], [92.9, 730.0], [93.0, 731.0], [93.1, 732.0], [93.2, 733.0], [93.3, 734.0], [93.4, 735.0], [93.5, 736.0], [93.6, 737.0], [93.7, 738.0], [93.8, 739.0], [93.9, 740.0], [94.0, 741.0], [94.1, 742.0], [94.2, 743.0], [94.3, 744.0], [94.4, 745.0], [94.5, 746.0], [94.6, 748.0], [94.7, 750.0], [94.8, 751.0], [94.9, 752.0], [95.0, 754.0], [95.1, 755.0], [95.2, 756.0], [95.3, 757.0], [95.4, 758.0], [95.5, 760.0], [95.6, 761.0], [95.7, 763.0], [95.8, 764.0], [95.9, 765.0], [96.0, 767.0], [96.1, 769.0], [96.2, 770.0], [96.3, 771.0], [96.4, 773.0], [96.5, 774.0], [96.6, 776.0], [96.7, 778.0], [96.8, 780.0], [96.9, 782.0], [97.0, 783.0], [97.1, 784.0], [97.2, 785.0], [97.3, 788.0], [97.4, 789.0], [97.5, 791.0], [97.6, 794.0], [97.7, 796.0], [97.8, 799.0], [97.9, 800.0], [98.0, 803.0], [98.1, 806.0], [98.2, 808.0], [98.3, 811.0], [98.4, 813.0], [98.5, 816.0], [98.6, 822.0], [98.7, 825.0], [98.8, 828.0], [98.9, 833.0], [99.0, 840.0], [99.1, 844.0], [99.2, 848.0], [99.3, 852.0], [99.4, 860.0], [99.5, 869.0], [99.6, 875.0], [99.7, 891.0], [99.8, 909.0], [99.9, 954.0], [100.0, 1326.0]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[0.0, 2.0], [0.1, 2.0], [0.2, 2.0], [0.3, 2.0], [0.4, 2.0], [0.5, 2.0], [0.6, 2.0], [0.7, 2.0], [0.8, 2.0], [0.9, 2.0], [1.0, 2.0], [1.1, 2.0], [1.2, 2.0], [1.3, 2.0], [1.4, 2.0], [1.5, 2.0], [1.6, 2.0], [1.7, 2.0], [1.8, 2.0], [1.9, 2.0], [2.0, 2.0], [2.1, 2.0], [2.2, 2.0], [2.3, 2.0], [2.4, 2.0], [2.5, 2.0], [2.6, 2.0], [2.7, 2.0], [2.8, 2.0], [2.9, 2.0], [3.0, 2.0], [3.1, 2.0], [3.2, 2.0], [3.3, 2.0], [3.4, 2.0], [3.5, 2.0], [3.6, 2.0], [3.7, 2.0], [3.8, 2.0], [3.9, 2.0], [4.0, 2.0], [4.1, 2.0], [4.2, 2.0], [4.3, 2.0], [4.4, 2.0], [4.5, 2.0], [4.6, 2.0], [4.7, 2.0], [4.8, 2.0], [4.9, 2.0], [5.0, 2.0], [5.1, 2.0], [5.2, 2.0], [5.3, 2.0], [5.4, 2.0], [5.5, 2.0], [5.6, 2.0], [5.7, 2.0], [5.8, 2.0], [5.9, 2.0], [6.0, 2.0], [6.1, 2.0], [6.2, 2.0], [6.3, 2.0], [6.4, 2.0], [6.5, 2.0], [6.6, 2.0], [6.7, 2.0], [6.8, 2.0], [6.9, 2.0], [7.0, 2.0], [7.1, 2.0], [7.2, 2.0], [7.3, 2.0], [7.4, 2.0], [7.5, 2.0], [7.6, 2.0], [7.7, 2.0], [7.8, 2.0], [7.9, 2.0], [8.0, 2.0], [8.1, 2.0], [8.2, 2.0], [8.3, 2.0], [8.4, 2.0], [8.5, 2.0], [8.6, 2.0], [8.7, 2.0], [8.8, 2.0], [8.9, 2.0], [9.0, 2.0], [9.1, 2.0], [9.2, 2.0], [9.3, 2.0], [9.4, 2.0], [9.5, 2.0], [9.6, 2.0], [9.7, 2.0], [9.8, 2.0], [9.9, 2.0], [10.0, 2.0], [10.1, 2.0], [10.2, 2.0], [10.3, 2.0], [10.4, 2.0], [10.5, 2.0], [10.6, 2.0], [10.7, 2.0], [10.8, 2.0], [10.9, 2.0], [11.0, 2.0], [11.1, 2.0], [11.2, 2.0], [11.3, 2.0], [11.4, 2.0], [11.5, 2.0], [11.6, 2.0], [11.7, 2.0], [11.8, 2.0], [11.9, 2.0], [12.0, 2.0], [12.1, 2.0], [12.2, 2.0], [12.3, 2.0], [12.4, 2.0], [12.5, 2.0], [12.6, 2.0], [12.7, 2.0], [12.8, 2.0], [12.9, 2.0], [13.0, 2.0], [13.1, 2.0], [13.2, 2.0], [13.3, 2.0], [13.4, 2.0], [13.5, 2.0], [13.6, 2.0], [13.7, 2.0], [13.8, 2.0], [13.9, 2.0], [14.0, 2.0], [14.1, 2.0], [14.2, 2.0], [14.3, 2.0], [14.4, 2.0], [14.5, 2.0], [14.6, 2.0], [14.7, 2.0], [14.8, 2.0], [14.9, 2.0], [15.0, 2.0], [15.1, 2.0], [15.2, 2.0], [15.3, 2.0], [15.4, 2.0], [15.5, 2.0], [15.6, 2.0], [15.7, 2.0], [15.8, 2.0], [15.9, 2.0], [16.0, 2.0], [16.1, 2.0], [16.2, 2.0], [16.3, 2.0], [16.4, 2.0], [16.5, 2.0], [16.6, 2.0], [16.7, 2.0], [16.8, 2.0], [16.9, 2.0], [17.0, 2.0], [17.1, 2.0], [17.2, 2.0], [17.3, 2.0], [17.4, 2.0], [17.5, 2.0], [17.6, 2.0], [17.7, 2.0], [17.8, 2.0], [17.9, 2.0], [18.0, 2.0], [18.1, 2.0], [18.2, 2.0], [18.3, 2.0], [18.4, 2.0], [18.5, 2.0], [18.6, 2.0], [18.7, 2.0], [18.8, 2.0], [18.9, 2.0], [19.0, 2.0], [19.1, 2.0], [19.2, 2.0], [19.3, 2.0], [19.4, 2.0], [19.5, 2.0], [19.6, 2.0], [19.7, 2.0], [19.8, 2.0], [19.9, 2.0], [20.0, 2.0], [20.1, 2.0], [20.2, 2.0], [20.3, 2.0], [20.4, 2.0], [20.5, 2.0], [20.6, 2.0], [20.7, 2.0], [20.8, 2.0], [20.9, 2.0], [21.0, 2.0], [21.1, 2.0], [21.2, 2.0], [21.3, 2.0], [21.4, 2.0], [21.5, 2.0], [21.6, 2.0], [21.7, 2.0], [21.8, 2.0], [21.9, 2.0], [22.0, 2.0], [22.1, 2.0], [22.2, 2.0], [22.3, 2.0], [22.4, 2.0], [22.5, 2.0], [22.6, 2.0], [22.7, 2.0], [22.8, 2.0], [22.9, 2.0], [23.0, 2.0], [23.1, 2.0], [23.2, 2.0], [23.3, 2.0], [23.4, 2.0], [23.5, 2.0], [23.6, 2.0], [23.7, 2.0], [23.8, 2.0], [23.9, 2.0], [24.0, 2.0], [24.1, 2.0], [24.2, 2.0], [24.3, 2.0], [24.4, 2.0], [24.5, 2.0], [24.6, 2.0], [24.7, 2.0], [24.8, 2.0], [24.9, 2.0], [25.0, 2.0], [25.1, 2.0], [25.2, 2.0], [25.3, 2.0], [25.4, 2.0], [25.5, 2.0], [25.6, 2.0], [25.7, 2.0], [25.8, 2.0], [25.9, 2.0], [26.0, 2.0], [26.1, 2.0], [26.2, 2.0], [26.3, 2.0], [26.4, 2.0], [26.5, 2.0], [26.6, 2.0], [26.7, 2.0], [26.8, 2.0], [26.9, 2.0], [27.0, 2.0], [27.1, 2.0], [27.2, 2.0], [27.3, 2.0], [27.4, 2.0], [27.5, 2.0], [27.6, 2.0], [27.7, 2.0], [27.8, 2.0], [27.9, 2.0], [28.0, 2.0], [28.1, 2.0], [28.2, 2.0], [28.3, 2.0], [28.4, 2.0], [28.5, 2.0], [28.6, 2.0], [28.7, 2.0], [28.8, 2.0], [28.9, 2.0], [29.0, 2.0], [29.1, 2.0], [29.2, 2.0], [29.3, 2.0], [29.4, 2.0], [29.5, 2.0], [29.6, 2.0], [29.7, 2.0], [29.8, 2.0], [29.9, 2.0], [30.0, 2.0], [30.1, 2.0], [30.2, 2.0], [30.3, 2.0], [30.4, 2.0], [30.5, 2.0], [30.6, 2.0], [30.7, 2.0], [30.8, 2.0], [30.9, 2.0], [31.0, 2.0], [31.1, 2.0], [31.2, 2.0], [31.3, 2.0], [31.4, 2.0], [31.5, 2.0], [31.6, 2.0], [31.7, 2.0], [31.8, 2.0], [31.9, 2.0], [32.0, 2.0], [32.1, 2.0], [32.2, 2.0], [32.3, 2.0], [32.4, 2.0], [32.5, 2.0], [32.6, 2.0], [32.7, 2.0], [32.8, 2.0], [32.9, 2.0], [33.0, 2.0], [33.1, 2.0], [33.2, 2.0], [33.3, 2.0], [33.4, 2.0], [33.5, 2.0], [33.6, 2.0], [33.7, 2.0], [33.8, 2.0], [33.9, 2.0], [34.0, 2.0], [34.1, 2.0], [34.2, 2.0], [34.3, 2.0], [34.4, 2.0], [34.5, 2.0], [34.6, 2.0], [34.7, 2.0], [34.8, 2.0], [34.9, 2.0], [35.0, 2.0], [35.1, 2.0], [35.2, 2.0], [35.3, 2.0], [35.4, 2.0], [35.5, 2.0], [35.6, 2.0], [35.7, 2.0], [35.8, 2.0], [35.9, 2.0], [36.0, 2.0], [36.1, 2.0], [36.2, 2.0], [36.3, 2.0], [36.4, 2.0], [36.5, 2.0], [36.6, 2.0], [36.7, 2.0], [36.8, 2.0], [36.9, 2.0], [37.0, 2.0], [37.1, 2.0], [37.2, 2.0], [37.3, 2.0], [37.4, 2.0], [37.5, 2.0], [37.6, 2.0], [37.7, 2.0], [37.8, 2.0], [37.9, 2.0], [38.0, 2.0], [38.1, 2.0], [38.2, 2.0], [38.3, 2.0], [38.4, 2.0], [38.5, 2.0], [38.6, 2.0], [38.7, 2.0], [38.8, 2.0], [38.9, 2.0], [39.0, 2.0], [39.1, 2.0], [39.2, 2.0], [39.3, 2.0], [39.4, 2.0], [39.5, 2.0], [39.6, 2.0], [39.7, 2.0], [39.8, 2.0], [39.9, 2.0], [40.0, 2.0], [40.1, 2.0], [40.2, 2.0], [40.3, 2.0], [40.4, 2.0], [40.5, 2.0], [40.6, 2.0], [40.7, 2.0], [40.8, 2.0], [40.9, 2.0], [41.0, 2.0], [41.1, 2.0], [41.2, 2.0], [41.3, 2.0], [41.4, 2.0], [41.5, 2.0], [41.6, 2.0], [41.7, 2.0], [41.8, 2.0], [41.9, 2.0], [42.0, 2.0], [42.1, 2.0], [42.2, 2.0], [42.3, 2.0], [42.4, 2.0], [42.5, 2.0], [42.6, 2.0], [42.7, 2.0], [42.8, 2.0], [42.9, 2.0], [43.0, 2.0], [43.1, 2.0], [43.2, 2.0], [43.3, 2.0], [43.4, 2.0], [43.5, 2.0], [43.6, 2.0], [43.7, 2.0], [43.8, 2.0], [43.9, 2.0], [44.0, 2.0], [44.1, 2.0], [44.2, 2.0], [44.3, 2.0], [44.4, 2.0], [44.5, 2.0], [44.6, 2.0], [44.7, 2.0], [44.8, 2.0], [44.9, 2.0], [45.0, 2.0], [45.1, 2.0], [45.2, 2.0], [45.3, 2.0], [45.4, 2.0], [45.5, 2.0], [45.6, 2.0], [45.7, 2.0], [45.8, 2.0], [45.9, 2.0], [46.0, 2.0], [46.1, 2.0], [46.2, 2.0], [46.3, 2.0], [46.4, 2.0], [46.5, 2.0], [46.6, 2.0], [46.7, 2.0], [46.8, 2.0], [46.9, 2.0], [47.0, 2.0], [47.1, 2.0], [47.2, 2.0], [47.3, 2.0], [47.4, 2.0], [47.5, 2.0], [47.6, 2.0], [47.7, 2.0], [47.8, 2.0], [47.9, 2.0], [48.0, 2.0], [48.1, 2.0], [48.2, 2.0], [48.3, 2.0], [48.4, 2.0], [48.5, 2.0], [48.6, 2.0], [48.7, 2.0], [48.8, 2.0], [48.9, 2.0], [49.0, 2.0], [49.1, 2.0], [49.2, 2.0], [49.3, 2.0], [49.4, 2.0], [49.5, 2.0], [49.6, 2.0], [49.7, 2.0], [49.8, 2.0], [49.9, 2.0], [50.0, 2.0], [50.1, 2.0], [50.2, 2.0], [50.3, 2.0], [50.4, 2.0], [50.5, 2.0], [50.6, 2.0], [50.7, 2.0], [50.8, 2.0], [50.9, 2.0], [51.0, 2.0], [51.1, 2.0], [51.2, 2.0], [51.3, 2.0], [51.4, 2.0], [51.5, 2.0], [51.6, 2.0], [51.7, 2.0], [51.8, 2.0], [51.9, 2.0], [52.0, 2.0], [52.1, 2.0], [52.2, 2.0], [52.3, 2.0], [52.4, 2.0], [52.5, 2.0], [52.6, 2.0], [52.7, 2.0], [52.8, 2.0], [52.9, 2.0], [53.0, 2.0], [53.1, 2.0], [53.2, 2.0], [53.3, 2.0], [53.4, 2.0], [53.5, 2.0], [53.6, 2.0], [53.7, 2.0], [53.8, 2.0], [53.9, 2.0], [54.0, 2.0], [54.1, 2.0], [54.2, 2.0], [54.3, 2.0], [54.4, 2.0], [54.5, 2.0], [54.6, 2.0], [54.7, 2.0], [54.8, 2.0], [54.9, 2.0], [55.0, 2.0], [55.1, 2.0], [55.2, 2.0], [55.3, 2.0], [55.4, 2.0], [55.5, 2.0], [55.6, 2.0], [55.7, 2.0], [55.8, 2.0], [55.9, 2.0], [56.0, 2.0], [56.1, 2.0], [56.2, 2.0], [56.3, 2.0], [56.4, 2.0], [56.5, 2.0], [56.6, 2.0], [56.7, 2.0], [56.8, 2.0], [56.9, 2.0], [57.0, 2.0], [57.1, 2.0], [57.2, 2.0], [57.3, 2.0], [57.4, 2.0], [57.5, 2.0], [57.6, 2.0], [57.7, 2.0], [57.8, 2.0], [57.9, 2.0], [58.0, 2.0], [58.1, 2.0], [58.2, 2.0], [58.3, 2.0], [58.4, 2.0], [58.5, 2.0], [58.6, 2.0], [58.7, 2.0], [58.8, 2.0], [58.9, 2.0], [59.0, 2.0], [59.1, 2.0], [59.2, 2.0], [59.3, 2.0], [59.4, 2.0], [59.5, 2.0], [59.6, 2.0], [59.7, 2.0], [59.8, 2.0], [59.9, 2.0], [60.0, 2.0], [60.1, 2.0], [60.2, 2.0], [60.3, 2.0], [60.4, 2.0], [60.5, 2.0], [60.6, 2.0], [60.7, 2.0], [60.8, 2.0], [60.9, 2.0], [61.0, 2.0], [61.1, 2.0], [61.2, 2.0], [61.3, 2.0], [61.4, 2.0], [61.5, 2.0], [61.6, 2.0], [61.7, 2.0], [61.8, 2.0], [61.9, 2.0], [62.0, 2.0], [62.1, 2.0], [62.2, 2.0], [62.3, 2.0], [62.4, 2.0], [62.5, 2.0], [62.6, 2.0], [62.7, 2.0], [62.8, 2.0], [62.9, 2.0], [63.0, 2.0], [63.1, 2.0], [63.2, 2.0], [63.3, 2.0], [63.4, 2.0], [63.5, 2.0], [63.6, 2.0], [63.7, 2.0], [63.8, 2.0], [63.9, 2.0], [64.0, 2.0], [64.1, 2.0], [64.2, 2.0], [64.3, 2.0], [64.4, 2.0], [64.5, 2.0], [64.6, 2.0], [64.7, 2.0], [64.8, 2.0], [64.9, 2.0], [65.0, 2.0], [65.1, 2.0], [65.2, 2.0], [65.3, 2.0], [65.4, 2.0], [65.5, 2.0], [65.6, 2.0], [65.7, 2.0], [65.8, 2.0], [65.9, 2.0], [66.0, 2.0], [66.1, 2.0], [66.2, 2.0], [66.3, 2.0], [66.4, 2.0], [66.5, 2.0], [66.6, 2.0], [66.7, 2.0], [66.8, 2.0], [66.9, 2.0], [67.0, 2.0], [67.1, 2.0], [67.2, 2.0], [67.3, 2.0], [67.4, 2.0], [67.5, 2.0], [67.6, 2.0], [67.7, 2.0], [67.8, 2.0], [67.9, 2.0], [68.0, 2.0], [68.1, 2.0], [68.2, 2.0], [68.3, 2.0], [68.4, 2.0], [68.5, 2.0], [68.6, 2.0], [68.7, 2.0], [68.8, 2.0], [68.9, 2.0], [69.0, 2.0], [69.1, 2.0], [69.2, 2.0], [69.3, 2.0], [69.4, 2.0], [69.5, 2.0], [69.6, 2.0], [69.7, 2.0], [69.8, 2.0], [69.9, 2.0], [70.0, 2.0], [70.1, 2.0], [70.2, 2.0], [70.3, 2.0], [70.4, 2.0], [70.5, 2.0], [70.6, 2.0], [70.7, 2.0], [70.8, 2.0], [70.9, 2.0], [71.0, 2.0], [71.1, 2.0], [71.2, 2.0], [71.3, 2.0], [71.4, 2.0], [71.5, 2.0], [71.6, 2.0], [71.7, 2.0], [71.8, 2.0], [71.9, 2.0], [72.0, 2.0], [72.1, 2.0], [72.2, 2.0], [72.3, 2.0], [72.4, 2.0], [72.5, 2.0], [72.6, 2.0], [72.7, 2.0], [72.8, 2.0], [72.9, 2.0], [73.0, 2.0], [73.1, 2.0], [73.2, 2.0], [73.3, 2.0], [73.4, 2.0], [73.5, 2.0], [73.6, 2.0], [73.7, 2.0], [73.8, 2.0], [73.9, 2.0], [74.0, 2.0], [74.1, 2.0], [74.2, 2.0], [74.3, 2.0], [74.4, 2.0], [74.5, 2.0], [74.6, 2.0], [74.7, 2.0], [74.8, 2.0], [74.9, 2.0], [75.0, 2.0], [75.1, 2.0], [75.2, 2.0], [75.3, 2.0], [75.4, 2.0], [75.5, 2.0], [75.6, 2.0], [75.7, 2.0], [75.8, 2.0], [75.9, 2.0], [76.0, 2.0], [76.1, 2.0], [76.2, 2.0], [76.3, 2.0], [76.4, 2.0], [76.5, 2.0], [76.6, 2.0], [76.7, 2.0], [76.8, 2.0], [76.9, 2.0], [77.0, 2.0], [77.1, 2.0], [77.2, 2.0], [77.3, 2.0], [77.4, 2.0], [77.5, 2.0], [77.6, 2.0], [77.7, 2.0], [77.8, 2.0], [77.9, 2.0], [78.0, 2.0], [78.1, 2.0], [78.2, 2.0], [78.3, 2.0], [78.4, 2.0], [78.5, 2.0], [78.6, 2.0], [78.7, 2.0], [78.8, 2.0], [78.9, 2.0], [79.0, 2.0], [79.1, 2.0], [79.2, 2.0], [79.3, 2.0], [79.4, 2.0], [79.5, 2.0], [79.6, 2.0], [79.7, 2.0], [79.8, 2.0], [79.9, 2.0], [80.0, 2.0], [80.1, 2.0], [80.2, 2.0], [80.3, 2.0], [80.4, 2.0], [80.5, 2.0], [80.6, 2.0], [80.7, 2.0], [80.8, 2.0], [80.9, 2.0], [81.0, 2.0], [81.1, 2.0], [81.2, 2.0], [81.3, 2.0], [81.4, 2.0], [81.5, 2.0], [81.6, 2.0], [81.7, 2.0], [81.8, 2.0], [81.9, 2.0], [82.0, 2.0], [82.1, 2.0], [82.2, 2.0], [82.3, 2.0], [82.4, 2.0], [82.5, 2.0], [82.6, 2.0], [82.7, 2.0], [82.8, 2.0], [82.9, 2.0], [83.0, 2.0], [83.1, 2.0], [83.2, 2.0], [83.3, 2.0], [83.4, 2.0], [83.5, 2.0], [83.6, 2.0], [83.7, 2.0], [83.8, 2.0], [83.9, 2.0], [84.0, 2.0], [84.1, 2.0], [84.2, 2.0], [84.3, 2.0], [84.4, 2.0], [84.5, 2.0], [84.6, 2.0], [84.7, 2.0], [84.8, 2.0], [84.9, 2.0], [85.0, 2.0], [85.1, 2.0], [85.2, 2.0], [85.3, 2.0], [85.4, 2.0], [85.5, 2.0], [85.6, 2.0], [85.7, 2.0], [85.8, 2.0], [85.9, 2.0], [86.0, 2.0], [86.1, 2.0], [86.2, 2.0], [86.3, 2.0], [86.4, 2.0], [86.5, 2.0], [86.6, 2.0], [86.7, 2.0], [86.8, 2.0], [86.9, 2.0], [87.0, 2.0], [87.1, 2.0], [87.2, 2.0], [87.3, 2.0], [87.4, 2.0], [87.5, 2.0], [87.6, 2.0], [87.7, 2.0], [87.8, 2.0], [87.9, 2.0], [88.0, 2.0], [88.1, 2.0], [88.2, 2.0], [88.3, 2.0], [88.4, 2.0], [88.5, 2.0], [88.6, 2.0], [88.7, 2.0], [88.8, 2.0], [88.9, 2.0], [89.0, 2.0], [89.1, 2.0], [89.2, 2.0], [89.3, 2.0], [89.4, 2.0], [89.5, 2.0], [89.6, 2.0], [89.7, 2.0], [89.8, 2.0], [89.9, 2.0], [90.0, 2.0], [90.1, 2.0], [90.2, 2.0], [90.3, 2.0], [90.4, 2.0], [90.5, 2.0], [90.6, 2.0], [90.7, 2.0], [90.8, 2.0], [90.9, 2.0], [91.0, 2.0], [91.1, 2.0], [91.2, 2.0], [91.3, 2.0], [91.4, 2.0], [91.5, 2.0], [91.6, 2.0], [91.7, 2.0], [91.8, 2.0], [91.9, 2.0], [92.0, 2.0], [92.1, 2.0], [92.2, 2.0], [92.3, 2.0], [92.4, 2.0], [92.5, 2.0], [92.6, 2.0], [92.7, 2.0], [92.8, 2.0], [92.9, 2.0], [93.0, 2.0], [93.1, 2.0], [93.2, 2.0], [93.3, 2.0], [93.4, 2.0], [93.5, 2.0], [93.6, 2.0], [93.7, 2.0], [93.8, 2.0], [93.9, 2.0], [94.0, 2.0], [94.1, 2.0], [94.2, 2.0], [94.3, 2.0], [94.4, 2.0], [94.5, 2.0], [94.6, 2.0], [94.7, 2.0], [94.8, 2.0], [94.9, 2.0], [95.0, 2.0], [95.1, 2.0], [95.2, 2.0], [95.3, 2.0], [95.4, 2.0], [95.5, 2.0], [95.6, 2.0], [95.7, 2.0], [95.8, 2.0], [95.9, 2.0], [96.0, 2.0], [96.1, 2.0], [96.2, 2.0], [96.3, 2.0], [96.4, 2.0], [96.5, 2.0], [96.6, 2.0], [96.7, 2.0], [96.8, 2.0], [96.9, 2.0], [97.0, 2.0], [97.1, 2.0], [97.2, 2.0], [97.3, 2.0], [97.4, 2.0], [97.5, 2.0], [97.6, 2.0], [97.7, 2.0], [97.8, 2.0], [97.9, 2.0], [98.0, 2.0], [98.1, 2.0], [98.2, 2.0], [98.3, 2.0], [98.4, 2.0], [98.5, 2.0], [98.6, 2.0], [98.7, 2.0], [98.8, 2.0], [98.9, 2.0], [99.0, 2.0], [99.1, 2.0], [99.2, 2.0], [99.3, 2.0], [99.4, 2.0], [99.5, 2.0], [99.6, 2.0], [99.7, 2.0], [99.8, 2.0], [99.9, 2.0]], "isOverall": false, "label": "Register test user-0", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 3371.0, "series": [{"data": [[300.0, 1.0]], "isOverall": false, "label": "Register test user", "isController": false}, {"data": [[0.0, 1.0]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[0.0, 56.0], [300.0, 2519.0], [600.0, 2013.0], [1300.0, 2.0], [700.0, 1017.0], [100.0, 276.0], [200.0, 353.0], [400.0, 3371.0], [800.0, 223.0], [900.0, 21.0], [500.0, 1655.0], [1000.0, 5.0]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[0.0, 1.0]], "isOverall": false, "label": "Register test user-0", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 1300.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 4916.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1 500ms"], [2, "Requests having \nresponse time > 1 500ms"], [3, "Requests in error"]], "maxY": 6598.0, "series": [{"data": [[0.0, 6598.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 4916.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1 500ms", "isController": false}, {"data": [], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1 500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 1.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.68527615E12, "maxY": 10.0, "series": [{"data": [[1.68527615E12, 1.0]], "isOverall": false, "label": "Login thread group", "isController": false}, {"data": [[1.68527644E12, 10.0], [1.68527661E12, 10.0], [1.68527627E12, 10.0], [1.68527636E12, 10.0], [1.68527653E12, 10.0], [1.6852767E12, 10.0], [1.68527619E12, 6.482051282051284], [1.68527628E12, 10.0], [1.68527645E12, 10.0], [1.68527662E12, 10.0], [1.6852762E12, 8.122065727699532], [1.68527637E12, 10.0], [1.68527654E12, 10.0], [1.68527671E12, 10.0], [1.68527625E12, 10.0], [1.68527642E12, 10.0], [1.68527659E12, 10.0], [1.68527668E12, 10.0], [1.68527617E12, 3.1325966850828735], [1.68527634E12, 10.0], [1.68527651E12, 10.0], [1.6852766E12, 10.0], [1.68527626E12, 10.0], [1.68527643E12, 10.0], [1.68527652E12, 10.0], [1.68527669E12, 10.0], [1.68527618E12, 4.714999999999999], [1.68527635E12, 10.0], [1.68527631E12, 10.0], [1.6852764E12, 10.0], [1.68527657E12, 10.0], [1.68527674E12, 10.0], [1.68527623E12, 10.0], [1.68527632E12, 10.0], [1.68527649E12, 10.0], [1.68527666E12, 10.0], [1.68527615E12, 1.0], [1.68527624E12, 10.0], [1.68527641E12, 10.0], [1.68527658E12, 10.0], [1.68527675E12, 9.775510204081632], [1.68527616E12, 1.5882352941176465], [1.68527633E12, 10.0], [1.6852765E12, 10.0], [1.68527667E12, 10.0], [1.68527629E12, 10.0], [1.68527646E12, 10.0], [1.68527663E12, 10.0], [1.68527672E12, 10.0], [1.68527621E12, 9.655813953488371], [1.68527638E12, 10.0], [1.68527655E12, 10.0], [1.68527664E12, 10.0], [1.6852763E12, 10.0], [1.68527647E12, 10.0], [1.68527656E12, 10.0], [1.68527673E12, 10.0], [1.68527622E12, 10.0], [1.68527639E12, 10.0], [1.68527648E12, 10.0], [1.68527665E12, 10.0]], "isOverall": false, "label": "Search group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.68527675E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.0, "maxY": 519.8112794131647, "series": [{"data": [[1.0, 315.0]], "isOverall": false, "label": "Register test user", "isController": false}, {"data": [[1.0, 315.0]], "isOverall": false, "label": "Register test user-Aggregated", "isController": false}, {"data": [[1.0, 1.0]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1.0, 1.0]], "isOverall": false, "label": "HTTP Request-0-Aggregated", "isController": false}, {"data": [[1.0, 105.60317460317458], [2.0, 113.2307692307692], [4.0, 207.01694915254242], [8.0, 371.6846153846153], [9.0, 416.8538461538462], [5.0, 251.05000000000007], [10.0, 519.8112794131647], [3.0, 165.42342342342343], [6.0, 313.3596491228071], [7.0, 340.5403225806451]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[9.591521153679066, 497.6339153852823]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}, {"data": [[1.0, 2.0]], "isOverall": false, "label": "Register test user-0", "isController": false}, {"data": [[1.0, 2.0]], "isOverall": false, "label": "Register test user-0-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 10.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 298.3, "minX": 1.68527615E12, "maxY": 275012.8, "series": [{"data": [[1.68527644E12, 208872.3], [1.68527661E12, 251355.4], [1.68527627E12, 238730.0], [1.68527636E12, 243217.5], [1.68527653E12, 192778.3], [1.6852767E12, 242742.7], [1.68527619E12, 223330.8], [1.68527628E12, 214372.9], [1.68527645E12, 212471.6], [1.68527662E12, 212570.9], [1.6852762E12, 254892.0], [1.68527637E12, 235042.9], [1.68527654E12, 203671.7], [1.68527671E12, 254887.4], [1.68527625E12, 275012.8], [1.68527642E12, 234358.9], [1.68527659E12, 189557.7], [1.68527668E12, 217034.8], [1.68527617E12, 196695.6], [1.68527634E12, 205542.0], [1.68527651E12, 171308.1], [1.6852766E12, 190594.5], [1.68527626E12, 231992.4], [1.68527643E12, 189098.7], [1.68527652E12, 199100.3], [1.68527669E12, 194612.0], [1.68527618E12, 222735.2], [1.68527635E12, 252654.6], [1.68527631E12, 235004.7], [1.6852764E12, 215055.8], [1.68527657E12, 196275.1], [1.68527674E12, 245467.4], [1.68527623E12, 217417.4], [1.68527632E12, 242709.7], [1.68527649E12, 198375.4], [1.68527666E12, 236067.6], [1.68527615E12, 3762.4], [1.68527624E12, 183565.7], [1.68527641E12, 194433.7], [1.68527658E12, 206303.2], [1.68527675E12, 212692.9], [1.68527616E12, 166271.6], [1.68527633E12, 192272.9], [1.6852765E12, 160281.6], [1.68527667E12, 225468.3], [1.68527629E12, 216431.5], [1.68527646E12, 234469.9], [1.68527663E12, 197612.7], [1.68527672E12, 179130.0], [1.68527621E12, 203354.3], [1.68527638E12, 205170.9], [1.68527655E12, 187724.3], [1.68527664E12, 187018.8], [1.6852763E12, 233122.4], [1.68527647E12, 209592.1], [1.68527656E12, 197620.8], [1.68527673E12, 165306.7], [1.68527622E12, 260752.6], [1.68527639E12, 198226.4], [1.68527648E12, 177966.7], [1.68527665E12, 221823.9]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.68527644E12, 8311.4], [1.68527661E12, 8917.2], [1.68527627E12, 9307.2], [1.68527636E12, 9296.0], [1.68527653E12, 7957.0], [1.6852767E12, 9191.4], [1.68527619E12, 9018.0], [1.68527628E12, 9402.2], [1.68527645E12, 8526.4], [1.68527662E12, 9132.8], [1.6852762E12, 9878.4], [1.68527637E12, 9315.6], [1.68527654E12, 7846.6], [1.68527671E12, 9083.8], [1.68527625E12, 9444.0], [1.68527642E12, 8878.4], [1.68527659E12, 8437.4], [1.68527668E12, 9097.0], [1.68527617E12, 8390.2], [1.68527634E12, 9426.2], [1.68527651E12, 7402.0], [1.6852766E12, 8704.4], [1.68527626E12, 9753.6], [1.68527643E12, 8868.2], [1.68527652E12, 7840.6], [1.68527669E12, 8680.0], [1.68527618E12, 9288.2], [1.68527635E12, 9449.0], [1.68527631E12, 9342.6], [1.6852764E12, 9117.8], [1.68527657E12, 8123.2], [1.68527674E12, 9040.2], [1.68527623E12, 9797.2], [1.68527632E12, 9550.4], [1.68527649E12, 7763.0], [1.68527666E12, 9244.0], [1.68527615E12, 298.3], [1.68527624E12, 9887.4], [1.68527641E12, 9128.8], [1.68527658E12, 8156.6], [1.68527675E12, 9101.8], [1.68527616E12, 6320.8], [1.68527633E12, 9267.2], [1.6852765E12, 8049.6], [1.68527667E12, 9227.8], [1.68527629E12, 9247.6], [1.68527646E12, 8524.0], [1.68527663E12, 9134.6], [1.68527672E12, 9020.4], [1.68527621E12, 9974.6], [1.68527638E12, 9476.4], [1.68527655E12, 8049.2], [1.68527664E12, 9184.8], [1.6852763E12, 9545.2], [1.68527647E12, 8036.0], [1.68527656E12, 8208.0], [1.68527673E12, 8985.8], [1.68527622E12, 9852.2], [1.68527639E12, 9281.0], [1.68527648E12, 8123.0], [1.68527665E12, 9135.2]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.68527675E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.68527615E12, "maxY": 625.9562500000001, "series": [{"data": [[1.68527615E12, 315.0]], "isOverall": false, "label": "Register test user", "isController": false}, {"data": [[1.68527615E12, 1.0]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1.68527644E12, 550.1731843575412], [1.68527661E12, 522.0156249999998], [1.68527627E12, 496.15422885572127], [1.68527636E12, 492.30000000000007], [1.68527653E12, 571.9709302325579], [1.6852767E12, 506.5252525252525], [1.68527619E12, 327.51282051282044], [1.68527628E12, 491.0935960591133], [1.68527645E12, 546.961956521739], [1.68527662E12, 512.3350253807104], [1.6852762E12, 377.2159624413145], [1.68527637E12, 498.039800995025], [1.68527654E12, 597.6449704142012], [1.68527671E12, 516.4132653061224], [1.68527625E12, 483.55392156862774], [1.68527642E12, 518.7643979057588], [1.68527659E12, 554.0659340659337], [1.68527668E12, 504.56632653061223], [1.68527617E12, 167.76243093922653], [1.68527634E12, 493.536945812808], [1.68527651E12, 625.9562500000001], [1.6852766E12, 530.1755319148938], [1.68527626E12, 484.31904761904764], [1.68527643E12, 530.3350785340315], [1.68527652E12, 594.0828402366865], [1.68527669E12, 531.5133689839572], [1.68527618E12, 236.14499999999995], [1.68527635E12, 495.7487684729067], [1.68527631E12, 498.1144278606964], [1.6852764E12, 507.73604060913715], [1.68527657E12, 574.9485714285715], [1.68527674E12, 513.0820512820512], [1.68527623E12, 472.7345971563982], [1.68527632E12, 489.8252427184468], [1.68527649E12, 590.9940119760481], [1.68527666E12, 504.55778894472365], [1.68527615E12, 136.16666666666669], [1.68527624E12, 473.43661971830977], [1.68527641E12, 510.9336734693878], [1.68527658E12, 562.8579545454543], [1.68527675E12, 508.48469387755085], [1.68527616E12, 105.8455882352941], [1.68527633E12, 495.81000000000006], [1.6852765E12, 577.3678160919537], [1.68527667E12, 506.4321608040201], [1.68527629E12, 497.1155778894475], [1.68527646E12, 552.7934782608698], [1.68527663E12, 503.9289340101524], [1.68527672E12, 510.5897435897438], [1.68527621E12, 444.9906976744186], [1.68527638E12, 493.00490196078414], [1.68527655E12, 578.271676300578], [1.68527664E12, 504.3989898989897], [1.6852763E12, 487.15121951219515], [1.68527647E12, 565.9421965317915], [1.68527656E12, 560.8361581920902], [1.68527673E12, 508.0773195876289], [1.68527622E12, 469.29245283018884], [1.68527639E12, 497.1949999999999], [1.68527648E12, 572.8465909090908], [1.68527665E12, 505.10659898477155]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[1.68527615E12, 2.0]], "isOverall": false, "label": "Register test user-0", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.68527675E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.68527615E12, "maxY": 625.3812499999999, "series": [{"data": [[1.68527615E12, 282.0]], "isOverall": false, "label": "Register test user", "isController": false}, {"data": [[1.68527615E12, 0.0]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1.68527644E12, 549.737430167598], [1.68527661E12, 521.71875], [1.68527627E12, 495.7562189054725], [1.68527636E12, 492.0550000000001], [1.68527653E12, 571.7790697674417], [1.6852767E12, 506.27777777777777], [1.68527619E12, 326.2564102564103], [1.68527628E12, 490.7389162561578], [1.68527645E12, 546.6521739130432], [1.68527662E12, 512.1065989847718], [1.6852762E12, 376.9999999999999], [1.68527637E12, 497.70149253731347], [1.68527654E12, 596.4082840236686], [1.68527671E12, 516.2091836734696], [1.68527625E12, 483.10294117647095], [1.68527642E12, 518.5445026178008], [1.68527659E12, 553.78021978022], [1.68527668E12, 504.1938775510204], [1.68527617E12, 167.30386740331485], [1.68527634E12, 493.26600985221694], [1.68527651E12, 625.3812499999999], [1.6852766E12, 529.9574468085109], [1.68527626E12, 484.04761904761904], [1.68527643E12, 530.1361256544502], [1.68527652E12, 593.8343195266272], [1.68527669E12, 530.9625668449196], [1.68527618E12, 235.94000000000003], [1.68527635E12, 495.3054187192116], [1.68527631E12, 497.78109452736317], [1.6852764E12, 506.8578680203045], [1.68527657E12, 574.1257142857144], [1.68527674E12, 512.8769230769233], [1.68527623E12, 472.5118483412322], [1.68527632E12, 489.504854368932], [1.68527649E12, 590.676646706587], [1.68527666E12, 504.28643216080417], [1.68527615E12, 135.83333333333334], [1.68527624E12, 472.86384976525824], [1.68527641E12, 510.3928571428571], [1.68527658E12, 562.5852272727271], [1.68527675E12, 508.3061224489798], [1.68527616E12, 105.69852941176471], [1.68527633E12, 495.38000000000005], [1.6852765E12, 577.2126436781613], [1.68527667E12, 506.1959798994975], [1.68527629E12, 496.07537688442227], [1.68527646E12, 552.2173913043481], [1.68527663E12, 503.7664974619289], [1.68527672E12, 510.4666666666667], [1.68527621E12, 444.80465116279066], [1.68527638E12, 492.7843137254902], [1.68527655E12, 577.7341040462424], [1.68527664E12, 504.14141414141415], [1.6852763E12, 486.90243902439016], [1.68527647E12, 565.6589595375724], [1.68527656E12, 560.6384180790963], [1.68527673E12, 507.974226804124], [1.68527622E12, 468.82075471698107], [1.68527639E12, 496.7249999999999], [1.68527648E12, 572.6874999999997], [1.68527665E12, 504.86294416243646]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[1.68527615E12, 0.0]], "isOverall": false, "label": "Register test user-0", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.68527675E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.68527615E12, "maxY": 9.0, "series": [{"data": [[1.68527615E12, 9.0]], "isOverall": false, "label": "Register test user", "isController": false}, {"data": [[1.68527615E12, 0.0]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1.68527644E12, 0.318435754189944], [1.68527661E12, 0.29166666666666663], [1.68527627E12, 0.40796019900497527], [1.68527636E12, 0.3199999999999999], [1.68527653E12, 0.33139534883720945], [1.6852767E12, 0.32323232323232315], [1.68527619E12, 0.5538461538461539], [1.68527628E12, 0.33497536945812817], [1.68527645E12, 0.31521739130434784], [1.68527662E12, 0.25380710659898476], [1.6852762E12, 0.488262910798122], [1.68527637E12, 0.2935323383084577], [1.68527654E12, 0.3136094674556211], [1.68527671E12, 0.29081632653061207], [1.68527625E12, 0.3921568627450981], [1.68527642E12, 0.3874345549738219], [1.68527659E12, 0.3021978021978021], [1.68527668E12, 0.2755102040816324], [1.68527617E12, 0.6132596685082867], [1.68527634E12, 0.41871921182266003], [1.68527651E12, 0.36874999999999997], [1.6852766E12, 0.271276595744681], [1.68527626E12, 0.3142857142857141], [1.68527643E12, 0.2774869109947645], [1.68527652E12, 0.2603550295857987], [1.68527669E12, 0.2566844919786095], [1.68527618E12, 0.5050000000000003], [1.68527635E12, 0.33990147783251234], [1.68527631E12, 0.3681592039800996], [1.6852764E12, 0.365482233502538], [1.68527657E12, 0.23428571428571435], [1.68527674E12, 0.3333333333333331], [1.68527623E12, 0.3507109004739337], [1.68527632E12, 0.3398058252427184], [1.68527649E12, 0.34131736526946094], [1.68527666E12, 0.2361809045226132], [1.68527615E12, 0.6666666666666667], [1.68527624E12, 0.3286384976525823], [1.68527641E12, 0.3622448979591836], [1.68527658E12, 0.27272727272727276], [1.68527675E12, 0.27040816326530603], [1.68527616E12, 0.7352941176470585], [1.68527633E12, 0.3549999999999997], [1.6852765E12, 0.31034482758620696], [1.68527667E12, 0.28140703517587934], [1.68527629E12, 0.3266331658291457], [1.68527646E12, 0.3478260869565216], [1.68527663E12, 0.2436548223350254], [1.68527672E12, 0.2769230769230769], [1.68527621E12, 0.4046511627906977], [1.68527638E12, 0.3970588235294117], [1.68527655E12, 0.32947976878612745], [1.68527664E12, 0.2828282828282831], [1.6852763E12, 0.3512195121951221], [1.68527647E12, 0.35838150289017334], [1.68527656E12, 0.2655367231638418], [1.68527673E12, 0.2835051546391749], [1.68527622E12, 0.4575471698113209], [1.68527639E12, 0.38], [1.68527648E12, 0.2954545454545455], [1.68527665E12, 0.2690355329949237]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[1.68527615E12, 0.0]], "isOverall": false, "label": "Register test user-0", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.68527675E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.68527615E12, "maxY": 1326.0, "series": [{"data": [[1.68527644E12, 899.0], [1.68527661E12, 825.0], [1.68527627E12, 892.0], [1.68527636E12, 783.0], [1.68527653E12, 931.0], [1.6852767E12, 805.0], [1.68527619E12, 781.0], [1.68527628E12, 785.0], [1.68527645E12, 848.0], [1.68527662E12, 848.0], [1.6852762E12, 626.0], [1.68527637E12, 815.0], [1.68527654E12, 1326.0], [1.68527671E12, 817.0], [1.68527625E12, 909.0], [1.68527642E12, 783.0], [1.68527659E12, 875.0], [1.68527668E12, 778.0], [1.68527617E12, 309.0], [1.68527634E12, 752.0], [1.68527651E12, 1034.0], [1.6852766E12, 873.0], [1.68527626E12, 766.0], [1.68527643E12, 832.0], [1.68527652E12, 952.0], [1.68527669E12, 1020.0], [1.68527618E12, 440.0], [1.68527635E12, 752.0], [1.68527631E12, 783.0], [1.6852764E12, 1024.0], [1.68527657E12, 901.0], [1.68527674E12, 819.0], [1.68527623E12, 742.0], [1.68527632E12, 802.0], [1.68527649E12, 894.0], [1.68527666E12, 810.0], [1.68527615E12, 323.0], [1.68527624E12, 872.0], [1.68527641E12, 869.0], [1.68527658E12, 925.0], [1.68527675E12, 845.0], [1.68527616E12, 214.0], [1.68527633E12, 927.0], [1.6852765E12, 903.0], [1.68527667E12, 816.0], [1.68527629E12, 847.0], [1.68527646E12, 863.0], [1.68527663E12, 771.0], [1.68527672E12, 805.0], [1.68527621E12, 739.0], [1.68527638E12, 828.0], [1.68527655E12, 1014.0], [1.68527664E12, 833.0], [1.6852763E12, 832.0], [1.68527647E12, 857.0], [1.68527656E12, 853.0], [1.68527673E12, 808.0], [1.68527622E12, 800.0], [1.68527639E12, 809.0], [1.68527648E12, 905.0], [1.68527665E12, 814.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.68527644E12, 337.0], [1.68527661E12, 311.0], [1.68527627E12, 313.0], [1.68527636E12, 281.0], [1.68527653E12, 349.0], [1.6852767E12, 303.0], [1.68527619E12, 207.0], [1.68527628E12, 290.0], [1.68527645E12, 324.0], [1.68527662E12, 331.0], [1.6852762E12, 244.0], [1.68527637E12, 316.0], [1.68527654E12, 358.0], [1.68527671E12, 298.0], [1.68527625E12, 299.0], [1.68527642E12, 318.0], [1.68527659E12, 328.0], [1.68527668E12, 310.0], [1.68527617E12, 106.0], [1.68527634E12, 287.0], [1.68527651E12, 384.0], [1.6852766E12, 303.0], [1.68527626E12, 274.0], [1.68527643E12, 325.0], [1.68527652E12, 370.0], [1.68527669E12, 294.0], [1.68527618E12, 163.0], [1.68527635E12, 293.0], [1.68527631E12, 307.0], [1.6852764E12, 289.0], [1.68527657E12, 319.0], [1.68527674E12, 331.0], [1.68527623E12, 277.0], [1.68527632E12, 291.0], [1.68527649E12, 399.0], [1.68527666E12, 330.0], [1.68527615E12, 1.0], [1.68527624E12, 291.0], [1.68527641E12, 321.0], [1.68527658E12, 350.0], [1.68527675E12, 271.0], [1.68527616E12, 92.0], [1.68527633E12, 317.0], [1.6852765E12, 349.0], [1.68527667E12, 312.0], [1.68527629E12, 300.0], [1.68527646E12, 347.0], [1.68527663E12, 321.0], [1.68527672E12, 301.0], [1.68527621E12, 254.0], [1.68527638E12, 314.0], [1.68527655E12, 341.0], [1.68527664E12, 318.0], [1.6852763E12, 289.0], [1.68527647E12, 329.0], [1.68527656E12, 331.0], [1.68527673E12, 314.0], [1.68527622E12, 295.0], [1.68527639E12, 311.0], [1.68527648E12, 360.0], [1.68527665E12, 319.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.68527644E12, 767.0], [1.68527661E12, 698.2], [1.68527627E12, 673.4000000000001], [1.68527636E12, 681.0], [1.68527653E12, 789.7], [1.6852767E12, 711.4], [1.68527619E12, 455.20000000000005], [1.68527628E12, 674.6], [1.68527645E12, 744.5], [1.68527662E12, 684.2], [1.6852762E12, 525.1999999999999], [1.68527637E12, 676.8], [1.68527654E12, 828.0], [1.68527671E12, 703.9000000000001], [1.68527625E12, 659.0], [1.68527642E12, 707.0], [1.68527659E12, 769.7], [1.68527668E12, 691.0], [1.68527617E12, 209.8], [1.68527634E12, 671.6], [1.68527651E12, 847.6000000000001], [1.6852766E12, 719.0], [1.68527626E12, 656.0], [1.68527643E12, 717.8], [1.68527652E12, 810.0], [1.68527669E12, 725.2], [1.68527618E12, 307.1], [1.68527635E12, 682.0], [1.68527631E12, 669.8], [1.6852764E12, 695.0000000000001], [1.68527657E12, 766.8], [1.68527674E12, 704.4], [1.68527623E12, 648.4000000000001], [1.68527632E12, 659.9000000000001], [1.68527649E12, 811.4000000000001], [1.68527666E12, 690.0], [1.68527615E12, 323.0], [1.68527624E12, 648.6], [1.68527641E12, 688.5], [1.68527658E12, 774.3], [1.68527675E12, 688.6], [1.68527616E12, 116.0], [1.68527633E12, 670.9], [1.6852765E12, 781.0], [1.68527667E12, 678.0], [1.68527629E12, 667.0], [1.68527646E12, 752.5], [1.68527663E12, 698.4000000000001], [1.68527672E12, 693.2], [1.68527621E12, 611.4], [1.68527638E12, 660.5], [1.68527655E12, 783.6], [1.68527664E12, 676.0], [1.6852763E12, 660.8], [1.68527647E12, 787.4], [1.68527656E12, 763.4000000000001], [1.68527673E12, 690.0], [1.68527622E12, 651.7], [1.68527639E12, 659.0], [1.68527648E12, 790.0], [1.68527665E12, 690.4000000000001]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.68527644E12, 865.3999999999995], [1.68527661E12, 813.8399999999999], [1.68527627E12, 839.6199999999993], [1.68527636E12, 768.97], [1.68527653E12, 918.5900000000001], [1.6852767E12, 769.3599999999997], [1.68527619E12, 691.7199999999992], [1.68527628E12, 759.88], [1.68527645E12, 830.1500000000001], [1.68527662E12, 785.2800000000007], [1.6852762E12, 622.0599999999997], [1.68527637E12, 808.5199999999998], [1.68527654E12, 1319.0], [1.68527671E12, 786.9300000000001], [1.68527625E12, 776.8], [1.68527642E12, 771.9599999999998], [1.68527659E12, 845.9499999999996], [1.68527668E12, 754.72], [1.68527617E12, 304.08000000000004], [1.68527634E12, 750.4800000000001], [1.68527651E12, 1000.4499999999992], [1.6852766E12, 814.2599999999991], [1.68527626E12, 757.67], [1.68527643E12, 829.24], [1.68527652E12, 922.6000000000005], [1.68527669E12, 945.2000000000004], [1.68527618E12, 435.95000000000005], [1.68527635E12, 750.4800000000001], [1.68527631E12, 760.8], [1.6852764E12, 779.9800000000025], [1.68527657E12, 893.4000000000001], [1.68527674E12, 790.1999999999998], [1.68527623E12, 708.4], [1.68527632E12, 778.58], [1.68527649E12, 893.3199999999999], [1.68527666E12, 777.0], [1.68527615E12, 323.0], [1.68527624E12, 716.86], [1.68527641E12, 843.78], [1.68527658E12, 900.3599999999997], [1.68527675E12, 796.5], [1.68527616E12, 185.50999999999965], [1.68527633E12, 826.5800000000004], [1.6852765E12, 861.0], [1.68527667E12, 782.0], [1.68527629E12, 822.0], [1.68527646E12, 855.35], [1.68527663E12, 763.1600000000001], [1.68527672E12, 800.1999999999999], [1.68527621E12, 701.0800000000002], [1.68527638E12, 790.6499999999999], [1.68527655E12, 966.6399999999994], [1.68527664E12, 795.3799999999997], [1.6852763E12, 769.04], [1.68527647E12, 851.8199999999999], [1.68527656E12, 852.22], [1.68527673E12, 760.5000000000006], [1.68527622E12, 738.0100000000001], [1.68527639E12, 740.94], [1.68527648E12, 880.3599999999997], [1.68527665E12, 785.5800000000003]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.68527644E12, 518.0], [1.68527661E12, 485.0], [1.68527627E12, 464.0], [1.68527636E12, 454.0], [1.68527653E12, 519.0], [1.6852767E12, 459.0], [1.68527619E12, 291.0], [1.68527628E12, 455.0], [1.68527645E12, 495.0], [1.68527662E12, 474.0], [1.6852762E12, 350.0], [1.68527637E12, 453.0], [1.68527654E12, 542.0], [1.68527671E12, 476.0], [1.68527625E12, 453.0], [1.68527642E12, 472.0], [1.68527659E12, 501.5], [1.68527668E12, 467.5], [1.68527617E12, 163.0], [1.68527634E12, 454.0], [1.68527651E12, 600.0], [1.6852766E12, 502.5], [1.68527626E12, 455.0], [1.68527643E12, 486.0], [1.68527652E12, 553.0], [1.68527669E12, 502.0], [1.68527618E12, 221.0], [1.68527635E12, 466.0], [1.68527631E12, 468.0], [1.6852764E12, 465.0], [1.68527657E12, 549.0], [1.68527674E12, 475.0], [1.68527623E12, 435.0], [1.68527632E12, 450.0], [1.68527649E12, 540.0], [1.68527666E12, 453.0], [1.68527615E12, 93.0], [1.68527624E12, 438.0], [1.68527641E12, 477.5], [1.68527658E12, 513.0], [1.68527675E12, 468.5], [1.68527616E12, 109.0], [1.68527633E12, 475.0], [1.6852765E12, 535.0], [1.68527667E12, 475.0], [1.68527629E12, 473.0], [1.68527646E12, 508.5], [1.68527663E12, 459.0], [1.68527672E12, 472.0], [1.68527621E12, 407.0], [1.68527638E12, 458.5], [1.68527655E12, 528.0], [1.68527664E12, 471.0], [1.6852763E12, 447.0], [1.68527647E12, 515.0], [1.68527656E12, 521.0], [1.68527673E12, 471.5], [1.68527622E12, 423.0], [1.68527639E12, 461.5], [1.68527648E12, 533.0], [1.68527665E12, 468.0]], "isOverall": false, "label": "Median", "isController": false}, {"data": [[1.68527644E12, 800.0], [1.68527661E12, 728.15], [1.68527627E12, 705.5999999999999], [1.68527636E12, 698.95], [1.68527653E12, 823.35], [1.6852767E12, 734.0999999999999], [1.68527619E12, 514.4], [1.68527628E12, 700.8], [1.68527645E12, 763.5], [1.68527662E12, 721.0999999999999], [1.6852762E12, 565.0], [1.68527637E12, 704.6999999999999], [1.68527654E12, 866.5], [1.68527671E12, 730.5999999999999], [1.68527625E12, 685.0], [1.68527642E12, 732.1999999999998], [1.68527659E12, 791.0999999999999], [1.68527668E12, 725.0], [1.68527617E12, 229.50000000000003], [1.68527634E12, 700.8], [1.68527651E12, 880.9], [1.6852766E12, 745.0499999999998], [1.68527626E12, 675.8], [1.68527643E12, 759.0], [1.68527652E12, 846.0], [1.68527669E12, 808.5999999999999], [1.68527618E12, 381.84999999999997], [1.68527635E12, 715.3999999999999], [1.68527631E12, 722.1999999999998], [1.6852764E12, 719.0], [1.68527657E12, 797.0], [1.68527674E12, 726.4], [1.68527623E12, 666.9999999999999], [1.68527632E12, 704.7999999999997], [1.68527649E12, 857.0], [1.68527666E12, 719.0], [1.68527615E12, 323.0], [1.68527624E12, 676.5999999999999], [1.68527641E12, 735.3], [1.68527658E12, 792.6500000000001], [1.68527675E12, 729.6499999999997], [1.68527616E12, 117.0], [1.68527633E12, 698.8], [1.6852765E12, 810.75], [1.68527667E12, 703.0], [1.68527629E12, 699.0], [1.68527646E12, 807.5], [1.68527663E12, 717.4], [1.68527672E12, 739.2], [1.68527621E12, 647.4], [1.68527638E12, 693.0], [1.68527655E12, 826.4999999999999], [1.68527664E12, 701.05], [1.6852763E12, 690.8], [1.68527647E12, 812.3], [1.68527656E12, 792.5999999999999], [1.68527673E12, 714.0], [1.68527622E12, 682.35], [1.68527639E12, 712.3499999999999], [1.68527648E12, 812.6], [1.68527665E12, 729.2]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.68527675E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 93.0, "minX": 9.0, "maxY": 580.5, "series": [{"data": [[9.0, 110.0], [10.0, 93.0], [11.0, 95.0], [13.0, 283.0], [14.0, 580.5], [15.0, 559.0], [16.0, 512.0], [17.0, 522.5], [18.0, 474.0], [19.0, 464.0], [20.0, 462.0], [21.0, 455.0], [22.0, 450.0], [23.0, 421.5], [24.0, 428.5], [25.0, 409.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 25.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 93.0, "minX": 9.0, "maxY": 572.0, "series": [{"data": [[9.0, 108.0], [10.0, 93.0], [11.0, 94.0], [13.0, 283.0], [14.0, 572.0], [15.0, 559.0], [16.0, 512.0], [17.0, 522.5], [18.0, 473.0], [19.0, 464.0], [20.0, 462.0], [21.0, 455.0], [22.0, 450.0], [23.0, 421.5], [24.0, 428.5], [25.0, 409.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 25.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.68527615E12, "maxY": 21.6, "series": [{"data": [[1.68527644E12, 17.9], [1.68527661E12, 19.2], [1.68527627E12, 20.1], [1.68527636E12, 20.0], [1.68527653E12, 17.2], [1.6852767E12, 19.8], [1.68527619E12, 19.6], [1.68527628E12, 20.3], [1.68527645E12, 18.4], [1.68527662E12, 19.7], [1.6852762E12, 21.5], [1.68527637E12, 20.1], [1.68527654E12, 16.9], [1.68527671E12, 19.6], [1.68527625E12, 20.4], [1.68527642E12, 19.2], [1.68527659E12, 18.2], [1.68527668E12, 19.6], [1.68527617E12, 18.3], [1.68527634E12, 20.3], [1.68527651E12, 16.0], [1.6852766E12, 18.8], [1.68527626E12, 21.0], [1.68527643E12, 19.1], [1.68527652E12, 16.9], [1.68527669E12, 18.7], [1.68527618E12, 20.2], [1.68527635E12, 20.3], [1.68527631E12, 20.1], [1.6852764E12, 19.7], [1.68527657E12, 17.5], [1.68527674E12, 19.5], [1.68527623E12, 21.1], [1.68527632E12, 20.6], [1.68527649E12, 16.7], [1.68527666E12, 19.9], [1.68527615E12, 1.0], [1.68527624E12, 21.3], [1.68527641E12, 19.5], [1.68527658E12, 17.6], [1.68527675E12, 18.6], [1.68527616E12, 13.7], [1.68527633E12, 20.0], [1.6852765E12, 17.4], [1.68527667E12, 19.9], [1.68527629E12, 19.9], [1.68527646E12, 18.4], [1.68527663E12, 19.7], [1.68527672E12, 19.5], [1.68527621E12, 21.6], [1.68527638E12, 20.4], [1.68527655E12, 17.3], [1.68527664E12, 19.8], [1.6852763E12, 20.5], [1.68527647E12, 17.3], [1.68527656E12, 17.7], [1.68527673E12, 19.4], [1.68527622E12, 21.2], [1.68527639E12, 20.0], [1.68527648E12, 17.6], [1.68527665E12, 19.7]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.68527675E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.9, "minX": 1.68527615E12, "maxY": 21.5, "series": [{"data": [[1.68527644E12, 17.9], [1.68527661E12, 19.2], [1.68527627E12, 20.1], [1.68527636E12, 20.0], [1.68527653E12, 17.2], [1.6852767E12, 19.8], [1.68527619E12, 19.5], [1.68527628E12, 20.3], [1.68527645E12, 18.4], [1.68527662E12, 19.7], [1.6852762E12, 21.3], [1.68527637E12, 20.1], [1.68527654E12, 16.9], [1.68527671E12, 19.6], [1.68527625E12, 20.4], [1.68527642E12, 19.1], [1.68527659E12, 18.2], [1.68527668E12, 19.6], [1.68527617E12, 18.1], [1.68527634E12, 20.3], [1.68527651E12, 16.0], [1.6852766E12, 18.8], [1.68527626E12, 21.0], [1.68527643E12, 19.1], [1.68527652E12, 16.9], [1.68527669E12, 18.7], [1.68527618E12, 20.0], [1.68527635E12, 20.3], [1.68527631E12, 20.1], [1.6852764E12, 19.7], [1.68527657E12, 17.5], [1.68527674E12, 19.5], [1.68527623E12, 21.1], [1.68527632E12, 20.6], [1.68527649E12, 16.7], [1.68527666E12, 19.9], [1.68527615E12, 0.9], [1.68527624E12, 21.3], [1.68527641E12, 19.6], [1.68527658E12, 17.6], [1.68527675E12, 19.6], [1.68527616E12, 13.6], [1.68527633E12, 20.0], [1.6852765E12, 17.4], [1.68527667E12, 19.9], [1.68527629E12, 19.9], [1.68527646E12, 18.4], [1.68527663E12, 19.7], [1.68527672E12, 19.5], [1.68527621E12, 21.5], [1.68527638E12, 20.4], [1.68527655E12, 17.3], [1.68527664E12, 19.8], [1.6852763E12, 20.5], [1.68527647E12, 17.3], [1.68527656E12, 17.7], [1.68527673E12, 19.4], [1.68527622E12, 21.2], [1.68527639E12, 20.0], [1.68527648E12, 17.6], [1.68527665E12, 19.7]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.68527675E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.1, "minX": 1.68527615E12, "maxY": 21.5, "series": [{"data": [[1.68527644E12, 17.9], [1.68527661E12, 19.2], [1.68527627E12, 20.1], [1.68527636E12, 20.0], [1.68527653E12, 17.2], [1.6852767E12, 19.8], [1.68527619E12, 19.5], [1.68527628E12, 20.3], [1.68527645E12, 18.4], [1.68527662E12, 19.7], [1.6852762E12, 21.3], [1.68527637E12, 20.1], [1.68527654E12, 16.9], [1.68527671E12, 19.6], [1.68527625E12, 20.4], [1.68527642E12, 19.1], [1.68527659E12, 18.2], [1.68527668E12, 19.6], [1.68527617E12, 18.1], [1.68527634E12, 20.3], [1.68527651E12, 16.0], [1.6852766E12, 18.8], [1.68527626E12, 21.0], [1.68527643E12, 19.1], [1.68527652E12, 16.9], [1.68527669E12, 18.7], [1.68527618E12, 20.0], [1.68527635E12, 20.3], [1.68527631E12, 20.1], [1.6852764E12, 19.7], [1.68527657E12, 17.5], [1.68527674E12, 19.5], [1.68527623E12, 21.1], [1.68527632E12, 20.6], [1.68527649E12, 16.7], [1.68527666E12, 19.9], [1.68527615E12, 0.6], [1.68527624E12, 21.3], [1.68527641E12, 19.6], [1.68527658E12, 17.6], [1.68527675E12, 19.6], [1.68527616E12, 13.6], [1.68527633E12, 20.0], [1.6852765E12, 17.4], [1.68527667E12, 19.9], [1.68527629E12, 19.9], [1.68527646E12, 18.4], [1.68527663E12, 19.7], [1.68527672E12, 19.5], [1.68527621E12, 21.5], [1.68527638E12, 20.4], [1.68527655E12, 17.3], [1.68527664E12, 19.8], [1.6852763E12, 20.5], [1.68527647E12, 17.3], [1.68527656E12, 17.7], [1.68527673E12, 19.4], [1.68527622E12, 21.2], [1.68527639E12, 20.0], [1.68527648E12, 17.6], [1.68527665E12, 19.7]], "isOverall": false, "label": "HTTP Request-success", "isController": false}, {"data": [[1.68527615E12, 0.1]], "isOverall": false, "label": "HTTP Request-0-success", "isController": false}, {"data": [[1.68527615E12, 0.1]], "isOverall": false, "label": "Register test user-success", "isController": false}, {"data": [[1.68527615E12, 0.1]], "isOverall": false, "label": "Register test user-0-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.68527675E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.9, "minX": 1.68527615E12, "maxY": 21.5, "series": [{"data": [[1.68527644E12, 17.9], [1.68527661E12, 19.2], [1.68527627E12, 20.1], [1.68527636E12, 20.0], [1.68527653E12, 17.2], [1.6852767E12, 19.8], [1.68527619E12, 19.5], [1.68527628E12, 20.3], [1.68527645E12, 18.4], [1.68527662E12, 19.7], [1.6852762E12, 21.3], [1.68527637E12, 20.1], [1.68527654E12, 16.9], [1.68527671E12, 19.6], [1.68527625E12, 20.4], [1.68527642E12, 19.1], [1.68527659E12, 18.2], [1.68527668E12, 19.6], [1.68527617E12, 18.1], [1.68527634E12, 20.3], [1.68527651E12, 16.0], [1.6852766E12, 18.8], [1.68527626E12, 21.0], [1.68527643E12, 19.1], [1.68527652E12, 16.9], [1.68527669E12, 18.7], [1.68527618E12, 20.0], [1.68527635E12, 20.3], [1.68527631E12, 20.1], [1.6852764E12, 19.7], [1.68527657E12, 17.5], [1.68527674E12, 19.5], [1.68527623E12, 21.1], [1.68527632E12, 20.6], [1.68527649E12, 16.7], [1.68527666E12, 19.9], [1.68527615E12, 0.9], [1.68527624E12, 21.3], [1.68527641E12, 19.6], [1.68527658E12, 17.6], [1.68527675E12, 19.6], [1.68527616E12, 13.6], [1.68527633E12, 20.0], [1.6852765E12, 17.4], [1.68527667E12, 19.9], [1.68527629E12, 19.9], [1.68527646E12, 18.4], [1.68527663E12, 19.7], [1.68527672E12, 19.5], [1.68527621E12, 21.5], [1.68527638E12, 20.4], [1.68527655E12, 17.3], [1.68527664E12, 19.8], [1.6852763E12, 20.5], [1.68527647E12, 17.3], [1.68527656E12, 17.7], [1.68527673E12, 19.4], [1.68527622E12, 21.2], [1.68527639E12, 20.0], [1.68527648E12, 17.6], [1.68527665E12, 19.7]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.68527675E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

