/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 13787.0, "series": [{"data": [[0.0, 346.0], [0.1, 346.0], [0.2, 346.0], [0.3, 346.0], [0.4, 346.0], [0.5, 346.0], [0.6, 346.0], [0.7, 346.0], [0.8, 346.0], [0.9, 346.0], [1.0, 346.0], [1.1, 346.0], [1.2, 346.0], [1.3, 346.0], [1.4, 346.0], [1.5, 346.0], [1.6, 346.0], [1.7, 346.0], [1.8, 346.0], [1.9, 346.0], [2.0, 346.0], [2.1, 346.0], [2.2, 346.0], [2.3, 346.0], [2.4, 346.0], [2.5, 346.0], [2.6, 346.0], [2.7, 346.0], [2.8, 346.0], [2.9, 346.0], [3.0, 346.0], [3.1, 346.0], [3.2, 346.0], [3.3, 346.0], [3.4, 346.0], [3.5, 346.0], [3.6, 346.0], [3.7, 346.0], [3.8, 346.0], [3.9, 346.0], [4.0, 346.0], [4.1, 346.0], [4.2, 346.0], [4.3, 346.0], [4.4, 346.0], [4.5, 346.0], [4.6, 346.0], [4.7, 346.0], [4.8, 346.0], [4.9, 346.0], [5.0, 346.0], [5.1, 346.0], [5.2, 346.0], [5.3, 346.0], [5.4, 346.0], [5.5, 346.0], [5.6, 346.0], [5.7, 346.0], [5.8, 346.0], [5.9, 346.0], [6.0, 346.0], [6.1, 346.0], [6.2, 346.0], [6.3, 346.0], [6.4, 346.0], [6.5, 346.0], [6.6, 346.0], [6.7, 346.0], [6.8, 346.0], [6.9, 346.0], [7.0, 346.0], [7.1, 346.0], [7.2, 346.0], [7.3, 346.0], [7.4, 346.0], [7.5, 346.0], [7.6, 346.0], [7.7, 346.0], [7.8, 346.0], [7.9, 346.0], [8.0, 346.0], [8.1, 346.0], [8.2, 346.0], [8.3, 346.0], [8.4, 346.0], [8.5, 346.0], [8.6, 346.0], [8.7, 346.0], [8.8, 346.0], [8.9, 346.0], [9.0, 346.0], [9.1, 346.0], [9.2, 346.0], [9.3, 346.0], [9.4, 346.0], [9.5, 346.0], [9.6, 346.0], [9.7, 346.0], [9.8, 346.0], [9.9, 346.0], [10.0, 346.0], [10.1, 346.0], [10.2, 346.0], [10.3, 346.0], [10.4, 346.0], [10.5, 346.0], [10.6, 346.0], [10.7, 346.0], [10.8, 346.0], [10.9, 346.0], [11.0, 346.0], [11.1, 346.0], [11.2, 346.0], [11.3, 346.0], [11.4, 346.0], [11.5, 346.0], [11.6, 346.0], [11.7, 346.0], [11.8, 346.0], [11.9, 346.0], [12.0, 346.0], [12.1, 346.0], [12.2, 346.0], [12.3, 346.0], [12.4, 346.0], [12.5, 346.0], [12.6, 346.0], [12.7, 346.0], [12.8, 346.0], [12.9, 346.0], [13.0, 346.0], [13.1, 346.0], [13.2, 346.0], [13.3, 346.0], [13.4, 346.0], [13.5, 346.0], [13.6, 346.0], [13.7, 346.0], [13.8, 346.0], [13.9, 346.0], [14.0, 346.0], [14.1, 346.0], [14.2, 346.0], [14.3, 346.0], [14.4, 346.0], [14.5, 346.0], [14.6, 346.0], [14.7, 346.0], [14.8, 346.0], [14.9, 346.0], [15.0, 346.0], [15.1, 346.0], [15.2, 346.0], [15.3, 346.0], [15.4, 346.0], [15.5, 346.0], [15.6, 346.0], [15.7, 346.0], [15.8, 346.0], [15.9, 346.0], [16.0, 346.0], [16.1, 346.0], [16.2, 346.0], [16.3, 346.0], [16.4, 346.0], [16.5, 346.0], [16.6, 346.0], [16.7, 346.0], [16.8, 346.0], [16.9, 346.0], [17.0, 346.0], [17.1, 346.0], [17.2, 346.0], [17.3, 346.0], [17.4, 346.0], [17.5, 346.0], [17.6, 346.0], [17.7, 346.0], [17.8, 346.0], [17.9, 346.0], [18.0, 346.0], [18.1, 346.0], [18.2, 346.0], [18.3, 346.0], [18.4, 346.0], [18.5, 346.0], [18.6, 346.0], [18.7, 346.0], [18.8, 346.0], [18.9, 346.0], [19.0, 346.0], [19.1, 346.0], [19.2, 346.0], [19.3, 346.0], [19.4, 346.0], [19.5, 346.0], [19.6, 346.0], [19.7, 346.0], [19.8, 346.0], [19.9, 346.0], [20.0, 346.0], [20.1, 346.0], [20.2, 346.0], [20.3, 346.0], [20.4, 346.0], [20.5, 346.0], [20.6, 346.0], [20.7, 346.0], [20.8, 346.0], [20.9, 346.0], [21.0, 346.0], [21.1, 346.0], [21.2, 346.0], [21.3, 346.0], [21.4, 346.0], [21.5, 346.0], [21.6, 346.0], [21.7, 346.0], [21.8, 346.0], [21.9, 346.0], [22.0, 346.0], [22.1, 346.0], [22.2, 346.0], [22.3, 346.0], [22.4, 346.0], [22.5, 346.0], [22.6, 346.0], [22.7, 346.0], [22.8, 346.0], [22.9, 346.0], [23.0, 346.0], [23.1, 346.0], [23.2, 346.0], [23.3, 346.0], [23.4, 346.0], [23.5, 346.0], [23.6, 346.0], [23.7, 346.0], [23.8, 346.0], [23.9, 346.0], [24.0, 346.0], [24.1, 346.0], [24.2, 346.0], [24.3, 346.0], [24.4, 346.0], [24.5, 346.0], [24.6, 346.0], [24.7, 346.0], [24.8, 346.0], [24.9, 346.0], [25.0, 346.0], [25.1, 346.0], [25.2, 346.0], [25.3, 346.0], [25.4, 346.0], [25.5, 346.0], [25.6, 346.0], [25.7, 346.0], [25.8, 346.0], [25.9, 346.0], [26.0, 346.0], [26.1, 346.0], [26.2, 346.0], [26.3, 346.0], [26.4, 346.0], [26.5, 346.0], [26.6, 346.0], [26.7, 346.0], [26.8, 346.0], [26.9, 346.0], [27.0, 346.0], [27.1, 346.0], [27.2, 346.0], [27.3, 346.0], [27.4, 346.0], [27.5, 346.0], [27.6, 346.0], [27.7, 346.0], [27.8, 346.0], [27.9, 346.0], [28.0, 346.0], [28.1, 346.0], [28.2, 346.0], [28.3, 346.0], [28.4, 346.0], [28.5, 346.0], [28.6, 346.0], [28.7, 346.0], [28.8, 346.0], [28.9, 346.0], [29.0, 346.0], [29.1, 346.0], [29.2, 346.0], [29.3, 346.0], [29.4, 346.0], [29.5, 346.0], [29.6, 346.0], [29.7, 346.0], [29.8, 346.0], [29.9, 346.0], [30.0, 346.0], [30.1, 346.0], [30.2, 346.0], [30.3, 346.0], [30.4, 346.0], [30.5, 346.0], [30.6, 346.0], [30.7, 346.0], [30.8, 346.0], [30.9, 346.0], [31.0, 346.0], [31.1, 346.0], [31.2, 346.0], [31.3, 346.0], [31.4, 346.0], [31.5, 346.0], [31.6, 346.0], [31.7, 346.0], [31.8, 346.0], [31.9, 346.0], [32.0, 346.0], [32.1, 346.0], [32.2, 346.0], [32.3, 346.0], [32.4, 346.0], [32.5, 346.0], [32.6, 346.0], [32.7, 346.0], [32.8, 346.0], [32.9, 346.0], [33.0, 346.0], [33.1, 346.0], [33.2, 346.0], [33.3, 346.0], [33.4, 346.0], [33.5, 346.0], [33.6, 346.0], [33.7, 346.0], [33.8, 346.0], [33.9, 346.0], [34.0, 346.0], [34.1, 346.0], [34.2, 346.0], [34.3, 346.0], [34.4, 346.0], [34.5, 346.0], [34.6, 346.0], [34.7, 346.0], [34.8, 346.0], [34.9, 346.0], [35.0, 346.0], [35.1, 346.0], [35.2, 346.0], [35.3, 346.0], [35.4, 346.0], [35.5, 346.0], [35.6, 346.0], [35.7, 346.0], [35.8, 346.0], [35.9, 346.0], [36.0, 346.0], [36.1, 346.0], [36.2, 346.0], [36.3, 346.0], [36.4, 346.0], [36.5, 346.0], [36.6, 346.0], [36.7, 346.0], [36.8, 346.0], [36.9, 346.0], [37.0, 346.0], [37.1, 346.0], [37.2, 346.0], [37.3, 346.0], [37.4, 346.0], [37.5, 346.0], [37.6, 346.0], [37.7, 346.0], [37.8, 346.0], [37.9, 346.0], [38.0, 346.0], [38.1, 346.0], [38.2, 346.0], [38.3, 346.0], [38.4, 346.0], [38.5, 346.0], [38.6, 346.0], [38.7, 346.0], [38.8, 346.0], [38.9, 346.0], [39.0, 346.0], [39.1, 346.0], [39.2, 346.0], [39.3, 346.0], [39.4, 346.0], [39.5, 346.0], [39.6, 346.0], [39.7, 346.0], [39.8, 346.0], [39.9, 346.0], [40.0, 346.0], [40.1, 346.0], [40.2, 346.0], [40.3, 346.0], [40.4, 346.0], [40.5, 346.0], [40.6, 346.0], [40.7, 346.0], [40.8, 346.0], [40.9, 346.0], [41.0, 346.0], [41.1, 346.0], [41.2, 346.0], [41.3, 346.0], [41.4, 346.0], [41.5, 346.0], [41.6, 346.0], [41.7, 346.0], [41.8, 346.0], [41.9, 346.0], [42.0, 346.0], [42.1, 346.0], [42.2, 346.0], [42.3, 346.0], [42.4, 346.0], [42.5, 346.0], [42.6, 346.0], [42.7, 346.0], [42.8, 346.0], [42.9, 346.0], [43.0, 346.0], [43.1, 346.0], [43.2, 346.0], [43.3, 346.0], [43.4, 346.0], [43.5, 346.0], [43.6, 346.0], [43.7, 346.0], [43.8, 346.0], [43.9, 346.0], [44.0, 346.0], [44.1, 346.0], [44.2, 346.0], [44.3, 346.0], [44.4, 346.0], [44.5, 346.0], [44.6, 346.0], [44.7, 346.0], [44.8, 346.0], [44.9, 346.0], [45.0, 346.0], [45.1, 346.0], [45.2, 346.0], [45.3, 346.0], [45.4, 346.0], [45.5, 346.0], [45.6, 346.0], [45.7, 346.0], [45.8, 346.0], [45.9, 346.0], [46.0, 346.0], [46.1, 346.0], [46.2, 346.0], [46.3, 346.0], [46.4, 346.0], [46.5, 346.0], [46.6, 346.0], [46.7, 346.0], [46.8, 346.0], [46.9, 346.0], [47.0, 346.0], [47.1, 346.0], [47.2, 346.0], [47.3, 346.0], [47.4, 346.0], [47.5, 346.0], [47.6, 346.0], [47.7, 346.0], [47.8, 346.0], [47.9, 346.0], [48.0, 346.0], [48.1, 346.0], [48.2, 346.0], [48.3, 346.0], [48.4, 346.0], [48.5, 346.0], [48.6, 346.0], [48.7, 346.0], [48.8, 346.0], [48.9, 346.0], [49.0, 346.0], [49.1, 346.0], [49.2, 346.0], [49.3, 346.0], [49.4, 346.0], [49.5, 346.0], [49.6, 346.0], [49.7, 346.0], [49.8, 346.0], [49.9, 346.0], [50.0, 346.0], [50.1, 346.0], [50.2, 346.0], [50.3, 346.0], [50.4, 346.0], [50.5, 346.0], [50.6, 346.0], [50.7, 346.0], [50.8, 346.0], [50.9, 346.0], [51.0, 346.0], [51.1, 346.0], [51.2, 346.0], [51.3, 346.0], [51.4, 346.0], [51.5, 346.0], [51.6, 346.0], [51.7, 346.0], [51.8, 346.0], [51.9, 346.0], [52.0, 346.0], [52.1, 346.0], [52.2, 346.0], [52.3, 346.0], [52.4, 346.0], [52.5, 346.0], [52.6, 346.0], [52.7, 346.0], [52.8, 346.0], [52.9, 346.0], [53.0, 346.0], [53.1, 346.0], [53.2, 346.0], [53.3, 346.0], [53.4, 346.0], [53.5, 346.0], [53.6, 346.0], [53.7, 346.0], [53.8, 346.0], [53.9, 346.0], [54.0, 346.0], [54.1, 346.0], [54.2, 346.0], [54.3, 346.0], [54.4, 346.0], [54.5, 346.0], [54.6, 346.0], [54.7, 346.0], [54.8, 346.0], [54.9, 346.0], [55.0, 346.0], [55.1, 346.0], [55.2, 346.0], [55.3, 346.0], [55.4, 346.0], [55.5, 346.0], [55.6, 346.0], [55.7, 346.0], [55.8, 346.0], [55.9, 346.0], [56.0, 346.0], [56.1, 346.0], [56.2, 346.0], [56.3, 346.0], [56.4, 346.0], [56.5, 346.0], [56.6, 346.0], [56.7, 346.0], [56.8, 346.0], [56.9, 346.0], [57.0, 346.0], [57.1, 346.0], [57.2, 346.0], [57.3, 346.0], [57.4, 346.0], [57.5, 346.0], [57.6, 346.0], [57.7, 346.0], [57.8, 346.0], [57.9, 346.0], [58.0, 346.0], [58.1, 346.0], [58.2, 346.0], [58.3, 346.0], [58.4, 346.0], [58.5, 346.0], [58.6, 346.0], [58.7, 346.0], [58.8, 346.0], [58.9, 346.0], [59.0, 346.0], [59.1, 346.0], [59.2, 346.0], [59.3, 346.0], [59.4, 346.0], [59.5, 346.0], [59.6, 346.0], [59.7, 346.0], [59.8, 346.0], [59.9, 346.0], [60.0, 346.0], [60.1, 346.0], [60.2, 346.0], [60.3, 346.0], [60.4, 346.0], [60.5, 346.0], [60.6, 346.0], [60.7, 346.0], [60.8, 346.0], [60.9, 346.0], [61.0, 346.0], [61.1, 346.0], [61.2, 346.0], [61.3, 346.0], [61.4, 346.0], [61.5, 346.0], [61.6, 346.0], [61.7, 346.0], [61.8, 346.0], [61.9, 346.0], [62.0, 346.0], [62.1, 346.0], [62.2, 346.0], [62.3, 346.0], [62.4, 346.0], [62.5, 346.0], [62.6, 346.0], [62.7, 346.0], [62.8, 346.0], [62.9, 346.0], [63.0, 346.0], [63.1, 346.0], [63.2, 346.0], [63.3, 346.0], [63.4, 346.0], [63.5, 346.0], [63.6, 346.0], [63.7, 346.0], [63.8, 346.0], [63.9, 346.0], [64.0, 346.0], [64.1, 346.0], [64.2, 346.0], [64.3, 346.0], [64.4, 346.0], [64.5, 346.0], [64.6, 346.0], [64.7, 346.0], [64.8, 346.0], [64.9, 346.0], [65.0, 346.0], [65.1, 346.0], [65.2, 346.0], [65.3, 346.0], [65.4, 346.0], [65.5, 346.0], [65.6, 346.0], [65.7, 346.0], [65.8, 346.0], [65.9, 346.0], [66.0, 346.0], [66.1, 346.0], [66.2, 346.0], [66.3, 346.0], [66.4, 346.0], [66.5, 346.0], [66.6, 346.0], [66.7, 346.0], [66.8, 346.0], [66.9, 346.0], [67.0, 346.0], [67.1, 346.0], [67.2, 346.0], [67.3, 346.0], [67.4, 346.0], [67.5, 346.0], [67.6, 346.0], [67.7, 346.0], [67.8, 346.0], [67.9, 346.0], [68.0, 346.0], [68.1, 346.0], [68.2, 346.0], [68.3, 346.0], [68.4, 346.0], [68.5, 346.0], [68.6, 346.0], [68.7, 346.0], [68.8, 346.0], [68.9, 346.0], [69.0, 346.0], [69.1, 346.0], [69.2, 346.0], [69.3, 346.0], [69.4, 346.0], [69.5, 346.0], [69.6, 346.0], [69.7, 346.0], [69.8, 346.0], [69.9, 346.0], [70.0, 346.0], [70.1, 346.0], [70.2, 346.0], [70.3, 346.0], [70.4, 346.0], [70.5, 346.0], [70.6, 346.0], [70.7, 346.0], [70.8, 346.0], [70.9, 346.0], [71.0, 346.0], [71.1, 346.0], [71.2, 346.0], [71.3, 346.0], [71.4, 346.0], [71.5, 346.0], [71.6, 346.0], [71.7, 346.0], [71.8, 346.0], [71.9, 346.0], [72.0, 346.0], [72.1, 346.0], [72.2, 346.0], [72.3, 346.0], [72.4, 346.0], [72.5, 346.0], [72.6, 346.0], [72.7, 346.0], [72.8, 346.0], [72.9, 346.0], [73.0, 346.0], [73.1, 346.0], [73.2, 346.0], [73.3, 346.0], [73.4, 346.0], [73.5, 346.0], [73.6, 346.0], [73.7, 346.0], [73.8, 346.0], [73.9, 346.0], [74.0, 346.0], [74.1, 346.0], [74.2, 346.0], [74.3, 346.0], [74.4, 346.0], [74.5, 346.0], [74.6, 346.0], [74.7, 346.0], [74.8, 346.0], [74.9, 346.0], [75.0, 346.0], [75.1, 346.0], [75.2, 346.0], [75.3, 346.0], [75.4, 346.0], [75.5, 346.0], [75.6, 346.0], [75.7, 346.0], [75.8, 346.0], [75.9, 346.0], [76.0, 346.0], [76.1, 346.0], [76.2, 346.0], [76.3, 346.0], [76.4, 346.0], [76.5, 346.0], [76.6, 346.0], [76.7, 346.0], [76.8, 346.0], [76.9, 346.0], [77.0, 346.0], [77.1, 346.0], [77.2, 346.0], [77.3, 346.0], [77.4, 346.0], [77.5, 346.0], [77.6, 346.0], [77.7, 346.0], [77.8, 346.0], [77.9, 346.0], [78.0, 346.0], [78.1, 346.0], [78.2, 346.0], [78.3, 346.0], [78.4, 346.0], [78.5, 346.0], [78.6, 346.0], [78.7, 346.0], [78.8, 346.0], [78.9, 346.0], [79.0, 346.0], [79.1, 346.0], [79.2, 346.0], [79.3, 346.0], [79.4, 346.0], [79.5, 346.0], [79.6, 346.0], [79.7, 346.0], [79.8, 346.0], [79.9, 346.0], [80.0, 346.0], [80.1, 346.0], [80.2, 346.0], [80.3, 346.0], [80.4, 346.0], [80.5, 346.0], [80.6, 346.0], [80.7, 346.0], [80.8, 346.0], [80.9, 346.0], [81.0, 346.0], [81.1, 346.0], [81.2, 346.0], [81.3, 346.0], [81.4, 346.0], [81.5, 346.0], [81.6, 346.0], [81.7, 346.0], [81.8, 346.0], [81.9, 346.0], [82.0, 346.0], [82.1, 346.0], [82.2, 346.0], [82.3, 346.0], [82.4, 346.0], [82.5, 346.0], [82.6, 346.0], [82.7, 346.0], [82.8, 346.0], [82.9, 346.0], [83.0, 346.0], [83.1, 346.0], [83.2, 346.0], [83.3, 346.0], [83.4, 346.0], [83.5, 346.0], [83.6, 346.0], [83.7, 346.0], [83.8, 346.0], [83.9, 346.0], [84.0, 346.0], [84.1, 346.0], [84.2, 346.0], [84.3, 346.0], [84.4, 346.0], [84.5, 346.0], [84.6, 346.0], [84.7, 346.0], [84.8, 346.0], [84.9, 346.0], [85.0, 346.0], [85.1, 346.0], [85.2, 346.0], [85.3, 346.0], [85.4, 346.0], [85.5, 346.0], [85.6, 346.0], [85.7, 346.0], [85.8, 346.0], [85.9, 346.0], [86.0, 346.0], [86.1, 346.0], [86.2, 346.0], [86.3, 346.0], [86.4, 346.0], [86.5, 346.0], [86.6, 346.0], [86.7, 346.0], [86.8, 346.0], [86.9, 346.0], [87.0, 346.0], [87.1, 346.0], [87.2, 346.0], [87.3, 346.0], [87.4, 346.0], [87.5, 346.0], [87.6, 346.0], [87.7, 346.0], [87.8, 346.0], [87.9, 346.0], [88.0, 346.0], [88.1, 346.0], [88.2, 346.0], [88.3, 346.0], [88.4, 346.0], [88.5, 346.0], [88.6, 346.0], [88.7, 346.0], [88.8, 346.0], [88.9, 346.0], [89.0, 346.0], [89.1, 346.0], [89.2, 346.0], [89.3, 346.0], [89.4, 346.0], [89.5, 346.0], [89.6, 346.0], [89.7, 346.0], [89.8, 346.0], [89.9, 346.0], [90.0, 346.0], [90.1, 346.0], [90.2, 346.0], [90.3, 346.0], [90.4, 346.0], [90.5, 346.0], [90.6, 346.0], [90.7, 346.0], [90.8, 346.0], [90.9, 346.0], [91.0, 346.0], [91.1, 346.0], [91.2, 346.0], [91.3, 346.0], [91.4, 346.0], [91.5, 346.0], [91.6, 346.0], [91.7, 346.0], [91.8, 346.0], [91.9, 346.0], [92.0, 346.0], [92.1, 346.0], [92.2, 346.0], [92.3, 346.0], [92.4, 346.0], [92.5, 346.0], [92.6, 346.0], [92.7, 346.0], [92.8, 346.0], [92.9, 346.0], [93.0, 346.0], [93.1, 346.0], [93.2, 346.0], [93.3, 346.0], [93.4, 346.0], [93.5, 346.0], [93.6, 346.0], [93.7, 346.0], [93.8, 346.0], [93.9, 346.0], [94.0, 346.0], [94.1, 346.0], [94.2, 346.0], [94.3, 346.0], [94.4, 346.0], [94.5, 346.0], [94.6, 346.0], [94.7, 346.0], [94.8, 346.0], [94.9, 346.0], [95.0, 346.0], [95.1, 346.0], [95.2, 346.0], [95.3, 346.0], [95.4, 346.0], [95.5, 346.0], [95.6, 346.0], [95.7, 346.0], [95.8, 346.0], [95.9, 346.0], [96.0, 346.0], [96.1, 346.0], [96.2, 346.0], [96.3, 346.0], [96.4, 346.0], [96.5, 346.0], [96.6, 346.0], [96.7, 346.0], [96.8, 346.0], [96.9, 346.0], [97.0, 346.0], [97.1, 346.0], [97.2, 346.0], [97.3, 346.0], [97.4, 346.0], [97.5, 346.0], [97.6, 346.0], [97.7, 346.0], [97.8, 346.0], [97.9, 346.0], [98.0, 346.0], [98.1, 346.0], [98.2, 346.0], [98.3, 346.0], [98.4, 346.0], [98.5, 346.0], [98.6, 346.0], [98.7, 346.0], [98.8, 346.0], [98.9, 346.0], [99.0, 346.0], [99.1, 346.0], [99.2, 346.0], [99.3, 346.0], [99.4, 346.0], [99.5, 346.0], [99.6, 346.0], [99.7, 346.0], [99.8, 346.0], [99.9, 346.0]], "isOverall": false, "label": "Register test user", "isController": false}, {"data": [[0.0, 2.0], [0.1, 2.0], [0.2, 2.0], [0.3, 2.0], [0.4, 2.0], [0.5, 2.0], [0.6, 2.0], [0.7, 2.0], [0.8, 2.0], [0.9, 2.0], [1.0, 2.0], [1.1, 2.0], [1.2, 2.0], [1.3, 2.0], [1.4, 2.0], [1.5, 2.0], [1.6, 2.0], [1.7, 2.0], [1.8, 2.0], [1.9, 2.0], [2.0, 2.0], [2.1, 2.0], [2.2, 2.0], [2.3, 2.0], [2.4, 2.0], [2.5, 2.0], [2.6, 2.0], [2.7, 2.0], [2.8, 2.0], [2.9, 2.0], [3.0, 2.0], [3.1, 2.0], [3.2, 2.0], [3.3, 2.0], [3.4, 2.0], [3.5, 2.0], [3.6, 2.0], [3.7, 2.0], [3.8, 2.0], [3.9, 2.0], [4.0, 2.0], [4.1, 2.0], [4.2, 2.0], [4.3, 2.0], [4.4, 2.0], [4.5, 2.0], [4.6, 2.0], [4.7, 2.0], [4.8, 2.0], [4.9, 2.0], [5.0, 2.0], [5.1, 2.0], [5.2, 2.0], [5.3, 2.0], [5.4, 2.0], [5.5, 2.0], [5.6, 2.0], [5.7, 2.0], [5.8, 2.0], [5.9, 2.0], [6.0, 2.0], [6.1, 2.0], [6.2, 2.0], [6.3, 2.0], [6.4, 2.0], [6.5, 2.0], [6.6, 2.0], [6.7, 2.0], [6.8, 2.0], [6.9, 2.0], [7.0, 2.0], [7.1, 2.0], [7.2, 2.0], [7.3, 2.0], [7.4, 2.0], [7.5, 2.0], [7.6, 2.0], [7.7, 2.0], [7.8, 2.0], [7.9, 2.0], [8.0, 2.0], [8.1, 2.0], [8.2, 2.0], [8.3, 2.0], [8.4, 2.0], [8.5, 2.0], [8.6, 2.0], [8.7, 2.0], [8.8, 2.0], [8.9, 2.0], [9.0, 2.0], [9.1, 2.0], [9.2, 2.0], [9.3, 2.0], [9.4, 2.0], [9.5, 2.0], [9.6, 2.0], [9.7, 2.0], [9.8, 2.0], [9.9, 2.0], [10.0, 2.0], [10.1, 2.0], [10.2, 2.0], [10.3, 2.0], [10.4, 2.0], [10.5, 2.0], [10.6, 2.0], [10.7, 2.0], [10.8, 2.0], [10.9, 2.0], [11.0, 2.0], [11.1, 2.0], [11.2, 2.0], [11.3, 2.0], [11.4, 2.0], [11.5, 2.0], [11.6, 2.0], [11.7, 2.0], [11.8, 2.0], [11.9, 2.0], [12.0, 2.0], [12.1, 2.0], [12.2, 2.0], [12.3, 2.0], [12.4, 2.0], [12.5, 2.0], [12.6, 2.0], [12.7, 2.0], [12.8, 2.0], [12.9, 2.0], [13.0, 2.0], [13.1, 2.0], [13.2, 2.0], [13.3, 2.0], [13.4, 2.0], [13.5, 2.0], [13.6, 2.0], [13.7, 2.0], [13.8, 2.0], [13.9, 2.0], [14.0, 2.0], [14.1, 2.0], [14.2, 2.0], [14.3, 2.0], [14.4, 2.0], [14.5, 2.0], [14.6, 2.0], [14.7, 2.0], [14.8, 2.0], [14.9, 2.0], [15.0, 2.0], [15.1, 2.0], [15.2, 2.0], [15.3, 2.0], [15.4, 2.0], [15.5, 2.0], [15.6, 2.0], [15.7, 2.0], [15.8, 2.0], [15.9, 2.0], [16.0, 2.0], [16.1, 2.0], [16.2, 2.0], [16.3, 2.0], [16.4, 2.0], [16.5, 2.0], [16.6, 2.0], [16.7, 2.0], [16.8, 2.0], [16.9, 2.0], [17.0, 2.0], [17.1, 2.0], [17.2, 2.0], [17.3, 2.0], [17.4, 2.0], [17.5, 2.0], [17.6, 2.0], [17.7, 2.0], [17.8, 2.0], [17.9, 2.0], [18.0, 2.0], [18.1, 2.0], [18.2, 2.0], [18.3, 2.0], [18.4, 2.0], [18.5, 2.0], [18.6, 2.0], [18.7, 2.0], [18.8, 2.0], [18.9, 2.0], [19.0, 2.0], [19.1, 2.0], [19.2, 2.0], [19.3, 2.0], [19.4, 2.0], [19.5, 2.0], [19.6, 2.0], [19.7, 2.0], [19.8, 2.0], [19.9, 2.0], [20.0, 2.0], [20.1, 2.0], [20.2, 2.0], [20.3, 2.0], [20.4, 2.0], [20.5, 2.0], [20.6, 2.0], [20.7, 2.0], [20.8, 2.0], [20.9, 2.0], [21.0, 2.0], [21.1, 2.0], [21.2, 2.0], [21.3, 2.0], [21.4, 2.0], [21.5, 2.0], [21.6, 2.0], [21.7, 2.0], [21.8, 2.0], [21.9, 2.0], [22.0, 2.0], [22.1, 2.0], [22.2, 2.0], [22.3, 2.0], [22.4, 2.0], [22.5, 2.0], [22.6, 2.0], [22.7, 2.0], [22.8, 2.0], [22.9, 2.0], [23.0, 2.0], [23.1, 2.0], [23.2, 2.0], [23.3, 2.0], [23.4, 2.0], [23.5, 2.0], [23.6, 2.0], [23.7, 2.0], [23.8, 2.0], [23.9, 2.0], [24.0, 2.0], [24.1, 2.0], [24.2, 2.0], [24.3, 2.0], [24.4, 2.0], [24.5, 2.0], [24.6, 2.0], [24.7, 2.0], [24.8, 2.0], [24.9, 2.0], [25.0, 2.0], [25.1, 2.0], [25.2, 2.0], [25.3, 2.0], [25.4, 2.0], [25.5, 2.0], [25.6, 2.0], [25.7, 2.0], [25.8, 2.0], [25.9, 2.0], [26.0, 2.0], [26.1, 2.0], [26.2, 2.0], [26.3, 2.0], [26.4, 2.0], [26.5, 2.0], [26.6, 2.0], [26.7, 2.0], [26.8, 2.0], [26.9, 2.0], [27.0, 2.0], [27.1, 2.0], [27.2, 2.0], [27.3, 2.0], [27.4, 2.0], [27.5, 2.0], [27.6, 2.0], [27.7, 2.0], [27.8, 2.0], [27.9, 2.0], [28.0, 2.0], [28.1, 2.0], [28.2, 2.0], [28.3, 2.0], [28.4, 2.0], [28.5, 2.0], [28.6, 2.0], [28.7, 2.0], [28.8, 2.0], [28.9, 2.0], [29.0, 2.0], [29.1, 2.0], [29.2, 2.0], [29.3, 2.0], [29.4, 2.0], [29.5, 2.0], [29.6, 2.0], [29.7, 2.0], [29.8, 2.0], [29.9, 2.0], [30.0, 2.0], [30.1, 2.0], [30.2, 2.0], [30.3, 2.0], [30.4, 2.0], [30.5, 2.0], [30.6, 2.0], [30.7, 2.0], [30.8, 2.0], [30.9, 2.0], [31.0, 2.0], [31.1, 2.0], [31.2, 2.0], [31.3, 2.0], [31.4, 2.0], [31.5, 2.0], [31.6, 2.0], [31.7, 2.0], [31.8, 2.0], [31.9, 2.0], [32.0, 2.0], [32.1, 2.0], [32.2, 2.0], [32.3, 2.0], [32.4, 2.0], [32.5, 2.0], [32.6, 2.0], [32.7, 2.0], [32.8, 2.0], [32.9, 2.0], [33.0, 2.0], [33.1, 2.0], [33.2, 2.0], [33.3, 2.0], [33.4, 2.0], [33.5, 2.0], [33.6, 2.0], [33.7, 2.0], [33.8, 2.0], [33.9, 2.0], [34.0, 2.0], [34.1, 2.0], [34.2, 2.0], [34.3, 2.0], [34.4, 2.0], [34.5, 2.0], [34.6, 2.0], [34.7, 2.0], [34.8, 2.0], [34.9, 2.0], [35.0, 2.0], [35.1, 2.0], [35.2, 2.0], [35.3, 2.0], [35.4, 2.0], [35.5, 2.0], [35.6, 2.0], [35.7, 2.0], [35.8, 2.0], [35.9, 2.0], [36.0, 2.0], [36.1, 2.0], [36.2, 2.0], [36.3, 2.0], [36.4, 2.0], [36.5, 2.0], [36.6, 2.0], [36.7, 2.0], [36.8, 2.0], [36.9, 2.0], [37.0, 2.0], [37.1, 2.0], [37.2, 2.0], [37.3, 2.0], [37.4, 2.0], [37.5, 2.0], [37.6, 2.0], [37.7, 2.0], [37.8, 2.0], [37.9, 2.0], [38.0, 2.0], [38.1, 2.0], [38.2, 2.0], [38.3, 2.0], [38.4, 2.0], [38.5, 2.0], [38.6, 2.0], [38.7, 2.0], [38.8, 2.0], [38.9, 2.0], [39.0, 2.0], [39.1, 2.0], [39.2, 2.0], [39.3, 2.0], [39.4, 2.0], [39.5, 2.0], [39.6, 2.0], [39.7, 2.0], [39.8, 2.0], [39.9, 2.0], [40.0, 2.0], [40.1, 2.0], [40.2, 2.0], [40.3, 2.0], [40.4, 2.0], [40.5, 2.0], [40.6, 2.0], [40.7, 2.0], [40.8, 2.0], [40.9, 2.0], [41.0, 2.0], [41.1, 2.0], [41.2, 2.0], [41.3, 2.0], [41.4, 2.0], [41.5, 2.0], [41.6, 2.0], [41.7, 2.0], [41.8, 2.0], [41.9, 2.0], [42.0, 2.0], [42.1, 2.0], [42.2, 2.0], [42.3, 2.0], [42.4, 2.0], [42.5, 2.0], [42.6, 2.0], [42.7, 2.0], [42.8, 2.0], [42.9, 2.0], [43.0, 2.0], [43.1, 2.0], [43.2, 2.0], [43.3, 2.0], [43.4, 2.0], [43.5, 2.0], [43.6, 2.0], [43.7, 2.0], [43.8, 2.0], [43.9, 2.0], [44.0, 2.0], [44.1, 2.0], [44.2, 2.0], [44.3, 2.0], [44.4, 2.0], [44.5, 2.0], [44.6, 2.0], [44.7, 2.0], [44.8, 2.0], [44.9, 2.0], [45.0, 2.0], [45.1, 2.0], [45.2, 2.0], [45.3, 2.0], [45.4, 2.0], [45.5, 2.0], [45.6, 2.0], [45.7, 2.0], [45.8, 2.0], [45.9, 2.0], [46.0, 2.0], [46.1, 2.0], [46.2, 2.0], [46.3, 2.0], [46.4, 2.0], [46.5, 2.0], [46.6, 2.0], [46.7, 2.0], [46.8, 2.0], [46.9, 2.0], [47.0, 2.0], [47.1, 2.0], [47.2, 2.0], [47.3, 2.0], [47.4, 2.0], [47.5, 2.0], [47.6, 2.0], [47.7, 2.0], [47.8, 2.0], [47.9, 2.0], [48.0, 2.0], [48.1, 2.0], [48.2, 2.0], [48.3, 2.0], [48.4, 2.0], [48.5, 2.0], [48.6, 2.0], [48.7, 2.0], [48.8, 2.0], [48.9, 2.0], [49.0, 2.0], [49.1, 2.0], [49.2, 2.0], [49.3, 2.0], [49.4, 2.0], [49.5, 2.0], [49.6, 2.0], [49.7, 2.0], [49.8, 2.0], [49.9, 2.0], [50.0, 2.0], [50.1, 2.0], [50.2, 2.0], [50.3, 2.0], [50.4, 2.0], [50.5, 2.0], [50.6, 2.0], [50.7, 2.0], [50.8, 2.0], [50.9, 2.0], [51.0, 2.0], [51.1, 2.0], [51.2, 2.0], [51.3, 2.0], [51.4, 2.0], [51.5, 2.0], [51.6, 2.0], [51.7, 2.0], [51.8, 2.0], [51.9, 2.0], [52.0, 2.0], [52.1, 2.0], [52.2, 2.0], [52.3, 2.0], [52.4, 2.0], [52.5, 2.0], [52.6, 2.0], [52.7, 2.0], [52.8, 2.0], [52.9, 2.0], [53.0, 2.0], [53.1, 2.0], [53.2, 2.0], [53.3, 2.0], [53.4, 2.0], [53.5, 2.0], [53.6, 2.0], [53.7, 2.0], [53.8, 2.0], [53.9, 2.0], [54.0, 2.0], [54.1, 2.0], [54.2, 2.0], [54.3, 2.0], [54.4, 2.0], [54.5, 2.0], [54.6, 2.0], [54.7, 2.0], [54.8, 2.0], [54.9, 2.0], [55.0, 2.0], [55.1, 2.0], [55.2, 2.0], [55.3, 2.0], [55.4, 2.0], [55.5, 2.0], [55.6, 2.0], [55.7, 2.0], [55.8, 2.0], [55.9, 2.0], [56.0, 2.0], [56.1, 2.0], [56.2, 2.0], [56.3, 2.0], [56.4, 2.0], [56.5, 2.0], [56.6, 2.0], [56.7, 2.0], [56.8, 2.0], [56.9, 2.0], [57.0, 2.0], [57.1, 2.0], [57.2, 2.0], [57.3, 2.0], [57.4, 2.0], [57.5, 2.0], [57.6, 2.0], [57.7, 2.0], [57.8, 2.0], [57.9, 2.0], [58.0, 2.0], [58.1, 2.0], [58.2, 2.0], [58.3, 2.0], [58.4, 2.0], [58.5, 2.0], [58.6, 2.0], [58.7, 2.0], [58.8, 2.0], [58.9, 2.0], [59.0, 2.0], [59.1, 2.0], [59.2, 2.0], [59.3, 2.0], [59.4, 2.0], [59.5, 2.0], [59.6, 2.0], [59.7, 2.0], [59.8, 2.0], [59.9, 2.0], [60.0, 2.0], [60.1, 2.0], [60.2, 2.0], [60.3, 2.0], [60.4, 2.0], [60.5, 2.0], [60.6, 2.0], [60.7, 2.0], [60.8, 2.0], [60.9, 2.0], [61.0, 2.0], [61.1, 2.0], [61.2, 2.0], [61.3, 2.0], [61.4, 2.0], [61.5, 2.0], [61.6, 2.0], [61.7, 2.0], [61.8, 2.0], [61.9, 2.0], [62.0, 2.0], [62.1, 2.0], [62.2, 2.0], [62.3, 2.0], [62.4, 2.0], [62.5, 2.0], [62.6, 2.0], [62.7, 2.0], [62.8, 2.0], [62.9, 2.0], [63.0, 2.0], [63.1, 2.0], [63.2, 2.0], [63.3, 2.0], [63.4, 2.0], [63.5, 2.0], [63.6, 2.0], [63.7, 2.0], [63.8, 2.0], [63.9, 2.0], [64.0, 2.0], [64.1, 2.0], [64.2, 2.0], [64.3, 2.0], [64.4, 2.0], [64.5, 2.0], [64.6, 2.0], [64.7, 2.0], [64.8, 2.0], [64.9, 2.0], [65.0, 2.0], [65.1, 2.0], [65.2, 2.0], [65.3, 2.0], [65.4, 2.0], [65.5, 2.0], [65.6, 2.0], [65.7, 2.0], [65.8, 2.0], [65.9, 2.0], [66.0, 2.0], [66.1, 2.0], [66.2, 2.0], [66.3, 2.0], [66.4, 2.0], [66.5, 2.0], [66.6, 2.0], [66.7, 2.0], [66.8, 2.0], [66.9, 2.0], [67.0, 2.0], [67.1, 2.0], [67.2, 2.0], [67.3, 2.0], [67.4, 2.0], [67.5, 2.0], [67.6, 2.0], [67.7, 2.0], [67.8, 2.0], [67.9, 2.0], [68.0, 2.0], [68.1, 2.0], [68.2, 2.0], [68.3, 2.0], [68.4, 2.0], [68.5, 2.0], [68.6, 2.0], [68.7, 2.0], [68.8, 2.0], [68.9, 2.0], [69.0, 2.0], [69.1, 2.0], [69.2, 2.0], [69.3, 2.0], [69.4, 2.0], [69.5, 2.0], [69.6, 2.0], [69.7, 2.0], [69.8, 2.0], [69.9, 2.0], [70.0, 2.0], [70.1, 2.0], [70.2, 2.0], [70.3, 2.0], [70.4, 2.0], [70.5, 2.0], [70.6, 2.0], [70.7, 2.0], [70.8, 2.0], [70.9, 2.0], [71.0, 2.0], [71.1, 2.0], [71.2, 2.0], [71.3, 2.0], [71.4, 2.0], [71.5, 2.0], [71.6, 2.0], [71.7, 2.0], [71.8, 2.0], [71.9, 2.0], [72.0, 2.0], [72.1, 2.0], [72.2, 2.0], [72.3, 2.0], [72.4, 2.0], [72.5, 2.0], [72.6, 2.0], [72.7, 2.0], [72.8, 2.0], [72.9, 2.0], [73.0, 2.0], [73.1, 2.0], [73.2, 2.0], [73.3, 2.0], [73.4, 2.0], [73.5, 2.0], [73.6, 2.0], [73.7, 2.0], [73.8, 2.0], [73.9, 2.0], [74.0, 2.0], [74.1, 2.0], [74.2, 2.0], [74.3, 2.0], [74.4, 2.0], [74.5, 2.0], [74.6, 2.0], [74.7, 2.0], [74.8, 2.0], [74.9, 2.0], [75.0, 2.0], [75.1, 2.0], [75.2, 2.0], [75.3, 2.0], [75.4, 2.0], [75.5, 2.0], [75.6, 2.0], [75.7, 2.0], [75.8, 2.0], [75.9, 2.0], [76.0, 2.0], [76.1, 2.0], [76.2, 2.0], [76.3, 2.0], [76.4, 2.0], [76.5, 2.0], [76.6, 2.0], [76.7, 2.0], [76.8, 2.0], [76.9, 2.0], [77.0, 2.0], [77.1, 2.0], [77.2, 2.0], [77.3, 2.0], [77.4, 2.0], [77.5, 2.0], [77.6, 2.0], [77.7, 2.0], [77.8, 2.0], [77.9, 2.0], [78.0, 2.0], [78.1, 2.0], [78.2, 2.0], [78.3, 2.0], [78.4, 2.0], [78.5, 2.0], [78.6, 2.0], [78.7, 2.0], [78.8, 2.0], [78.9, 2.0], [79.0, 2.0], [79.1, 2.0], [79.2, 2.0], [79.3, 2.0], [79.4, 2.0], [79.5, 2.0], [79.6, 2.0], [79.7, 2.0], [79.8, 2.0], [79.9, 2.0], [80.0, 2.0], [80.1, 2.0], [80.2, 2.0], [80.3, 2.0], [80.4, 2.0], [80.5, 2.0], [80.6, 2.0], [80.7, 2.0], [80.8, 2.0], [80.9, 2.0], [81.0, 2.0], [81.1, 2.0], [81.2, 2.0], [81.3, 2.0], [81.4, 2.0], [81.5, 2.0], [81.6, 2.0], [81.7, 2.0], [81.8, 2.0], [81.9, 2.0], [82.0, 2.0], [82.1, 2.0], [82.2, 2.0], [82.3, 2.0], [82.4, 2.0], [82.5, 2.0], [82.6, 2.0], [82.7, 2.0], [82.8, 2.0], [82.9, 2.0], [83.0, 2.0], [83.1, 2.0], [83.2, 2.0], [83.3, 2.0], [83.4, 2.0], [83.5, 2.0], [83.6, 2.0], [83.7, 2.0], [83.8, 2.0], [83.9, 2.0], [84.0, 2.0], [84.1, 2.0], [84.2, 2.0], [84.3, 2.0], [84.4, 2.0], [84.5, 2.0], [84.6, 2.0], [84.7, 2.0], [84.8, 2.0], [84.9, 2.0], [85.0, 2.0], [85.1, 2.0], [85.2, 2.0], [85.3, 2.0], [85.4, 2.0], [85.5, 2.0], [85.6, 2.0], [85.7, 2.0], [85.8, 2.0], [85.9, 2.0], [86.0, 2.0], [86.1, 2.0], [86.2, 2.0], [86.3, 2.0], [86.4, 2.0], [86.5, 2.0], [86.6, 2.0], [86.7, 2.0], [86.8, 2.0], [86.9, 2.0], [87.0, 2.0], [87.1, 2.0], [87.2, 2.0], [87.3, 2.0], [87.4, 2.0], [87.5, 2.0], [87.6, 2.0], [87.7, 2.0], [87.8, 2.0], [87.9, 2.0], [88.0, 2.0], [88.1, 2.0], [88.2, 2.0], [88.3, 2.0], [88.4, 2.0], [88.5, 2.0], [88.6, 2.0], [88.7, 2.0], [88.8, 2.0], [88.9, 2.0], [89.0, 2.0], [89.1, 2.0], [89.2, 2.0], [89.3, 2.0], [89.4, 2.0], [89.5, 2.0], [89.6, 2.0], [89.7, 2.0], [89.8, 2.0], [89.9, 2.0], [90.0, 2.0], [90.1, 2.0], [90.2, 2.0], [90.3, 2.0], [90.4, 2.0], [90.5, 2.0], [90.6, 2.0], [90.7, 2.0], [90.8, 2.0], [90.9, 2.0], [91.0, 2.0], [91.1, 2.0], [91.2, 2.0], [91.3, 2.0], [91.4, 2.0], [91.5, 2.0], [91.6, 2.0], [91.7, 2.0], [91.8, 2.0], [91.9, 2.0], [92.0, 2.0], [92.1, 2.0], [92.2, 2.0], [92.3, 2.0], [92.4, 2.0], [92.5, 2.0], [92.6, 2.0], [92.7, 2.0], [92.8, 2.0], [92.9, 2.0], [93.0, 2.0], [93.1, 2.0], [93.2, 2.0], [93.3, 2.0], [93.4, 2.0], [93.5, 2.0], [93.6, 2.0], [93.7, 2.0], [93.8, 2.0], [93.9, 2.0], [94.0, 2.0], [94.1, 2.0], [94.2, 2.0], [94.3, 2.0], [94.4, 2.0], [94.5, 2.0], [94.6, 2.0], [94.7, 2.0], [94.8, 2.0], [94.9, 2.0], [95.0, 2.0], [95.1, 2.0], [95.2, 2.0], [95.3, 2.0], [95.4, 2.0], [95.5, 2.0], [95.6, 2.0], [95.7, 2.0], [95.8, 2.0], [95.9, 2.0], [96.0, 2.0], [96.1, 2.0], [96.2, 2.0], [96.3, 2.0], [96.4, 2.0], [96.5, 2.0], [96.6, 2.0], [96.7, 2.0], [96.8, 2.0], [96.9, 2.0], [97.0, 2.0], [97.1, 2.0], [97.2, 2.0], [97.3, 2.0], [97.4, 2.0], [97.5, 2.0], [97.6, 2.0], [97.7, 2.0], [97.8, 2.0], [97.9, 2.0], [98.0, 2.0], [98.1, 2.0], [98.2, 2.0], [98.3, 2.0], [98.4, 2.0], [98.5, 2.0], [98.6, 2.0], [98.7, 2.0], [98.8, 2.0], [98.9, 2.0], [99.0, 2.0], [99.1, 2.0], [99.2, 2.0], [99.3, 2.0], [99.4, 2.0], [99.5, 2.0], [99.6, 2.0], [99.7, 2.0], [99.8, 2.0], [99.9, 2.0]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[0.0, 97.0], [0.1, 119.0], [0.2, 174.0], [0.3, 235.0], [0.4, 256.0], [0.5, 280.0], [0.6, 318.0], [0.7, 353.0], [0.8, 409.0], [0.9, 445.0], [1.0, 473.0], [1.1, 513.0], [1.2, 554.0], [1.3, 601.0], [1.4, 636.0], [1.5, 662.0], [1.6, 712.0], [1.7, 737.0], [1.8, 760.0], [1.9, 792.0], [2.0, 831.0], [2.1, 871.0], [2.2, 907.0], [2.3, 940.0], [2.4, 960.0], [2.5, 1023.0], [2.6, 1051.0], [2.7, 1094.0], [2.8, 1141.0], [2.9, 1185.0], [3.0, 1238.0], [3.1, 1263.0], [3.2, 1295.0], [3.3, 1316.0], [3.4, 1341.0], [3.5, 1365.0], [3.6, 1391.0], [3.7, 1427.0], [3.8, 1468.0], [3.9, 1497.0], [4.0, 1549.0], [4.1, 1577.0], [4.2, 1613.0], [4.3, 1654.0], [4.4, 1696.0], [4.5, 1746.0], [4.6, 1767.0], [4.7, 1814.0], [4.8, 1860.0], [4.9, 1902.0], [5.0, 1939.0], [5.1, 1971.0], [5.2, 2008.0], [5.3, 2045.0], [5.4, 2078.0], [5.5, 2115.0], [5.6, 2161.0], [5.7, 2204.0], [5.8, 2224.0], [5.9, 2270.0], [6.0, 2304.0], [6.1, 2337.0], [6.2, 2364.0], [6.3, 2387.0], [6.4, 2420.0], [6.5, 2449.0], [6.6, 2481.0], [6.7, 2505.0], [6.8, 2523.0], [6.9, 2536.0], [7.0, 2548.0], [7.1, 2558.0], [7.2, 2569.0], [7.3, 2585.0], [7.4, 2594.0], [7.5, 2604.0], [7.6, 2610.0], [7.7, 2621.0], [7.8, 2631.0], [7.9, 2639.0], [8.0, 2645.0], [8.1, 2657.0], [8.2, 2664.0], [8.3, 2672.0], [8.4, 2681.0], [8.5, 2686.0], [8.6, 2693.0], [8.7, 2699.0], [8.8, 2709.0], [8.9, 2718.0], [9.0, 2727.0], [9.1, 2734.0], [9.2, 2738.0], [9.3, 2747.0], [9.4, 2754.0], [9.5, 2767.0], [9.6, 2777.0], [9.7, 2787.0], [9.8, 2792.0], [9.9, 2800.0], [10.0, 2812.0], [10.1, 2823.0], [10.2, 2828.0], [10.3, 2836.0], [10.4, 2846.0], [10.5, 2853.0], [10.6, 2862.0], [10.7, 2873.0], [10.8, 2878.0], [10.9, 2888.0], [11.0, 2894.0], [11.1, 2909.0], [11.2, 2917.0], [11.3, 2926.0], [11.4, 2935.0], [11.5, 2942.0], [11.6, 2948.0], [11.7, 2956.0], [11.8, 2968.0], [11.9, 2975.0], [12.0, 2983.0], [12.1, 2991.0], [12.2, 2997.0], [12.3, 3008.0], [12.4, 3019.0], [12.5, 3026.0], [12.6, 3036.0], [12.7, 3043.0], [12.8, 3051.0], [12.9, 3055.0], [13.0, 3062.0], [13.1, 3067.0], [13.2, 3073.0], [13.3, 3080.0], [13.4, 3088.0], [13.5, 3097.0], [13.6, 3104.0], [13.7, 3110.0], [13.8, 3116.0], [13.9, 3125.0], [14.0, 3135.0], [14.1, 3142.0], [14.2, 3151.0], [14.3, 3158.0], [14.4, 3163.0], [14.5, 3171.0], [14.6, 3177.0], [14.7, 3183.0], [14.8, 3188.0], [14.9, 3194.0], [15.0, 3198.0], [15.1, 3208.0], [15.2, 3215.0], [15.3, 3222.0], [15.4, 3228.0], [15.5, 3240.0], [15.6, 3249.0], [15.7, 3259.0], [15.8, 3271.0], [15.9, 3280.0], [16.0, 3287.0], [16.1, 3298.0], [16.2, 3310.0], [16.3, 3321.0], [16.4, 3330.0], [16.5, 3343.0], [16.6, 3354.0], [16.7, 3366.0], [16.8, 3378.0], [16.9, 3390.0], [17.0, 3401.0], [17.1, 3410.0], [17.2, 3426.0], [17.3, 3436.0], [17.4, 3454.0], [17.5, 3468.0], [17.6, 3478.0], [17.7, 3493.0], [17.8, 3513.0], [17.9, 3524.0], [18.0, 3545.0], [18.1, 3568.0], [18.2, 3590.0], [18.3, 3614.0], [18.4, 3640.0], [18.5, 3658.0], [18.6, 3677.0], [18.7, 3744.0], [18.8, 3821.0], [18.9, 3867.0], [19.0, 3916.0], [19.1, 3946.0], [19.2, 3979.0], [19.3, 4021.0], [19.4, 4089.0], [19.5, 4139.0], [19.6, 4156.0], [19.7, 4185.0], [19.8, 4236.0], [19.9, 4253.0], [20.0, 4280.0], [20.1, 4305.0], [20.2, 4330.0], [20.3, 4368.0], [20.4, 4414.0], [20.5, 4449.0], [20.6, 4478.0], [20.7, 4499.0], [20.8, 4525.0], [20.9, 4536.0], [21.0, 4551.0], [21.1, 4565.0], [21.2, 4580.0], [21.3, 4598.0], [21.4, 4608.0], [21.5, 4622.0], [21.6, 4633.0], [21.7, 4643.0], [21.8, 4650.0], [21.9, 4654.0], [22.0, 4660.0], [22.1, 4667.0], [22.2, 4673.0], [22.3, 4679.0], [22.4, 4684.0], [22.5, 4689.0], [22.6, 4691.0], [22.7, 4697.0], [22.8, 4702.0], [22.9, 4707.0], [23.0, 4714.0], [23.1, 4720.0], [23.2, 4725.0], [23.3, 4731.0], [23.4, 4735.0], [23.5, 4739.0], [23.6, 4742.0], [23.7, 4746.0], [23.8, 4750.0], [23.9, 4753.0], [24.0, 4757.0], [24.1, 4761.0], [24.2, 4764.0], [24.3, 4766.0], [24.4, 4769.0], [24.5, 4772.0], [24.6, 4775.0], [24.7, 4779.0], [24.8, 4782.0], [24.9, 4784.0], [25.0, 4786.0], [25.1, 4789.0], [25.2, 4791.0], [25.3, 4793.0], [25.4, 4796.0], [25.5, 4798.0], [25.6, 4800.0], [25.7, 4803.0], [25.8, 4806.0], [25.9, 4808.0], [26.0, 4810.0], [26.1, 4813.0], [26.2, 4817.0], [26.3, 4818.0], [26.4, 4821.0], [26.5, 4824.0], [26.6, 4826.0], [26.7, 4827.0], [26.8, 4830.0], [26.9, 4832.0], [27.0, 4833.0], [27.1, 4834.0], [27.2, 4836.0], [27.3, 4837.0], [27.4, 4839.0], [27.5, 4840.0], [27.6, 4842.0], [27.7, 4844.0], [27.8, 4845.0], [27.9, 4846.0], [28.0, 4848.0], [28.1, 4850.0], [28.2, 4852.0], [28.3, 4855.0], [28.4, 4856.0], [28.5, 4858.0], [28.6, 4859.0], [28.7, 4860.0], [28.8, 4861.0], [28.9, 4863.0], [29.0, 4865.0], [29.1, 4866.0], [29.2, 4868.0], [29.3, 4869.0], [29.4, 4871.0], [29.5, 4873.0], [29.6, 4874.0], [29.7, 4875.0], [29.8, 4877.0], [29.9, 4879.0], [30.0, 4881.0], [30.1, 4882.0], [30.2, 4884.0], [30.3, 4886.0], [30.4, 4888.0], [30.5, 4889.0], [30.6, 4891.0], [30.7, 4892.0], [30.8, 4893.0], [30.9, 4894.0], [31.0, 4896.0], [31.1, 4897.0], [31.2, 4899.0], [31.3, 4899.0], [31.4, 4902.0], [31.5, 4903.0], [31.6, 4905.0], [31.7, 4906.0], [31.8, 4908.0], [31.9, 4909.0], [32.0, 4911.0], [32.1, 4912.0], [32.2, 4913.0], [32.3, 4915.0], [32.4, 4916.0], [32.5, 4919.0], [32.6, 4920.0], [32.7, 4921.0], [32.8, 4922.0], [32.9, 4924.0], [33.0, 4925.0], [33.1, 4927.0], [33.2, 4929.0], [33.3, 4931.0], [33.4, 4932.0], [33.5, 4933.0], [33.6, 4935.0], [33.7, 4937.0], [33.8, 4938.0], [33.9, 4940.0], [34.0, 4941.0], [34.1, 4942.0], [34.2, 4943.0], [34.3, 4945.0], [34.4, 4946.0], [34.5, 4948.0], [34.6, 4950.0], [34.7, 4951.0], [34.8, 4953.0], [34.9, 4955.0], [35.0, 4957.0], [35.1, 4959.0], [35.2, 4961.0], [35.3, 4962.0], [35.4, 4963.0], [35.5, 4964.0], [35.6, 4967.0], [35.7, 4968.0], [35.8, 4969.0], [35.9, 4971.0], [36.0, 4972.0], [36.1, 4973.0], [36.2, 4974.0], [36.3, 4976.0], [36.4, 4978.0], [36.5, 4979.0], [36.6, 4981.0], [36.7, 4983.0], [36.8, 4985.0], [36.9, 4986.0], [37.0, 4988.0], [37.1, 4989.0], [37.2, 4990.0], [37.3, 4991.0], [37.4, 4993.0], [37.5, 4995.0], [37.6, 4997.0], [37.7, 4999.0], [37.8, 5000.0], [37.9, 5002.0], [38.0, 5004.0], [38.1, 5006.0], [38.2, 5007.0], [38.3, 5009.0], [38.4, 5011.0], [38.5, 5012.0], [38.6, 5014.0], [38.7, 5016.0], [38.8, 5017.0], [38.9, 5018.0], [39.0, 5020.0], [39.1, 5023.0], [39.2, 5025.0], [39.3, 5026.0], [39.4, 5027.0], [39.5, 5030.0], [39.6, 5032.0], [39.7, 5035.0], [39.8, 5036.0], [39.9, 5037.0], [40.0, 5039.0], [40.1, 5040.0], [40.2, 5041.0], [40.3, 5043.0], [40.4, 5045.0], [40.5, 5046.0], [40.6, 5048.0], [40.7, 5050.0], [40.8, 5052.0], [40.9, 5054.0], [41.0, 5057.0], [41.1, 5060.0], [41.2, 5061.0], [41.3, 5063.0], [41.4, 5066.0], [41.5, 5068.0], [41.6, 5070.0], [41.7, 5071.0], [41.8, 5073.0], [41.9, 5075.0], [42.0, 5076.0], [42.1, 5078.0], [42.2, 5080.0], [42.3, 5083.0], [42.4, 5085.0], [42.5, 5088.0], [42.6, 5092.0], [42.7, 5093.0], [42.8, 5095.0], [42.9, 5099.0], [43.0, 5102.0], [43.1, 5104.0], [43.2, 5107.0], [43.3, 5109.0], [43.4, 5111.0], [43.5, 5113.0], [43.6, 5115.0], [43.7, 5118.0], [43.8, 5122.0], [43.9, 5124.0], [44.0, 5129.0], [44.1, 5133.0], [44.2, 5136.0], [44.3, 5141.0], [44.4, 5144.0], [44.5, 5146.0], [44.6, 5149.0], [44.7, 5152.0], [44.8, 5156.0], [44.9, 5158.0], [45.0, 5161.0], [45.1, 5162.0], [45.2, 5165.0], [45.3, 5168.0], [45.4, 5172.0], [45.5, 5178.0], [45.6, 5182.0], [45.7, 5188.0], [45.8, 5190.0], [45.9, 5194.0], [46.0, 5199.0], [46.1, 5205.0], [46.2, 5209.0], [46.3, 5213.0], [46.4, 5216.0], [46.5, 5222.0], [46.6, 5225.0], [46.7, 5229.0], [46.8, 5235.0], [46.9, 5243.0], [47.0, 5248.0], [47.1, 5254.0], [47.2, 5257.0], [47.3, 5265.0], [47.4, 5270.0], [47.5, 5275.0], [47.6, 5280.0], [47.7, 5290.0], [47.8, 5297.0], [47.9, 5301.0], [48.0, 5313.0], [48.1, 5316.0], [48.2, 5323.0], [48.3, 5331.0], [48.4, 5343.0], [48.5, 5350.0], [48.6, 5362.0], [48.7, 5369.0], [48.8, 5378.0], [48.9, 5388.0], [49.0, 5396.0], [49.1, 5401.0], [49.2, 5406.0], [49.3, 5410.0], [49.4, 5420.0], [49.5, 5424.0], [49.6, 5434.0], [49.7, 5437.0], [49.8, 5445.0], [49.9, 5449.0], [50.0, 5453.0], [50.1, 5456.0], [50.2, 5461.0], [50.3, 5465.0], [50.4, 5468.0], [50.5, 5471.0], [50.6, 5476.0], [50.7, 5483.0], [50.8, 5487.0], [50.9, 5491.0], [51.0, 5494.0], [51.1, 5497.0], [51.2, 5501.0], [51.3, 5503.0], [51.4, 5507.0], [51.5, 5510.0], [51.6, 5513.0], [51.7, 5515.0], [51.8, 5518.0], [51.9, 5522.0], [52.0, 5525.0], [52.1, 5528.0], [52.2, 5530.0], [52.3, 5531.0], [52.4, 5534.0], [52.5, 5537.0], [52.6, 5538.0], [52.7, 5540.0], [52.8, 5542.0], [52.9, 5543.0], [53.0, 5546.0], [53.1, 5547.0], [53.2, 5549.0], [53.3, 5551.0], [53.4, 5553.0], [53.5, 5555.0], [53.6, 5557.0], [53.7, 5558.0], [53.8, 5559.0], [53.9, 5561.0], [54.0, 5562.0], [54.1, 5565.0], [54.2, 5566.0], [54.3, 5568.0], [54.4, 5571.0], [54.5, 5573.0], [54.6, 5575.0], [54.7, 5577.0], [54.8, 5579.0], [54.9, 5581.0], [55.0, 5582.0], [55.1, 5584.0], [55.2, 5586.0], [55.3, 5588.0], [55.4, 5589.0], [55.5, 5592.0], [55.6, 5593.0], [55.7, 5594.0], [55.8, 5596.0], [55.9, 5597.0], [56.0, 5599.0], [56.1, 5600.0], [56.2, 5603.0], [56.3, 5604.0], [56.4, 5605.0], [56.5, 5606.0], [56.6, 5608.0], [56.7, 5609.0], [56.8, 5610.0], [56.9, 5612.0], [57.0, 5614.0], [57.1, 5615.0], [57.2, 5616.0], [57.3, 5617.0], [57.4, 5619.0], [57.5, 5620.0], [57.6, 5622.0], [57.7, 5624.0], [57.8, 5626.0], [57.9, 5628.0], [58.0, 5628.0], [58.1, 5630.0], [58.2, 5631.0], [58.3, 5632.0], [58.4, 5633.0], [58.5, 5635.0], [58.6, 5636.0], [58.7, 5637.0], [58.8, 5639.0], [58.9, 5640.0], [59.0, 5642.0], [59.1, 5643.0], [59.2, 5644.0], [59.3, 5646.0], [59.4, 5648.0], [59.5, 5650.0], [59.6, 5651.0], [59.7, 5653.0], [59.8, 5654.0], [59.9, 5655.0], [60.0, 5657.0], [60.1, 5658.0], [60.2, 5659.0], [60.3, 5660.0], [60.4, 5662.0], [60.5, 5663.0], [60.6, 5664.0], [60.7, 5665.0], [60.8, 5667.0], [60.9, 5668.0], [61.0, 5669.0], [61.1, 5671.0], [61.2, 5672.0], [61.3, 5674.0], [61.4, 5675.0], [61.5, 5675.0], [61.6, 5677.0], [61.7, 5679.0], [61.8, 5680.0], [61.9, 5681.0], [62.0, 5682.0], [62.1, 5684.0], [62.2, 5685.0], [62.3, 5687.0], [62.4, 5688.0], [62.5, 5690.0], [62.6, 5691.0], [62.7, 5693.0], [62.8, 5694.0], [62.9, 5695.0], [63.0, 5697.0], [63.1, 5697.0], [63.2, 5698.0], [63.3, 5700.0], [63.4, 5702.0], [63.5, 5703.0], [63.6, 5706.0], [63.7, 5707.0], [63.8, 5708.0], [63.9, 5710.0], [64.0, 5711.0], [64.1, 5712.0], [64.2, 5713.0], [64.3, 5715.0], [64.4, 5717.0], [64.5, 5719.0], [64.6, 5720.0], [64.7, 5722.0], [64.8, 5724.0], [64.9, 5725.0], [65.0, 5726.0], [65.1, 5727.0], [65.2, 5729.0], [65.3, 5730.0], [65.4, 5732.0], [65.5, 5733.0], [65.6, 5735.0], [65.7, 5737.0], [65.8, 5738.0], [65.9, 5741.0], [66.0, 5742.0], [66.1, 5743.0], [66.2, 5745.0], [66.3, 5747.0], [66.4, 5748.0], [66.5, 5749.0], [66.6, 5750.0], [66.7, 5752.0], [66.8, 5753.0], [66.9, 5754.0], [67.0, 5755.0], [67.1, 5757.0], [67.2, 5759.0], [67.3, 5760.0], [67.4, 5761.0], [67.5, 5763.0], [67.6, 5764.0], [67.7, 5766.0], [67.8, 5767.0], [67.9, 5768.0], [68.0, 5770.0], [68.1, 5771.0], [68.2, 5774.0], [68.3, 5775.0], [68.4, 5778.0], [68.5, 5781.0], [68.6, 5782.0], [68.7, 5783.0], [68.8, 5785.0], [68.9, 5787.0], [69.0, 5788.0], [69.1, 5790.0], [69.2, 5792.0], [69.3, 5793.0], [69.4, 5794.0], [69.5, 5797.0], [69.6, 5798.0], [69.7, 5801.0], [69.8, 5802.0], [69.9, 5804.0], [70.0, 5805.0], [70.1, 5806.0], [70.2, 5807.0], [70.3, 5809.0], [70.4, 5811.0], [70.5, 5812.0], [70.6, 5813.0], [70.7, 5814.0], [70.8, 5816.0], [70.9, 5817.0], [71.0, 5819.0], [71.1, 5820.0], [71.2, 5822.0], [71.3, 5823.0], [71.4, 5824.0], [71.5, 5825.0], [71.6, 5826.0], [71.7, 5828.0], [71.8, 5830.0], [71.9, 5831.0], [72.0, 5833.0], [72.1, 5835.0], [72.2, 5837.0], [72.3, 5838.0], [72.4, 5840.0], [72.5, 5842.0], [72.6, 5844.0], [72.7, 5846.0], [72.8, 5848.0], [72.9, 5849.0], [73.0, 5851.0], [73.1, 5853.0], [73.2, 5854.0], [73.3, 5856.0], [73.4, 5858.0], [73.5, 5860.0], [73.6, 5861.0], [73.7, 5863.0], [73.8, 5865.0], [73.9, 5868.0], [74.0, 5869.0], [74.1, 5871.0], [74.2, 5873.0], [74.3, 5874.0], [74.4, 5876.0], [74.5, 5877.0], [74.6, 5879.0], [74.7, 5880.0], [74.8, 5881.0], [74.9, 5882.0], [75.0, 5884.0], [75.1, 5886.0], [75.2, 5887.0], [75.3, 5889.0], [75.4, 5892.0], [75.5, 5894.0], [75.6, 5896.0], [75.7, 5898.0], [75.8, 5899.0], [75.9, 5901.0], [76.0, 5903.0], [76.1, 5905.0], [76.2, 5906.0], [76.3, 5908.0], [76.4, 5910.0], [76.5, 5911.0], [76.6, 5912.0], [76.7, 5914.0], [76.8, 5916.0], [76.9, 5919.0], [77.0, 5920.0], [77.1, 5922.0], [77.2, 5924.0], [77.3, 5926.0], [77.4, 5929.0], [77.5, 5931.0], [77.6, 5933.0], [77.7, 5936.0], [77.8, 5937.0], [77.9, 5939.0], [78.0, 5942.0], [78.1, 5944.0], [78.2, 5945.0], [78.3, 5947.0], [78.4, 5949.0], [78.5, 5951.0], [78.6, 5954.0], [78.7, 5956.0], [78.8, 5958.0], [78.9, 5960.0], [79.0, 5961.0], [79.1, 5963.0], [79.2, 5964.0], [79.3, 5966.0], [79.4, 5968.0], [79.5, 5970.0], [79.6, 5973.0], [79.7, 5975.0], [79.8, 5977.0], [79.9, 5978.0], [80.0, 5980.0], [80.1, 5982.0], [80.2, 5984.0], [80.3, 5987.0], [80.4, 5989.0], [80.5, 5992.0], [80.6, 5992.0], [80.7, 5994.0], [80.8, 5996.0], [80.9, 5999.0], [81.0, 6002.0], [81.1, 6004.0], [81.2, 6007.0], [81.3, 6009.0], [81.4, 6011.0], [81.5, 6014.0], [81.6, 6016.0], [81.7, 6019.0], [81.8, 6021.0], [81.9, 6023.0], [82.0, 6024.0], [82.1, 6028.0], [82.2, 6031.0], [82.3, 6035.0], [82.4, 6037.0], [82.5, 6040.0], [82.6, 6046.0], [82.7, 6048.0], [82.8, 6051.0], [82.9, 6053.0], [83.0, 6056.0], [83.1, 6061.0], [83.2, 6063.0], [83.3, 6065.0], [83.4, 6067.0], [83.5, 6069.0], [83.6, 6072.0], [83.7, 6075.0], [83.8, 6078.0], [83.9, 6081.0], [84.0, 6084.0], [84.1, 6086.0], [84.2, 6089.0], [84.3, 6094.0], [84.4, 6098.0], [84.5, 6101.0], [84.6, 6103.0], [84.7, 6106.0], [84.8, 6110.0], [84.9, 6111.0], [85.0, 6115.0], [85.1, 6118.0], [85.2, 6123.0], [85.3, 6127.0], [85.4, 6130.0], [85.5, 6132.0], [85.6, 6138.0], [85.7, 6141.0], [85.8, 6146.0], [85.9, 6148.0], [86.0, 6152.0], [86.1, 6154.0], [86.2, 6158.0], [86.3, 6161.0], [86.4, 6166.0], [86.5, 6168.0], [86.6, 6172.0], [86.7, 6176.0], [86.8, 6179.0], [86.9, 6182.0], [87.0, 6186.0], [87.1, 6190.0], [87.2, 6193.0], [87.3, 6198.0], [87.4, 6199.0], [87.5, 6202.0], [87.6, 6206.0], [87.7, 6213.0], [87.8, 6217.0], [87.9, 6225.0], [88.0, 6228.0], [88.1, 6234.0], [88.2, 6239.0], [88.3, 6245.0], [88.4, 6251.0], [88.5, 6259.0], [88.6, 6266.0], [88.7, 6272.0], [88.8, 6281.0], [88.9, 6293.0], [89.0, 6302.0], [89.1, 6312.0], [89.2, 6318.0], [89.3, 6330.0], [89.4, 6342.0], [89.5, 6351.0], [89.6, 6367.0], [89.7, 6389.0], [89.8, 6404.0], [89.9, 6423.0], [90.0, 6454.0], [90.1, 6488.0], [90.2, 6519.0], [90.3, 6551.0], [90.4, 6601.0], [90.5, 6640.0], [90.6, 6699.0], [90.7, 6746.0], [90.8, 6788.0], [90.9, 6815.0], [91.0, 6850.0], [91.1, 6888.0], [91.2, 6952.0], [91.3, 6980.0], [91.4, 6996.0], [91.5, 7012.0], [91.6, 7034.0], [91.7, 7056.0], [91.8, 7067.0], [91.9, 7083.0], [92.0, 7093.0], [92.1, 7107.0], [92.2, 7116.0], [92.3, 7138.0], [92.4, 7147.0], [92.5, 7156.0], [92.6, 7163.0], [92.7, 7173.0], [92.8, 7188.0], [92.9, 7203.0], [93.0, 7221.0], [93.1, 7240.0], [93.2, 7250.0], [93.3, 7272.0], [93.4, 7284.0], [93.5, 7302.0], [93.6, 7321.0], [93.7, 7351.0], [93.8, 7381.0], [93.9, 7417.0], [94.0, 7474.0], [94.1, 7543.0], [94.2, 7645.0], [94.3, 7728.0], [94.4, 7782.0], [94.5, 7862.0], [94.6, 7977.0], [94.7, 8023.0], [94.8, 8048.0], [94.9, 8070.0], [95.0, 8089.0], [95.1, 8108.0], [95.2, 8134.0], [95.3, 8149.0], [95.4, 8158.0], [95.5, 8175.0], [95.6, 8197.0], [95.7, 8214.0], [95.8, 8227.0], [95.9, 8235.0], [96.0, 8258.0], [96.1, 8274.0], [96.2, 8291.0], [96.3, 8312.0], [96.4, 8334.0], [96.5, 8350.0], [96.6, 8379.0], [96.7, 8396.0], [96.8, 8409.0], [96.9, 8431.0], [97.0, 8448.0], [97.1, 8477.0], [97.2, 8504.0], [97.3, 8521.0], [97.4, 8557.0], [97.5, 8583.0], [97.6, 8611.0], [97.7, 8631.0], [97.8, 8662.0], [97.9, 8688.0], [98.0, 8711.0], [98.1, 8728.0], [98.2, 8758.0], [98.3, 8781.0], [98.4, 8800.0], [98.5, 8814.0], [98.6, 8839.0], [98.7, 8856.0], [98.8, 8874.0], [98.9, 8897.0], [99.0, 8942.0], [99.1, 8980.0], [99.2, 9064.0], [99.3, 9141.0], [99.4, 9290.0], [99.5, 9419.0], [99.6, 9662.0], [99.7, 10707.0], [99.8, 10891.0], [99.9, 11449.0], [100.0, 13787.0]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[0.0, 1.0], [0.1, 1.0], [0.2, 1.0], [0.3, 1.0], [0.4, 1.0], [0.5, 1.0], [0.6, 1.0], [0.7, 1.0], [0.8, 1.0], [0.9, 1.0], [1.0, 1.0], [1.1, 1.0], [1.2, 1.0], [1.3, 1.0], [1.4, 1.0], [1.5, 1.0], [1.6, 1.0], [1.7, 1.0], [1.8, 1.0], [1.9, 1.0], [2.0, 1.0], [2.1, 1.0], [2.2, 1.0], [2.3, 1.0], [2.4, 1.0], [2.5, 1.0], [2.6, 1.0], [2.7, 1.0], [2.8, 1.0], [2.9, 1.0], [3.0, 1.0], [3.1, 1.0], [3.2, 1.0], [3.3, 1.0], [3.4, 1.0], [3.5, 1.0], [3.6, 1.0], [3.7, 1.0], [3.8, 1.0], [3.9, 1.0], [4.0, 1.0], [4.1, 1.0], [4.2, 1.0], [4.3, 1.0], [4.4, 1.0], [4.5, 1.0], [4.6, 1.0], [4.7, 1.0], [4.8, 1.0], [4.9, 1.0], [5.0, 1.0], [5.1, 1.0], [5.2, 1.0], [5.3, 1.0], [5.4, 1.0], [5.5, 1.0], [5.6, 1.0], [5.7, 1.0], [5.8, 1.0], [5.9, 1.0], [6.0, 1.0], [6.1, 1.0], [6.2, 1.0], [6.3, 1.0], [6.4, 1.0], [6.5, 1.0], [6.6, 1.0], [6.7, 1.0], [6.8, 1.0], [6.9, 1.0], [7.0, 1.0], [7.1, 1.0], [7.2, 1.0], [7.3, 1.0], [7.4, 1.0], [7.5, 1.0], [7.6, 1.0], [7.7, 1.0], [7.8, 1.0], [7.9, 1.0], [8.0, 1.0], [8.1, 1.0], [8.2, 1.0], [8.3, 1.0], [8.4, 1.0], [8.5, 1.0], [8.6, 1.0], [8.7, 1.0], [8.8, 1.0], [8.9, 1.0], [9.0, 1.0], [9.1, 1.0], [9.2, 1.0], [9.3, 1.0], [9.4, 1.0], [9.5, 1.0], [9.6, 1.0], [9.7, 1.0], [9.8, 1.0], [9.9, 1.0], [10.0, 1.0], [10.1, 1.0], [10.2, 1.0], [10.3, 1.0], [10.4, 1.0], [10.5, 1.0], [10.6, 1.0], [10.7, 1.0], [10.8, 1.0], [10.9, 1.0], [11.0, 1.0], [11.1, 1.0], [11.2, 1.0], [11.3, 1.0], [11.4, 1.0], [11.5, 1.0], [11.6, 1.0], [11.7, 1.0], [11.8, 1.0], [11.9, 1.0], [12.0, 1.0], [12.1, 1.0], [12.2, 1.0], [12.3, 1.0], [12.4, 1.0], [12.5, 1.0], [12.6, 1.0], [12.7, 1.0], [12.8, 1.0], [12.9, 1.0], [13.0, 1.0], [13.1, 1.0], [13.2, 1.0], [13.3, 1.0], [13.4, 1.0], [13.5, 1.0], [13.6, 1.0], [13.7, 1.0], [13.8, 1.0], [13.9, 1.0], [14.0, 1.0], [14.1, 1.0], [14.2, 1.0], [14.3, 1.0], [14.4, 1.0], [14.5, 1.0], [14.6, 1.0], [14.7, 1.0], [14.8, 1.0], [14.9, 1.0], [15.0, 1.0], [15.1, 1.0], [15.2, 1.0], [15.3, 1.0], [15.4, 1.0], [15.5, 1.0], [15.6, 1.0], [15.7, 1.0], [15.8, 1.0], [15.9, 1.0], [16.0, 1.0], [16.1, 1.0], [16.2, 1.0], [16.3, 1.0], [16.4, 1.0], [16.5, 1.0], [16.6, 1.0], [16.7, 1.0], [16.8, 1.0], [16.9, 1.0], [17.0, 1.0], [17.1, 1.0], [17.2, 1.0], [17.3, 1.0], [17.4, 1.0], [17.5, 1.0], [17.6, 1.0], [17.7, 1.0], [17.8, 1.0], [17.9, 1.0], [18.0, 1.0], [18.1, 1.0], [18.2, 1.0], [18.3, 1.0], [18.4, 1.0], [18.5, 1.0], [18.6, 1.0], [18.7, 1.0], [18.8, 1.0], [18.9, 1.0], [19.0, 1.0], [19.1, 1.0], [19.2, 1.0], [19.3, 1.0], [19.4, 1.0], [19.5, 1.0], [19.6, 1.0], [19.7, 1.0], [19.8, 1.0], [19.9, 1.0], [20.0, 1.0], [20.1, 1.0], [20.2, 1.0], [20.3, 1.0], [20.4, 1.0], [20.5, 1.0], [20.6, 1.0], [20.7, 1.0], [20.8, 1.0], [20.9, 1.0], [21.0, 1.0], [21.1, 1.0], [21.2, 1.0], [21.3, 1.0], [21.4, 1.0], [21.5, 1.0], [21.6, 1.0], [21.7, 1.0], [21.8, 1.0], [21.9, 1.0], [22.0, 1.0], [22.1, 1.0], [22.2, 1.0], [22.3, 1.0], [22.4, 1.0], [22.5, 1.0], [22.6, 1.0], [22.7, 1.0], [22.8, 1.0], [22.9, 1.0], [23.0, 1.0], [23.1, 1.0], [23.2, 1.0], [23.3, 1.0], [23.4, 1.0], [23.5, 1.0], [23.6, 1.0], [23.7, 1.0], [23.8, 1.0], [23.9, 1.0], [24.0, 1.0], [24.1, 1.0], [24.2, 1.0], [24.3, 1.0], [24.4, 1.0], [24.5, 1.0], [24.6, 1.0], [24.7, 1.0], [24.8, 1.0], [24.9, 1.0], [25.0, 1.0], [25.1, 1.0], [25.2, 1.0], [25.3, 1.0], [25.4, 1.0], [25.5, 1.0], [25.6, 1.0], [25.7, 1.0], [25.8, 1.0], [25.9, 1.0], [26.0, 1.0], [26.1, 1.0], [26.2, 1.0], [26.3, 1.0], [26.4, 1.0], [26.5, 1.0], [26.6, 1.0], [26.7, 1.0], [26.8, 1.0], [26.9, 1.0], [27.0, 1.0], [27.1, 1.0], [27.2, 1.0], [27.3, 1.0], [27.4, 1.0], [27.5, 1.0], [27.6, 1.0], [27.7, 1.0], [27.8, 1.0], [27.9, 1.0], [28.0, 1.0], [28.1, 1.0], [28.2, 1.0], [28.3, 1.0], [28.4, 1.0], [28.5, 1.0], [28.6, 1.0], [28.7, 1.0], [28.8, 1.0], [28.9, 1.0], [29.0, 1.0], [29.1, 1.0], [29.2, 1.0], [29.3, 1.0], [29.4, 1.0], [29.5, 1.0], [29.6, 1.0], [29.7, 1.0], [29.8, 1.0], [29.9, 1.0], [30.0, 1.0], [30.1, 1.0], [30.2, 1.0], [30.3, 1.0], [30.4, 1.0], [30.5, 1.0], [30.6, 1.0], [30.7, 1.0], [30.8, 1.0], [30.9, 1.0], [31.0, 1.0], [31.1, 1.0], [31.2, 1.0], [31.3, 1.0], [31.4, 1.0], [31.5, 1.0], [31.6, 1.0], [31.7, 1.0], [31.8, 1.0], [31.9, 1.0], [32.0, 1.0], [32.1, 1.0], [32.2, 1.0], [32.3, 1.0], [32.4, 1.0], [32.5, 1.0], [32.6, 1.0], [32.7, 1.0], [32.8, 1.0], [32.9, 1.0], [33.0, 1.0], [33.1, 1.0], [33.2, 1.0], [33.3, 1.0], [33.4, 1.0], [33.5, 1.0], [33.6, 1.0], [33.7, 1.0], [33.8, 1.0], [33.9, 1.0], [34.0, 1.0], [34.1, 1.0], [34.2, 1.0], [34.3, 1.0], [34.4, 1.0], [34.5, 1.0], [34.6, 1.0], [34.7, 1.0], [34.8, 1.0], [34.9, 1.0], [35.0, 1.0], [35.1, 1.0], [35.2, 1.0], [35.3, 1.0], [35.4, 1.0], [35.5, 1.0], [35.6, 1.0], [35.7, 1.0], [35.8, 1.0], [35.9, 1.0], [36.0, 1.0], [36.1, 1.0], [36.2, 1.0], [36.3, 1.0], [36.4, 1.0], [36.5, 1.0], [36.6, 1.0], [36.7, 1.0], [36.8, 1.0], [36.9, 1.0], [37.0, 1.0], [37.1, 1.0], [37.2, 1.0], [37.3, 1.0], [37.4, 1.0], [37.5, 1.0], [37.6, 1.0], [37.7, 1.0], [37.8, 1.0], [37.9, 1.0], [38.0, 1.0], [38.1, 1.0], [38.2, 1.0], [38.3, 1.0], [38.4, 1.0], [38.5, 1.0], [38.6, 1.0], [38.7, 1.0], [38.8, 1.0], [38.9, 1.0], [39.0, 1.0], [39.1, 1.0], [39.2, 1.0], [39.3, 1.0], [39.4, 1.0], [39.5, 1.0], [39.6, 1.0], [39.7, 1.0], [39.8, 1.0], [39.9, 1.0], [40.0, 1.0], [40.1, 1.0], [40.2, 1.0], [40.3, 1.0], [40.4, 1.0], [40.5, 1.0], [40.6, 1.0], [40.7, 1.0], [40.8, 1.0], [40.9, 1.0], [41.0, 1.0], [41.1, 1.0], [41.2, 1.0], [41.3, 1.0], [41.4, 1.0], [41.5, 1.0], [41.6, 1.0], [41.7, 1.0], [41.8, 1.0], [41.9, 1.0], [42.0, 1.0], [42.1, 1.0], [42.2, 1.0], [42.3, 1.0], [42.4, 1.0], [42.5, 1.0], [42.6, 1.0], [42.7, 1.0], [42.8, 1.0], [42.9, 1.0], [43.0, 1.0], [43.1, 1.0], [43.2, 1.0], [43.3, 1.0], [43.4, 1.0], [43.5, 1.0], [43.6, 1.0], [43.7, 1.0], [43.8, 1.0], [43.9, 1.0], [44.0, 1.0], [44.1, 1.0], [44.2, 1.0], [44.3, 1.0], [44.4, 1.0], [44.5, 1.0], [44.6, 1.0], [44.7, 1.0], [44.8, 1.0], [44.9, 1.0], [45.0, 1.0], [45.1, 1.0], [45.2, 1.0], [45.3, 1.0], [45.4, 1.0], [45.5, 1.0], [45.6, 1.0], [45.7, 1.0], [45.8, 1.0], [45.9, 1.0], [46.0, 1.0], [46.1, 1.0], [46.2, 1.0], [46.3, 1.0], [46.4, 1.0], [46.5, 1.0], [46.6, 1.0], [46.7, 1.0], [46.8, 1.0], [46.9, 1.0], [47.0, 1.0], [47.1, 1.0], [47.2, 1.0], [47.3, 1.0], [47.4, 1.0], [47.5, 1.0], [47.6, 1.0], [47.7, 1.0], [47.8, 1.0], [47.9, 1.0], [48.0, 1.0], [48.1, 1.0], [48.2, 1.0], [48.3, 1.0], [48.4, 1.0], [48.5, 1.0], [48.6, 1.0], [48.7, 1.0], [48.8, 1.0], [48.9, 1.0], [49.0, 1.0], [49.1, 1.0], [49.2, 1.0], [49.3, 1.0], [49.4, 1.0], [49.5, 1.0], [49.6, 1.0], [49.7, 1.0], [49.8, 1.0], [49.9, 1.0], [50.0, 1.0], [50.1, 1.0], [50.2, 1.0], [50.3, 1.0], [50.4, 1.0], [50.5, 1.0], [50.6, 1.0], [50.7, 1.0], [50.8, 1.0], [50.9, 1.0], [51.0, 1.0], [51.1, 1.0], [51.2, 1.0], [51.3, 1.0], [51.4, 1.0], [51.5, 1.0], [51.6, 1.0], [51.7, 1.0], [51.8, 1.0], [51.9, 1.0], [52.0, 1.0], [52.1, 1.0], [52.2, 1.0], [52.3, 1.0], [52.4, 1.0], [52.5, 1.0], [52.6, 1.0], [52.7, 1.0], [52.8, 1.0], [52.9, 1.0], [53.0, 1.0], [53.1, 1.0], [53.2, 1.0], [53.3, 1.0], [53.4, 1.0], [53.5, 1.0], [53.6, 1.0], [53.7, 1.0], [53.8, 1.0], [53.9, 1.0], [54.0, 1.0], [54.1, 1.0], [54.2, 1.0], [54.3, 1.0], [54.4, 1.0], [54.5, 1.0], [54.6, 1.0], [54.7, 1.0], [54.8, 1.0], [54.9, 1.0], [55.0, 1.0], [55.1, 1.0], [55.2, 1.0], [55.3, 1.0], [55.4, 1.0], [55.5, 1.0], [55.6, 1.0], [55.7, 1.0], [55.8, 1.0], [55.9, 1.0], [56.0, 1.0], [56.1, 1.0], [56.2, 1.0], [56.3, 1.0], [56.4, 1.0], [56.5, 1.0], [56.6, 1.0], [56.7, 1.0], [56.8, 1.0], [56.9, 1.0], [57.0, 1.0], [57.1, 1.0], [57.2, 1.0], [57.3, 1.0], [57.4, 1.0], [57.5, 1.0], [57.6, 1.0], [57.7, 1.0], [57.8, 1.0], [57.9, 1.0], [58.0, 1.0], [58.1, 1.0], [58.2, 1.0], [58.3, 1.0], [58.4, 1.0], [58.5, 1.0], [58.6, 1.0], [58.7, 1.0], [58.8, 1.0], [58.9, 1.0], [59.0, 1.0], [59.1, 1.0], [59.2, 1.0], [59.3, 1.0], [59.4, 1.0], [59.5, 1.0], [59.6, 1.0], [59.7, 1.0], [59.8, 1.0], [59.9, 1.0], [60.0, 1.0], [60.1, 1.0], [60.2, 1.0], [60.3, 1.0], [60.4, 1.0], [60.5, 1.0], [60.6, 1.0], [60.7, 1.0], [60.8, 1.0], [60.9, 1.0], [61.0, 1.0], [61.1, 1.0], [61.2, 1.0], [61.3, 1.0], [61.4, 1.0], [61.5, 1.0], [61.6, 1.0], [61.7, 1.0], [61.8, 1.0], [61.9, 1.0], [62.0, 1.0], [62.1, 1.0], [62.2, 1.0], [62.3, 1.0], [62.4, 1.0], [62.5, 1.0], [62.6, 1.0], [62.7, 1.0], [62.8, 1.0], [62.9, 1.0], [63.0, 1.0], [63.1, 1.0], [63.2, 1.0], [63.3, 1.0], [63.4, 1.0], [63.5, 1.0], [63.6, 1.0], [63.7, 1.0], [63.8, 1.0], [63.9, 1.0], [64.0, 1.0], [64.1, 1.0], [64.2, 1.0], [64.3, 1.0], [64.4, 1.0], [64.5, 1.0], [64.6, 1.0], [64.7, 1.0], [64.8, 1.0], [64.9, 1.0], [65.0, 1.0], [65.1, 1.0], [65.2, 1.0], [65.3, 1.0], [65.4, 1.0], [65.5, 1.0], [65.6, 1.0], [65.7, 1.0], [65.8, 1.0], [65.9, 1.0], [66.0, 1.0], [66.1, 1.0], [66.2, 1.0], [66.3, 1.0], [66.4, 1.0], [66.5, 1.0], [66.6, 1.0], [66.7, 1.0], [66.8, 1.0], [66.9, 1.0], [67.0, 1.0], [67.1, 1.0], [67.2, 1.0], [67.3, 1.0], [67.4, 1.0], [67.5, 1.0], [67.6, 1.0], [67.7, 1.0], [67.8, 1.0], [67.9, 1.0], [68.0, 1.0], [68.1, 1.0], [68.2, 1.0], [68.3, 1.0], [68.4, 1.0], [68.5, 1.0], [68.6, 1.0], [68.7, 1.0], [68.8, 1.0], [68.9, 1.0], [69.0, 1.0], [69.1, 1.0], [69.2, 1.0], [69.3, 1.0], [69.4, 1.0], [69.5, 1.0], [69.6, 1.0], [69.7, 1.0], [69.8, 1.0], [69.9, 1.0], [70.0, 1.0], [70.1, 1.0], [70.2, 1.0], [70.3, 1.0], [70.4, 1.0], [70.5, 1.0], [70.6, 1.0], [70.7, 1.0], [70.8, 1.0], [70.9, 1.0], [71.0, 1.0], [71.1, 1.0], [71.2, 1.0], [71.3, 1.0], [71.4, 1.0], [71.5, 1.0], [71.6, 1.0], [71.7, 1.0], [71.8, 1.0], [71.9, 1.0], [72.0, 1.0], [72.1, 1.0], [72.2, 1.0], [72.3, 1.0], [72.4, 1.0], [72.5, 1.0], [72.6, 1.0], [72.7, 1.0], [72.8, 1.0], [72.9, 1.0], [73.0, 1.0], [73.1, 1.0], [73.2, 1.0], [73.3, 1.0], [73.4, 1.0], [73.5, 1.0], [73.6, 1.0], [73.7, 1.0], [73.8, 1.0], [73.9, 1.0], [74.0, 1.0], [74.1, 1.0], [74.2, 1.0], [74.3, 1.0], [74.4, 1.0], [74.5, 1.0], [74.6, 1.0], [74.7, 1.0], [74.8, 1.0], [74.9, 1.0], [75.0, 1.0], [75.1, 1.0], [75.2, 1.0], [75.3, 1.0], [75.4, 1.0], [75.5, 1.0], [75.6, 1.0], [75.7, 1.0], [75.8, 1.0], [75.9, 1.0], [76.0, 1.0], [76.1, 1.0], [76.2, 1.0], [76.3, 1.0], [76.4, 1.0], [76.5, 1.0], [76.6, 1.0], [76.7, 1.0], [76.8, 1.0], [76.9, 1.0], [77.0, 1.0], [77.1, 1.0], [77.2, 1.0], [77.3, 1.0], [77.4, 1.0], [77.5, 1.0], [77.6, 1.0], [77.7, 1.0], [77.8, 1.0], [77.9, 1.0], [78.0, 1.0], [78.1, 1.0], [78.2, 1.0], [78.3, 1.0], [78.4, 1.0], [78.5, 1.0], [78.6, 1.0], [78.7, 1.0], [78.8, 1.0], [78.9, 1.0], [79.0, 1.0], [79.1, 1.0], [79.2, 1.0], [79.3, 1.0], [79.4, 1.0], [79.5, 1.0], [79.6, 1.0], [79.7, 1.0], [79.8, 1.0], [79.9, 1.0], [80.0, 1.0], [80.1, 1.0], [80.2, 1.0], [80.3, 1.0], [80.4, 1.0], [80.5, 1.0], [80.6, 1.0], [80.7, 1.0], [80.8, 1.0], [80.9, 1.0], [81.0, 1.0], [81.1, 1.0], [81.2, 1.0], [81.3, 1.0], [81.4, 1.0], [81.5, 1.0], [81.6, 1.0], [81.7, 1.0], [81.8, 1.0], [81.9, 1.0], [82.0, 1.0], [82.1, 1.0], [82.2, 1.0], [82.3, 1.0], [82.4, 1.0], [82.5, 1.0], [82.6, 1.0], [82.7, 1.0], [82.8, 1.0], [82.9, 1.0], [83.0, 1.0], [83.1, 1.0], [83.2, 1.0], [83.3, 1.0], [83.4, 1.0], [83.5, 1.0], [83.6, 1.0], [83.7, 1.0], [83.8, 1.0], [83.9, 1.0], [84.0, 1.0], [84.1, 1.0], [84.2, 1.0], [84.3, 1.0], [84.4, 1.0], [84.5, 1.0], [84.6, 1.0], [84.7, 1.0], [84.8, 1.0], [84.9, 1.0], [85.0, 1.0], [85.1, 1.0], [85.2, 1.0], [85.3, 1.0], [85.4, 1.0], [85.5, 1.0], [85.6, 1.0], [85.7, 1.0], [85.8, 1.0], [85.9, 1.0], [86.0, 1.0], [86.1, 1.0], [86.2, 1.0], [86.3, 1.0], [86.4, 1.0], [86.5, 1.0], [86.6, 1.0], [86.7, 1.0], [86.8, 1.0], [86.9, 1.0], [87.0, 1.0], [87.1, 1.0], [87.2, 1.0], [87.3, 1.0], [87.4, 1.0], [87.5, 1.0], [87.6, 1.0], [87.7, 1.0], [87.8, 1.0], [87.9, 1.0], [88.0, 1.0], [88.1, 1.0], [88.2, 1.0], [88.3, 1.0], [88.4, 1.0], [88.5, 1.0], [88.6, 1.0], [88.7, 1.0], [88.8, 1.0], [88.9, 1.0], [89.0, 1.0], [89.1, 1.0], [89.2, 1.0], [89.3, 1.0], [89.4, 1.0], [89.5, 1.0], [89.6, 1.0], [89.7, 1.0], [89.8, 1.0], [89.9, 1.0], [90.0, 1.0], [90.1, 1.0], [90.2, 1.0], [90.3, 1.0], [90.4, 1.0], [90.5, 1.0], [90.6, 1.0], [90.7, 1.0], [90.8, 1.0], [90.9, 1.0], [91.0, 1.0], [91.1, 1.0], [91.2, 1.0], [91.3, 1.0], [91.4, 1.0], [91.5, 1.0], [91.6, 1.0], [91.7, 1.0], [91.8, 1.0], [91.9, 1.0], [92.0, 1.0], [92.1, 1.0], [92.2, 1.0], [92.3, 1.0], [92.4, 1.0], [92.5, 1.0], [92.6, 1.0], [92.7, 1.0], [92.8, 1.0], [92.9, 1.0], [93.0, 1.0], [93.1, 1.0], [93.2, 1.0], [93.3, 1.0], [93.4, 1.0], [93.5, 1.0], [93.6, 1.0], [93.7, 1.0], [93.8, 1.0], [93.9, 1.0], [94.0, 1.0], [94.1, 1.0], [94.2, 1.0], [94.3, 1.0], [94.4, 1.0], [94.5, 1.0], [94.6, 1.0], [94.7, 1.0], [94.8, 1.0], [94.9, 1.0], [95.0, 1.0], [95.1, 1.0], [95.2, 1.0], [95.3, 1.0], [95.4, 1.0], [95.5, 1.0], [95.6, 1.0], [95.7, 1.0], [95.8, 1.0], [95.9, 1.0], [96.0, 1.0], [96.1, 1.0], [96.2, 1.0], [96.3, 1.0], [96.4, 1.0], [96.5, 1.0], [96.6, 1.0], [96.7, 1.0], [96.8, 1.0], [96.9, 1.0], [97.0, 1.0], [97.1, 1.0], [97.2, 1.0], [97.3, 1.0], [97.4, 1.0], [97.5, 1.0], [97.6, 1.0], [97.7, 1.0], [97.8, 1.0], [97.9, 1.0], [98.0, 1.0], [98.1, 1.0], [98.2, 1.0], [98.3, 1.0], [98.4, 1.0], [98.5, 1.0], [98.6, 1.0], [98.7, 1.0], [98.8, 1.0], [98.9, 1.0], [99.0, 1.0], [99.1, 1.0], [99.2, 1.0], [99.3, 1.0], [99.4, 1.0], [99.5, 1.0], [99.6, 1.0], [99.7, 1.0], [99.8, 1.0], [99.9, 1.0]], "isOverall": false, "label": "Register test user-0", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 805.0, "series": [{"data": [[300.0, 1.0]], "isOverall": false, "label": "Register test user", "isController": false}, {"data": [[0.0, 1.0]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[0.0, 4.0], [100.0, 21.0], [200.0, 37.0], [300.0, 23.0], [400.0, 34.0], [500.0, 26.0], [600.0, 32.0], [700.0, 38.0], [800.0, 30.0], [900.0, 30.0], [1000.0, 28.0], [1100.0, 23.0], [1200.0, 33.0], [1300.0, 49.0], [1400.0, 29.0], [1500.0, 29.0], [1600.0, 26.0], [1700.0, 31.0], [1800.0, 24.0], [1900.0, 31.0], [2000.0, 33.0], [2100.0, 24.0], [2200.0, 33.0], [2300.0, 43.0], [2400.0, 34.0], [2500.0, 92.0], [2600.0, 135.0], [2700.0, 134.0], [2800.0, 127.0], [2900.0, 132.0], [3000.0, 147.0], [3100.0, 166.0], [3300.0, 99.0], [3200.0, 122.0], [3400.0, 80.0], [3500.0, 58.0], [3600.0, 45.0], [3700.0, 14.0], [3800.0, 23.0], [3900.0, 32.0], [4000.0, 19.0], [4100.0, 34.0], [4300.0, 33.0], [4200.0, 41.0], [4600.0, 162.0], [4400.0, 35.0], [4500.0, 68.0], [4800.0, 644.0], [4700.0, 313.0], [4900.0, 718.0], [5100.0, 345.0], [5000.0, 577.0], [5200.0, 207.0], [5300.0, 134.0], [5400.0, 231.0], [5500.0, 553.0], [5600.0, 805.0], [5700.0, 709.0], [5800.0, 691.0], [6000.0, 397.0], [5900.0, 569.0], [6100.0, 332.0], [6200.0, 169.0], [6300.0, 93.0], [6400.0, 42.0], [6500.0, 27.0], [6600.0, 23.0], [6800.0, 28.0], [6700.0, 28.0], [6900.0, 36.0], [7000.0, 68.0], [7100.0, 94.0], [7300.0, 44.0], [7200.0, 67.0], [7400.0, 22.0], [7500.0, 10.0], [7600.0, 11.0], [7700.0, 19.0], [7800.0, 11.0], [7900.0, 12.0], [8000.0, 49.0], [8100.0, 62.0], [8200.0, 69.0], [8700.0, 49.0], [8500.0, 42.0], [8300.0, 55.0], [8400.0, 51.0], [8600.0, 44.0], [8900.0, 23.0], [9100.0, 12.0], [9200.0, 7.0], [8800.0, 57.0], [9000.0, 14.0], [9300.0, 7.0], [9400.0, 9.0], [9600.0, 2.0], [9500.0, 4.0], [9700.0, 1.0], [9800.0, 2.0], [10400.0, 2.0], [10700.0, 4.0], [10500.0, 1.0], [10600.0, 4.0], [10800.0, 8.0], [11000.0, 2.0], [10900.0, 3.0], [11100.0, 3.0], [11400.0, 4.0], [11300.0, 1.0], [11700.0, 1.0], [11600.0, 2.0], [12000.0, 1.0], [11800.0, 2.0], [13200.0, 1.0], [13700.0, 1.0], [13500.0, 1.0]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[0.0, 1.0]], "isOverall": false, "label": "Register test user-0", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 13700.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 122.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1 500ms"], [2, "Requests having \nresponse time > 1 500ms"], [3, "Requests in error"]], "maxY": 10734.0, "series": [{"data": [[0.0, 122.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 319.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1 500ms", "isController": false}, {"data": [[2.0, 10734.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1 500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.68527703E12, "maxY": 100.0, "series": [{"data": [[1.68527703E12, 1.0]], "isOverall": false, "label": "Login thread group", "isController": false}, {"data": [[1.68527721E12, 100.0], [1.68527704E12, 13.436274509803921], [1.68527755E12, 100.0], [1.68527738E12, 100.0], [1.68527764E12, 26.55769230769232], [1.68527713E12, 100.0], [1.68527747E12, 100.0], [1.6852773E12, 100.0], [1.68527756E12, 100.0], [1.68527705E12, 29.985714285714284], [1.68527739E12, 100.0], [1.68527722E12, 100.0], [1.68527748E12, 100.0], [1.68527731E12, 100.0], [1.68527714E12, 100.0], [1.68527727E12, 100.0], [1.6852771E12, 100.0], [1.68527753E12, 100.0], [1.68527736E12, 100.0], [1.68527719E12, 100.0], [1.68527745E12, 100.0], [1.68527728E12, 100.0], [1.68527762E12, 100.0], [1.68527711E12, 100.0], [1.68527737E12, 100.0], [1.6852772E12, 100.0], [1.68527754E12, 100.0], [1.68527703E12, 3.0], [1.68527729E12, 100.0], [1.68527712E12, 100.0], [1.68527763E12, 93.63276836158194], [1.68527746E12, 100.0], [1.68527725E12, 100.0], [1.68527708E12, 80.0353535353535], [1.68527759E12, 100.0], [1.68527742E12, 100.0], [1.68527717E12, 100.0], [1.68527751E12, 100.0], [1.68527734E12, 100.0], [1.6852776E12, 100.0], [1.68527709E12, 95.95327102803739], [1.68527743E12, 100.0], [1.68527726E12, 100.0], [1.68527752E12, 100.0], [1.68527735E12, 100.0], [1.68527718E12, 100.0], [1.68527761E12, 100.0], [1.68527744E12, 100.0], [1.68527757E12, 100.0], [1.6852774E12, 100.0], [1.68527723E12, 100.0], [1.68527706E12, 46.62135922330098], [1.68527749E12, 100.0], [1.68527732E12, 100.0], [1.68527715E12, 100.0], [1.68527741E12, 100.0], [1.68527724E12, 100.0], [1.68527758E12, 100.0], [1.68527707E12, 63.38277511961723], [1.68527733E12, 100.0], [1.68527716E12, 100.0], [1.6852775E12, 100.0]], "isOverall": false, "label": "Search group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.68527764E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.0, "maxY": 5475.463597647493, "series": [{"data": [[1.0, 346.0]], "isOverall": false, "label": "Register test user", "isController": false}, {"data": [[1.0, 346.0]], "isOverall": false, "label": "Register test user-Aggregated", "isController": false}, {"data": [[1.0, 2.0]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1.0, 2.0]], "isOverall": false, "label": "HTTP Request-0-Aggregated", "isController": false}, {"data": [[2.0, 757.9], [3.0, 530.5], [4.0, 725.3000000000001], [5.0, 622.25], [6.0, 618.75], [7.0, 892.0833333333334], [8.0, 679.0], [9.0, 658.0], [10.0, 797.9166666666667], [11.0, 838.0], [12.0, 804.6153846153845], [13.0, 595.4615384615386], [14.0, 1132.5333333333333], [15.0, 970.5714285714287], [16.0, 990.4615384615385], [17.0, 1332.181818181818], [18.0, 1041.0], [19.0, 1134.9285714285716], [20.0, 1080.5], [21.0, 951.0], [22.0, 1539.2857142857142], [23.0, 1266.8], [24.0, 1518.5], [25.0, 1363.5714285714284], [26.0, 1301.75], [27.0, 1594.1818181818185], [28.0, 1617.0], [29.0, 1637.8571428571427], [30.0, 1672.2727272727273], [31.0, 1581.4117647058827], [32.0, 1603.7857142857144], [33.0, 1705.6666666666665], [34.0, 1743.0588235294117], [35.0, 1828.7272727272727], [36.0, 1841.6153846153848], [37.0, 1827.0666666666666], [38.0, 2097.083333333333], [39.0, 2199.3999999999996], [40.0, 2100.4666666666667], [41.0, 2422.4444444444443], [42.0, 2079.764705882353], [43.0, 2296.9333333333334], [44.0, 2150.909090909091], [45.0, 2192.4], [46.0, 2349.375], [47.0, 2253.6363636363635], [48.0, 2485.2500000000005], [49.0, 2530.4666666666662], [50.0, 2323.6666666666665], [51.0, 2303.0000000000005], [52.0, 2361.3125], [53.0, 2805.166666666667], [54.0, 2303.0], [55.0, 2647.2000000000003], [56.0, 3039.5625000000005], [57.0, 3061.923076923077], [58.0, 2831.833333333333], [59.0, 2888.3333333333335], [60.0, 2817.266666666667], [61.0, 2857.8], [62.0, 3021.25], [63.0, 2856.8888888888887], [64.0, 3038.0666666666666], [65.0, 3408.8666666666663], [66.0, 2960.214285714286], [67.0, 3265.0], [68.0, 3178.1666666666665], [69.0, 2817.538461538462], [70.0, 3057.3125], [71.0, 3543.1249999999995], [72.0, 3284.5], [73.0, 3380.8999999999996], [74.0, 3549.9285714285716], [75.0, 3591.6000000000004], [76.0, 3551.4666666666667], [77.0, 3606.6666666666665], [78.0, 4128.454545454546], [79.0, 4096.727272727273], [80.0, 3622.3846153846152], [81.0, 3623.9166666666665], [82.0, 3976.571428571429], [83.0, 4134.583333333333], [84.0, 3927.4615384615386], [85.0, 3711.6249999999995], [86.0, 3793.714285714286], [87.0, 4291.0], [88.0, 4299.357142857142], [89.0, 4131.866666666667], [90.0, 3811.0000000000005], [91.0, 4033.8], [92.0, 4465.923076923077], [93.0, 3998.3076923076924], [94.0, 4190.25], [95.0, 4073.071428571428], [96.0, 4606.928571428572], [97.0, 4480.928571428573], [98.0, 4561.923076923077], [99.0, 4139.000000000001], [100.0, 5475.463597647493], [1.0, 772.1428571428571]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[94.21249552452552, 5126.54412817759]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}, {"data": [[1.0, 1.0]], "isOverall": false, "label": "Register test user-0", "isController": false}, {"data": [[1.0, 1.0]], "isOverall": false, "label": "Register test user-0-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 1855.7, "minX": 1.68527703E12, "maxY": 269894.5, "series": [{"data": [[1.68527721E12, 233637.0], [1.68527704E12, 230451.9], [1.68527755E12, 189241.1], [1.68527738E12, 189758.5], [1.68527764E12, 50892.3], [1.68527713E12, 219109.0], [1.68527747E12, 165591.7], [1.6852773E12, 198291.6], [1.68527756E12, 196291.1], [1.68527705E12, 253309.5], [1.68527739E12, 193035.9], [1.68527722E12, 216017.7], [1.68527748E12, 184656.5], [1.68527731E12, 232210.7], [1.68527714E12, 222060.6], [1.68527727E12, 179846.8], [1.6852771E12, 269894.5], [1.68527753E12, 160471.5], [1.68527736E12, 173595.9], [1.68527719E12, 235836.5], [1.68527745E12, 170879.9], [1.68527728E12, 226464.1], [1.68527762E12, 187420.4], [1.68527711E12, 243220.8], [1.68527737E12, 215712.6], [1.6852772E12, 250707.3], [1.68527754E12, 184184.3], [1.68527703E12, 41519.4], [1.68527729E12, 197381.0], [1.68527712E12, 229357.6], [1.68527763E12, 202335.6], [1.68527746E12, 169720.5], [1.68527725E12, 191384.0], [1.68527708E12, 203644.4], [1.68527759E12, 184887.3], [1.68527742E12, 166320.9], [1.68527717E12, 237314.5], [1.68527751E12, 220154.4], [1.68527734E12, 182267.6], [1.6852776E12, 187646.9], [1.68527709E12, 236223.6], [1.68527743E12, 202529.5], [1.68527726E12, 234811.9], [1.68527752E12, 177633.7], [1.68527735E12, 207730.8], [1.68527718E12, 226426.1], [1.68527761E12, 217468.7], [1.68527744E12, 180740.6], [1.68527757E12, 186615.3], [1.6852774E12, 243611.6], [1.68527723E12, 198437.0], [1.68527706E12, 230014.2], [1.68527749E12, 195967.2], [1.68527732E12, 181183.9], [1.68527715E12, 208460.6], [1.68527741E12, 182984.5], [1.68527724E12, 219958.8], [1.68527758E12, 220747.1], [1.68527707E12, 216403.8], [1.68527733E12, 214145.7], [1.68527716E12, 205856.8], [1.6852775E12, 179121.4]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.68527721E12, 9473.4], [1.68527704E12, 9460.2], [1.68527755E12, 8187.8], [1.68527738E12, 8036.0], [1.68527764E12, 2417.8], [1.68527713E12, 9229.0], [1.68527747E12, 7875.4], [1.6852773E12, 8284.6], [1.68527756E12, 7950.0], [1.68527705E12, 9739.8], [1.68527739E12, 7010.8], [1.68527722E12, 9319.2], [1.68527748E12, 7421.2], [1.68527731E12, 8462.0], [1.68527714E12, 9544.4], [1.68527727E12, 8953.6], [1.6852771E12, 9787.0], [1.68527753E12, 8067.6], [1.68527736E12, 8050.8], [1.68527719E12, 9625.8], [1.68527745E12, 7358.4], [1.68527728E12, 8824.6], [1.68527762E12, 8215.2], [1.68527711E12, 9435.8], [1.68527737E12, 8036.6], [1.6852772E12, 9077.4], [1.68527754E12, 7988.2], [1.68527703E12, 1855.7], [1.68527729E12, 8733.2], [1.68527712E12, 9879.0], [1.68527763E12, 8209.8], [1.68527746E12, 7850.2], [1.68527725E12, 9202.8], [1.68527708E12, 9198.6], [1.68527759E12, 8220.6], [1.68527742E12, 7914.0], [1.68527717E12, 9507.6], [1.68527751E12, 8258.4], [1.68527734E12, 8267.8], [1.6852776E12, 8205.0], [1.68527709E12, 9962.8], [1.68527743E12, 7442.6], [1.68527726E12, 9092.2], [1.68527752E12, 7883.0], [1.68527735E12, 8156.6], [1.68527718E12, 9362.2], [1.68527761E12, 8024.0], [1.68527744E12, 7924.2], [1.68527757E12, 8009.6], [1.6852774E12, 7840.0], [1.68527723E12, 9366.0], [1.68527706E12, 9562.4], [1.68527749E12, 7502.6], [1.68527732E12, 8084.4], [1.68527715E12, 9367.0], [1.68527741E12, 7677.4], [1.68527724E12, 9492.0], [1.68527758E12, 7982.8], [1.68527707E12, 9686.0], [1.68527733E12, 8144.6], [1.68527716E12, 9260.8], [1.6852775E12, 7735.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.68527764E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.68527703E12, "maxY": 6272.487499999999, "series": [{"data": [[1.68527703E12, 346.0]], "isOverall": false, "label": "Register test user", "isController": false}, {"data": [[1.68527703E12, 2.0]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1.68527721E12, 5017.5833333333285], [1.68527704E12, 601.3333333333331], [1.68527755E12, 5637.096590909094], [1.68527738E12, 5648.7572254335255], [1.68527764E12, 5285.000000000002], [1.68527713E12, 5041.050251256278], [1.68527747E12, 5992.485207100593], [1.6852773E12, 5448.528089887643], [1.68527756E12, 5620.315789473682], [1.68527705E12, 1324.190476190476], [1.68527739E12, 6264.0], [1.68527722E12, 4961.218905472637], [1.68527748E12, 6272.487499999999], [1.68527731E12, 5654.362637362638], [1.68527714E12, 4906.587378640779], [1.68527727E12, 5110.150259067356], [1.6852771E12, 4697.582938388626], [1.68527753E12, 5735.724137931034], [1.68527736E12, 5686.827586206893], [1.68527719E12, 4930.169082125601], [1.68527745E12, 6125.421383647798], [1.68527728E12, 5219.75263157895], [1.68527762E12, 5545.988700564972], [1.68527711E12, 4739.724137931034], [1.68527737E12, 5865.907514450866], [1.6852772E12, 4950.035897435896], [1.68527754E12, 5912.209302325579], [1.68527703E12, 172.72500000000002], [1.68527729E12, 5388.872340425533], [1.68527712E12, 4776.272300469482], [1.68527763E12, 5634.327683615819], [1.68527746E12, 6020.230769230769], [1.68527725E12, 4986.575757575762], [1.68527708E12, 3675.7222222222213], [1.68527759E12, 5734.610169491525], [1.68527742E12, 6028.2222222222235], [1.68527717E12, 4928.72549019608], [1.68527751E12, 5814.8305084745725], [1.68527734E12, 5643.8033707865125], [1.6852776E12, 5580.163841807911], [1.68527709E12, 4259.285046728971], [1.68527743E12, 5957.788819875778], [1.68527726E12, 5078.964285714285], [1.68527752E12, 5724.976470588236], [1.68527735E12, 5694.886363636364], [1.68527718E12, 4974.608910891088], [1.68527761E12, 5930.699421965319], [1.68527744E12, 5985.111111111109], [1.68527757E12, 6056.080924855493], [1.6852774E12, 6191.426035502959], [1.68527723E12, 4896.547263681592], [1.68527706E12, 2047.0825242718442], [1.68527749E12, 5993.763975155283], [1.68527732E12, 5532.01724137931], [1.68527715E12, 4946.564356435642], [1.68527741E12, 6006.096385542168], [1.68527724E12, 5004.156862745101], [1.68527758E12, 5732.360465116282], [1.68527707E12, 2843.1531100478473], [1.68527733E12, 5768.3977272727225], [1.68527716E12, 4928.467336683421], [1.6852775E12, 6163.12048192771]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[1.68527703E12, 1.0]], "isOverall": false, "label": "Register test user-0", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.68527764E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.68527703E12, "maxY": 6272.024999999997, "series": [{"data": [[1.68527703E12, 318.0]], "isOverall": false, "label": "Register test user", "isController": false}, {"data": [[1.68527703E12, 0.0]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1.68527721E12, 5017.333333333331], [1.68527704E12, 600.9117647058823], [1.68527755E12, 5636.829545454547], [1.68527738E12, 5648.369942196531], [1.68527764E12, 5284.884615384615], [1.68527713E12, 5040.61809045226], [1.68527747E12, 5992.171597633135], [1.6852773E12, 5448.2528089887655], [1.68527756E12, 5620.093567251462], [1.68527705E12, 1323.7761904761908], [1.68527739E12, 6263.642384105961], [1.68527722E12, 4961.044776119404], [1.68527748E12, 6272.024999999997], [1.68527731E12, 5653.620879120881], [1.68527714E12, 4906.412621359223], [1.68527727E12, 5109.953367875648], [1.6852771E12, 4697.345971563981], [1.68527753E12, 5735.160919540231], [1.68527736E12, 5686.574712643678], [1.68527719E12, 4929.942028985508], [1.68527745E12, 6125.157232704404], [1.68527728E12, 5219.484210526312], [1.68527762E12, 5545.734463276835], [1.68527711E12, 4739.330049261083], [1.68527737E12, 5865.572254335258], [1.6852772E12, 4949.7897435897485], [1.68527754E12, 5911.686046511628], [1.68527703E12, 172.45000000000005], [1.68527729E12, 5388.558510638299], [1.68527712E12, 4775.892018779344], [1.68527763E12, 5634.175141242937], [1.68527746E12, 6020.0236686390535], [1.68527725E12, 4986.141414141414], [1.68527708E12, 3675.2070707070707], [1.68527759E12, 5734.310734463275], [1.68527742E12, 6027.900584795327], [1.68527717E12, 4928.5343137254895], [1.68527751E12, 5814.53672316384], [1.68527734E12, 5643.606741573039], [1.6852776E12, 5579.960451977399], [1.68527709E12, 4258.990654205606], [1.68527743E12, 5957.484472049688], [1.68527726E12, 5078.7295918367345], [1.68527752E12, 5724.717647058826], [1.68527735E12, 5694.625000000001], [1.68527718E12, 4974.336633663366], [1.68527761E12, 5930.335260115607], [1.68527744E12, 5984.871345029241], [1.68527757E12, 6055.705202312137], [1.6852774E12, 6190.846153846152], [1.68527723E12, 4896.308457711444], [1.68527706E12, 2046.7912621359224], [1.68527749E12, 5993.484472049687], [1.68527732E12, 5531.666666666664], [1.68527715E12, 4946.376237623761], [1.68527741E12, 6005.795180722896], [1.68527724E12, 5003.955882352942], [1.68527758E12, 5732.081395348837], [1.68527707E12, 2842.7990430622017], [1.68527733E12, 5767.818181818182], [1.68527716E12, 4928.27638190955], [1.6852775E12, 6162.813253012048]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[1.68527703E12, 0.0]], "isOverall": false, "label": "Register test user-0", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.68527764E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.68527703E12, "maxY": 8.0, "series": [{"data": [[1.68527703E12, 8.0]], "isOverall": false, "label": "Register test user", "isController": false}, {"data": [[1.68527703E12, 0.0]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1.68527721E12, 0.37745098039215685], [1.68527704E12, 0.730392156862745], [1.68527755E12, 0.25568181818181807], [1.68527738E12, 0.3005780346820808], [1.68527764E12, 0.38461538461538464], [1.68527713E12, 0.43718592964824127], [1.68527747E12, 0.2426035502958579], [1.6852773E12, 0.39887640449438194], [1.68527756E12, 0.22222222222222232], [1.68527705E12, 0.6190476190476191], [1.68527739E12, 0.3112582781456953], [1.68527722E12, 0.4179104477611941], [1.68527748E12, 0.32499999999999996], [1.68527731E12, 0.45054945054945045], [1.68527714E12, 0.4029126213592232], [1.68527727E12, 0.4248704663212434], [1.6852771E12, 0.39336492890995256], [1.68527753E12, 0.24137931034482765], [1.68527736E12, 0.29885057471264387], [1.68527719E12, 0.38647342995169087], [1.68527745E12, 0.2767295597484276], [1.68527728E12, 0.3473684210526316], [1.68527762E12, 0.29378531073446346], [1.68527711E12, 0.46305418719211805], [1.68527737E12, 0.24855491329479767], [1.6852772E12, 0.3794871794871797], [1.68527754E12, 0.2965116279069768], [1.68527703E12, 0.7999999999999999], [1.68527729E12, 0.39361702127659587], [1.68527712E12, 0.47417840375586867], [1.68527763E12, 0.31638418079096065], [1.68527746E12, 0.29585798816568054], [1.68527725E12, 0.33838383838383834], [1.68527708E12, 0.4343434343434343], [1.68527759E12, 0.2937853107344631], [1.68527742E12, 0.2631578947368421], [1.68527717E12, 0.3823529411764706], [1.68527751E12, 0.26553672316384175], [1.68527734E12, 0.2865168539325844], [1.6852776E12, 0.25988700564971734], [1.68527709E12, 0.4299065420560747], [1.68527743E12, 0.27950310559006203], [1.68527726E12, 0.3622448979591835], [1.68527752E12, 0.31764705882352956], [1.68527735E12, 0.34659090909090895], [1.68527718E12, 0.38118811881188125], [1.68527761E12, 0.3179190751445088], [1.68527744E12, 0.3099415204678362], [1.68527757E12, 0.26011560693641633], [1.6852774E12, 0.301775147928994], [1.68527723E12, 0.407960199004975], [1.68527706E12, 0.6116504854368934], [1.68527749E12, 0.2732919254658385], [1.68527732E12, 0.3045977011494254], [1.68527715E12, 0.3960396039603961], [1.68527741E12, 0.27710843373493976], [1.68527724E12, 0.33333333333333337], [1.68527758E12, 0.29651162790697655], [1.68527707E12, 0.4784688995215312], [1.68527733E12, 0.2840909090909092], [1.68527716E12, 0.3919597989949748], [1.6852775E12, 0.27710843373493965]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[1.68527703E12, 0.0]], "isOverall": false, "label": "Register test user-0", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.68527764E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.68527703E12, "maxY": 13787.0, "series": [{"data": [[1.68527721E12, 13787.0], [1.68527704E12, 1333.0], [1.68527755E12, 8509.0], [1.68527738E12, 10929.0], [1.68527764E12, 8156.0], [1.68527713E12, 9304.0], [1.68527747E12, 11433.0], [1.6852773E12, 10455.0], [1.68527756E12, 8388.0], [1.68527705E12, 2240.0], [1.68527739E12, 12043.0], [1.68527722E12, 7348.0], [1.68527748E12, 9167.0], [1.68527731E12, 8518.0], [1.68527714E12, 7531.0], [1.68527727E12, 7729.0], [1.6852771E12, 8711.0], [1.68527753E12, 10891.0], [1.68527736E12, 11064.0], [1.68527719E12, 9309.0], [1.68527745E12, 11494.0], [1.68527728E12, 9737.0], [1.68527762E12, 10824.0], [1.68527711E12, 7021.0], [1.68527737E12, 10981.0], [1.6852772E12, 9546.0], [1.68527754E12, 11122.0], [1.68527703E12, 346.0], [1.68527729E12, 9837.0], [1.68527712E12, 9162.0], [1.68527763E12, 10847.0], [1.68527746E12, 11826.0], [1.68527725E12, 7404.0], [1.68527708E12, 6463.0], [1.68527759E12, 10867.0], [1.68527742E12, 8907.0], [1.68527717E12, 9401.0], [1.68527751E12, 11163.0], [1.68527734E12, 10806.0], [1.6852776E12, 8444.0], [1.68527709E12, 8209.0], [1.68527743E12, 8896.0], [1.68527726E12, 9519.0], [1.68527752E12, 10753.0], [1.68527735E12, 10689.0], [1.68527718E12, 9662.0], [1.68527761E12, 13500.0], [1.68527744E12, 8942.0], [1.68527757E12, 9103.0], [1.6852774E12, 11887.0], [1.68527723E12, 9442.0], [1.68527706E12, 4139.0], [1.68527749E12, 11723.0], [1.68527732E12, 10736.0], [1.68527715E12, 11468.0], [1.68527741E12, 11374.0], [1.68527724E12, 11449.0], [1.68527758E12, 10803.0], [1.68527707E12, 6405.0], [1.68527733E12, 10682.0], [1.68527716E12, 9474.0], [1.6852775E12, 11660.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.68527721E12, 2539.0], [1.68527704E12, 223.0], [1.68527755E12, 2856.0], [1.68527738E12, 2936.0], [1.68527764E12, 4330.0], [1.68527713E12, 2541.0], [1.68527747E12, 3080.0], [1.6852773E12, 2808.0], [1.68527756E12, 2942.0], [1.68527705E12, 645.0], [1.68527739E12, 3262.0], [1.68527722E12, 2545.0], [1.68527748E12, 3153.0], [1.68527731E12, 2812.0], [1.68527714E12, 406.0], [1.68527727E12, 2628.0], [1.6852771E12, 492.0], [1.68527753E12, 2938.0], [1.68527736E12, 2937.0], [1.68527719E12, 2517.0], [1.68527745E12, 3047.0], [1.68527728E12, 2712.0], [1.68527762E12, 2957.0], [1.68527711E12, 2458.0], [1.68527737E12, 2969.0], [1.6852772E12, 2569.0], [1.68527754E12, 2991.0], [1.68527703E12, 1.0], [1.68527729E12, 2728.0], [1.68527712E12, 2384.0], [1.68527763E12, 2825.0], [1.68527746E12, 3097.0], [1.68527725E12, 2556.0], [1.68527708E12, 1792.0], [1.68527759E12, 2925.0], [1.68527742E12, 3030.0], [1.68527717E12, 2487.0], [1.68527751E12, 2975.0], [1.68527734E12, 2967.0], [1.6852776E12, 2879.0], [1.68527709E12, 2190.0], [1.68527743E12, 2985.0], [1.68527726E12, 2594.0], [1.68527752E12, 2822.0], [1.68527735E12, 2925.0], [1.68527718E12, 2393.0], [1.68527761E12, 2954.0], [1.68527744E12, 3020.0], [1.68527757E12, 2978.0], [1.6852774E12, 3075.0], [1.68527723E12, 2579.0], [1.68527706E12, 1035.0], [1.68527749E12, 3163.0], [1.68527732E12, 2904.0], [1.68527715E12, 2523.0], [1.68527741E12, 468.0], [1.68527724E12, 2414.0], [1.68527758E12, 2933.0], [1.68527707E12, 1331.0], [1.68527733E12, 2828.0], [1.68527716E12, 2451.0], [1.6852775E12, 3049.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.68527721E12, 7112.5], [1.68527704E12, 890.5], [1.68527755E12, 5980.0], [1.68527738E12, 7337.999999999988], [1.68527764E12, 7195.900000000001], [1.68527713E12, 7139.0], [1.68527747E12, 8586.0], [1.6852773E12, 7754.9], [1.68527756E12, 5921.400000000001], [1.68527705E12, 1716.2], [1.68527739E12, 8005.400000000012], [1.68527722E12, 7077.6], [1.68527748E12, 8816.9], [1.68527731E12, 6012.6], [1.68527714E12, 5215.7], [1.68527727E12, 5402.4], [1.6852771E12, 6702.200000000001], [1.68527753E12, 8146.0], [1.68527736E12, 8190.0], [1.68527719E12, 5194.0], [1.68527745E12, 6375.0], [1.68527728E12, 7467.2], [1.68527762E12, 5927.6], [1.68527711E12, 4983.4], [1.68527737E12, 8136.4], [1.6852772E12, 7031.400000000001], [1.68527754E12, 8194.6], [1.68527703E12, 255.6], [1.68527729E12, 7626.1], [1.68527712E12, 6858.4], [1.68527763E12, 8011.6], [1.68527746E12, 6363.0], [1.68527725E12, 7087.2], [1.68527708E12, 4830.0], [1.68527759E12, 5945.2], [1.68527742E12, 8633.0], [1.68527717E12, 7008.0], [1.68527751E12, 8194.000000000004], [1.68527734E12, 5925.0], [1.6852776E12, 6386.400000000034], [1.68527709E12, 5928.5], [1.68527743E12, 8544.4], [1.68527726E12, 5317.200000000001], [1.68527752E12, 6142.6], [1.68527735E12, 6009.6], [1.68527718E12, 7081.2], [1.68527761E12, 8224.999999999998], [1.68527744E12, 8446.800000000001], [1.68527757E12, 8605.8], [1.6852774E12, 8639.0], [1.68527723E12, 5205.8], [1.68527706E12, 2788.1], [1.68527749E12, 6516.400000000001], [1.68527732E12, 5864.0], [1.68527715E12, 7002.8], [1.68527741E12, 6949.300000000021], [1.68527724E12, 7047.5], [1.68527758E12, 8197.400000000001], [1.68527707E12, 3523.0], [1.68527733E12, 8004.2], [1.68527716E12, 7111.0], [1.6852775E12, 8776.1]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.68527721E12, 9697.449999999973], [1.68527704E12, 1297.8499999999992], [1.68527755E12, 8425.07], [1.68527738E12, 9225.519999999979], [1.68527764E12, 8156.0], [1.68527713E12, 7484.0], [1.68527747E12, 9729.900000000027], [1.6852773E12, 8671.970000000018], [1.68527756E12, 8287.2], [1.68527705E12, 2230.9399999999996], [1.68527739E12, 11521.43999999999], [1.68527722E12, 7329.619999999999], [1.68527748E12, 9143.82], [1.68527731E12, 8415.079999999998], [1.68527714E12, 7315.6], [1.68527727E12, 7650.04], [1.6852771E12, 7141.36], [1.68527753E12, 10831.0], [1.68527736E12, 9156.75], [1.68527719E12, 7347.879999999999], [1.68527745E12, 10019.200000000013], [1.68527728E12, 8039.850000000007], [1.68527762E12, 10735.86], [1.68527711E12, 6990.680000000001], [1.68527737E12, 10950.66], [1.6852772E12, 9424.079999999998], [1.68527754E12, 9371.460000000025], [1.68527703E12, 346.0], [1.68527729E12, 8232.329999999973], [1.68527712E12, 9086.019999999997], [1.68527763E12, 10737.8], [1.68527746E12, 9869.500000000033], [1.68527725E12, 7314.9], [1.68527708E12, 6434.29], [1.68527759E12, 10718.02], [1.68527742E12, 8902.68], [1.68527717E12, 9227.85], [1.68527751E12, 9358.079999999998], [1.68527734E12, 8925.010000000018], [1.6852776E12, 8370.68], [1.68527709E12, 6609.099999999999], [1.68527743E12, 8884.84], [1.68527726E12, 9488.93], [1.68527752E12, 9168.279999999982], [1.68527735E12, 9074.30999999998], [1.68527718E12, 9431.45], [1.68527761E12, 13341.639999999998], [1.68527744E12, 8902.4], [1.68527757E12, 9076.36], [1.6852774E12, 10228.700000000026], [1.68527723E12, 7388.219999999999], [1.68527706E12, 3420.13], [1.68527749E12, 10099.219999999988], [1.68527732E12, 10583.75], [1.68527715E12, 9376.05], [1.68527741E12, 11197.120000000003], [1.68527724E12, 9153.499999999978], [1.68527758E12, 9134.220000000023], [1.68527707E12, 5529.1], [1.68527733E12, 10651.199999999999], [1.68527716E12, 9162.0], [1.6852775E12, 11639.23]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.68527721E12, 4951.0], [1.68527704E12, 600.0], [1.68527755E12, 5712.0], [1.68527738E12, 5758.0], [1.68527764E12, 5028.5], [1.68527713E12, 5012.0], [1.68527747E12, 6038.0], [1.6852773E12, 5448.0], [1.68527756E12, 5653.0], [1.68527705E12, 1317.5], [1.68527739E12, 6198.0], [1.68527722E12, 4938.0], [1.68527748E12, 6124.5], [1.68527731E12, 5608.5], [1.68527714E12, 4944.5], [1.68527727E12, 5152.0], [1.6852771E12, 4695.0], [1.68527753E12, 5729.5], [1.68527736E12, 5726.0], [1.68527719E12, 4969.0], [1.68527745E12, 6104.0], [1.68527728E12, 5210.0], [1.68527762E12, 5626.0], [1.68527711E12, 4732.0], [1.68527737E12, 5762.0], [1.6852772E12, 4974.0], [1.68527754E12, 5782.5], [1.68527703E12, 168.0], [1.68527729E12, 5327.5], [1.68527712E12, 4767.0], [1.68527763E12, 5599.0], [1.68527746E12, 6079.0], [1.68527725E12, 4973.0], [1.68527708E12, 3672.0], [1.68527759E12, 5675.0], [1.68527742E12, 5995.0], [1.68527717E12, 4913.5], [1.68527751E12, 5797.0], [1.68527734E12, 5668.0], [1.6852776E12, 5639.0], [1.68527709E12, 4283.0], [1.68527743E12, 5948.0], [1.68527726E12, 5026.5], [1.68527752E12, 5726.0], [1.68527735E12, 5717.5], [1.68527718E12, 4937.0], [1.68527761E12, 5817.0], [1.68527744E12, 5905.0], [1.68527757E12, 6038.0], [1.6852774E12, 6126.0], [1.68527723E12, 4919.0], [1.68527706E12, 2035.5], [1.68527749E12, 6085.0], [1.68527732E12, 5601.5], [1.68527715E12, 4886.0], [1.68527741E12, 5952.5], [1.68527724E12, 4961.0], [1.68527758E12, 5698.0], [1.68527707E12, 2839.0], [1.68527733E12, 5644.0], [1.68527716E12, 4969.0], [1.6852775E12, 6130.5]], "isOverall": false, "label": "Median", "isController": false}, {"data": [[1.68527721E12, 7250.25], [1.68527704E12, 1039.0], [1.68527755E12, 8225.6], [1.68527738E12, 8306.9], [1.68527764E12, 7507.799999999999], [1.68527713E12, 7274.0], [1.68527747E12, 8816.5], [1.6852773E12, 7981.95], [1.68527756E12, 8086.8], [1.68527705E12, 1985.4499999999996], [1.68527739E12, 8962.000000000002], [1.68527722E12, 7207.8], [1.68527748E12, 8900.0], [1.68527731E12, 8130.9], [1.68527714E12, 7143.899999999999], [1.68527727E12, 7409.0999999999985], [1.6852771E12, 6815.8], [1.68527753E12, 8427.25], [1.68527736E12, 8345.5], [1.68527719E12, 7114.6], [1.68527745E12, 8829.0], [1.68527728E12, 7676.45], [1.68527762E12, 8192.3], [1.68527711E12, 6808.599999999999], [1.68527737E12, 8460.199999999999], [1.6852772E12, 7281.6], [1.68527754E12, 8441.75], [1.68527703E12, 314.3999999999998], [1.68527729E12, 7812.0], [1.68527712E12, 7011.6], [1.68527763E12, 8193.3], [1.68527746E12, 8841.0], [1.68527725E12, 7189.7], [1.68527708E12, 5200.499999999999], [1.68527759E12, 8150.9], [1.68527742E12, 8783.0], [1.68527717E12, 7216.75], [1.68527751E12, 8592.5], [1.68527734E12, 8106.499999999999], [1.6852776E12, 8236.9], [1.68527709E12, 6190.25], [1.68527743E12, 8693.4], [1.68527726E12, 7297.5999999999985], [1.68527752E12, 8369.449999999999], [1.68527735E12, 8178.15], [1.68527718E12, 7232.15], [1.68527761E12, 8497.2], [1.68527744E12, 8664.4], [1.68527757E12, 8771.3], [1.6852774E12, 9276.0], [1.68527723E12, 7149.7], [1.68527706E12, 3054.95], [1.68527749E12, 8842.8], [1.68527732E12, 8116.5], [1.68527715E12, 7137.5], [1.68527741E12, 8802.15], [1.68527724E12, 7156.75], [1.68527758E12, 8304.2], [1.68527707E12, 4301.5], [1.68527733E12, 8255.7], [1.68527716E12, 7277.0], [1.6852775E12, 8945.3]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.68527764E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 99.0, "minX": 2.0, "maxY": 5994.5, "series": [{"data": [[2.0, 173.5], [8.0, 99.0], [11.0, 5963.0], [12.0, 5994.5], [13.0, 5811.0], [14.0, 5806.5], [15.0, 5873.0], [16.0, 5748.0], [17.0, 5696.0], [18.0, 5618.5], [19.0, 5588.5], [20.0, 5068.5], [21.0, 4949.0], [22.0, 4937.5], [23.0, 4726.0], [24.0, 4837.5], [25.0, 4786.0], [26.0, 4951.5], [30.0, 5258.5]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 30.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 99.0, "minX": 2.0, "maxY": 5994.5, "series": [{"data": [[2.0, 159.0], [8.0, 99.0], [11.0, 5962.5], [12.0, 5994.5], [13.0, 5811.0], [14.0, 5806.0], [15.0, 5873.0], [16.0, 5748.0], [17.0, 5696.0], [18.0, 5618.5], [19.0, 5588.5], [20.0, 5068.5], [21.0, 4949.0], [22.0, 4937.5], [23.0, 4726.0], [24.0, 4837.5], [25.0, 4785.5], [26.0, 4951.5], [30.0, 5258.5]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 30.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 4.8, "minX": 1.68527703E12, "maxY": 22.6, "series": [{"data": [[1.68527721E12, 20.4], [1.68527704E12, 22.1], [1.68527755E12, 17.6], [1.68527738E12, 17.3], [1.68527713E12, 19.9], [1.68527747E12, 16.9], [1.6852773E12, 17.8], [1.68527756E12, 17.1], [1.68527705E12, 22.6], [1.68527739E12, 15.1], [1.68527722E12, 20.1], [1.68527748E12, 16.0], [1.68527731E12, 18.2], [1.68527714E12, 20.6], [1.68527727E12, 19.3], [1.6852771E12, 21.1], [1.68527753E12, 17.4], [1.68527736E12, 17.4], [1.68527719E12, 20.7], [1.68527745E12, 15.9], [1.68527728E12, 19.0], [1.68527762E12, 17.7], [1.68527711E12, 20.3], [1.68527737E12, 17.3], [1.6852772E12, 19.5], [1.68527754E12, 17.2], [1.68527703E12, 4.8], [1.68527729E12, 18.8], [1.68527712E12, 21.3], [1.68527763E12, 12.9], [1.68527746E12, 16.9], [1.68527725E12, 19.8], [1.68527708E12, 21.4], [1.68527759E12, 17.7], [1.68527742E12, 17.1], [1.68527717E12, 20.4], [1.68527751E12, 17.7], [1.68527734E12, 17.8], [1.6852776E12, 17.7], [1.68527709E12, 22.6], [1.68527743E12, 16.1], [1.68527726E12, 19.6], [1.68527752E12, 17.0], [1.68527735E12, 17.6], [1.68527718E12, 20.2], [1.68527761E12, 17.3], [1.68527744E12, 17.1], [1.68527757E12, 17.3], [1.6852774E12, 16.9], [1.68527723E12, 20.1], [1.68527706E12, 22.3], [1.68527749E12, 16.1], [1.68527732E12, 17.4], [1.68527715E12, 20.2], [1.68527741E12, 16.6], [1.68527724E12, 20.4], [1.68527758E12, 17.2], [1.68527707E12, 22.6], [1.68527733E12, 17.6], [1.68527716E12, 19.9], [1.6852775E12, 16.6]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.68527763E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 4.3, "minX": 1.68527703E12, "maxY": 21.4, "series": [{"data": [[1.68527721E12, 20.4], [1.68527704E12, 20.4], [1.68527755E12, 17.6], [1.68527738E12, 17.3], [1.68527764E12, 5.2], [1.68527713E12, 19.9], [1.68527747E12, 16.9], [1.6852773E12, 17.8], [1.68527756E12, 17.1], [1.68527705E12, 21.0], [1.68527739E12, 15.1], [1.68527722E12, 20.1], [1.68527748E12, 16.0], [1.68527731E12, 18.2], [1.68527714E12, 20.6], [1.68527727E12, 19.3], [1.6852771E12, 21.1], [1.68527753E12, 17.4], [1.68527736E12, 17.4], [1.68527719E12, 20.7], [1.68527745E12, 15.9], [1.68527728E12, 19.0], [1.68527762E12, 17.7], [1.68527711E12, 20.3], [1.68527737E12, 17.3], [1.6852772E12, 19.5], [1.68527754E12, 17.2], [1.68527703E12, 4.3], [1.68527729E12, 18.8], [1.68527712E12, 21.3], [1.68527763E12, 17.7], [1.68527746E12, 16.9], [1.68527725E12, 19.8], [1.68527708E12, 19.8], [1.68527759E12, 17.7], [1.68527742E12, 17.1], [1.68527717E12, 20.4], [1.68527751E12, 17.7], [1.68527734E12, 17.8], [1.6852776E12, 17.7], [1.68527709E12, 21.4], [1.68527743E12, 16.1], [1.68527726E12, 19.6], [1.68527752E12, 17.0], [1.68527735E12, 17.6], [1.68527718E12, 20.2], [1.68527761E12, 17.3], [1.68527744E12, 17.1], [1.68527757E12, 17.3], [1.6852774E12, 16.9], [1.68527723E12, 20.1], [1.68527706E12, 20.6], [1.68527749E12, 16.1], [1.68527732E12, 17.4], [1.68527715E12, 20.2], [1.68527741E12, 16.6], [1.68527724E12, 20.4], [1.68527758E12, 17.2], [1.68527707E12, 20.9], [1.68527733E12, 17.6], [1.68527716E12, 19.9], [1.6852775E12, 16.6]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.68527764E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.1, "minX": 1.68527703E12, "maxY": 21.4, "series": [{"data": [[1.68527721E12, 20.4], [1.68527704E12, 20.4], [1.68527755E12, 17.6], [1.68527738E12, 17.3], [1.68527764E12, 5.2], [1.68527713E12, 19.9], [1.68527747E12, 16.9], [1.6852773E12, 17.8], [1.68527756E12, 17.1], [1.68527705E12, 21.0], [1.68527739E12, 15.1], [1.68527722E12, 20.1], [1.68527748E12, 16.0], [1.68527731E12, 18.2], [1.68527714E12, 20.6], [1.68527727E12, 19.3], [1.6852771E12, 21.1], [1.68527753E12, 17.4], [1.68527736E12, 17.4], [1.68527719E12, 20.7], [1.68527745E12, 15.9], [1.68527728E12, 19.0], [1.68527762E12, 17.7], [1.68527711E12, 20.3], [1.68527737E12, 17.3], [1.6852772E12, 19.5], [1.68527754E12, 17.2], [1.68527703E12, 4.0], [1.68527729E12, 18.8], [1.68527712E12, 21.3], [1.68527763E12, 17.7], [1.68527746E12, 16.9], [1.68527725E12, 19.8], [1.68527708E12, 19.8], [1.68527759E12, 17.7], [1.68527742E12, 17.1], [1.68527717E12, 20.4], [1.68527751E12, 17.7], [1.68527734E12, 17.8], [1.6852776E12, 17.7], [1.68527709E12, 21.4], [1.68527743E12, 16.1], [1.68527726E12, 19.6], [1.68527752E12, 17.0], [1.68527735E12, 17.6], [1.68527718E12, 20.2], [1.68527761E12, 17.3], [1.68527744E12, 17.1], [1.68527757E12, 17.3], [1.6852774E12, 16.9], [1.68527723E12, 20.1], [1.68527706E12, 20.6], [1.68527749E12, 16.1], [1.68527732E12, 17.4], [1.68527715E12, 20.2], [1.68527741E12, 16.6], [1.68527724E12, 20.4], [1.68527758E12, 17.2], [1.68527707E12, 20.9], [1.68527733E12, 17.6], [1.68527716E12, 19.9], [1.6852775E12, 16.6]], "isOverall": false, "label": "HTTP Request-success", "isController": false}, {"data": [[1.68527703E12, 0.1]], "isOverall": false, "label": "HTTP Request-0-success", "isController": false}, {"data": [[1.68527703E12, 0.1]], "isOverall": false, "label": "Register test user-success", "isController": false}, {"data": [[1.68527703E12, 0.1]], "isOverall": false, "label": "Register test user-0-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.68527764E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 4.3, "minX": 1.68527703E12, "maxY": 21.4, "series": [{"data": [[1.68527721E12, 20.4], [1.68527704E12, 20.4], [1.68527755E12, 17.6], [1.68527738E12, 17.3], [1.68527764E12, 5.2], [1.68527713E12, 19.9], [1.68527747E12, 16.9], [1.6852773E12, 17.8], [1.68527756E12, 17.1], [1.68527705E12, 21.0], [1.68527739E12, 15.1], [1.68527722E12, 20.1], [1.68527748E12, 16.0], [1.68527731E12, 18.2], [1.68527714E12, 20.6], [1.68527727E12, 19.3], [1.6852771E12, 21.1], [1.68527753E12, 17.4], [1.68527736E12, 17.4], [1.68527719E12, 20.7], [1.68527745E12, 15.9], [1.68527728E12, 19.0], [1.68527762E12, 17.7], [1.68527711E12, 20.3], [1.68527737E12, 17.3], [1.6852772E12, 19.5], [1.68527754E12, 17.2], [1.68527703E12, 4.3], [1.68527729E12, 18.8], [1.68527712E12, 21.3], [1.68527763E12, 17.7], [1.68527746E12, 16.9], [1.68527725E12, 19.8], [1.68527708E12, 19.8], [1.68527759E12, 17.7], [1.68527742E12, 17.1], [1.68527717E12, 20.4], [1.68527751E12, 17.7], [1.68527734E12, 17.8], [1.6852776E12, 17.7], [1.68527709E12, 21.4], [1.68527743E12, 16.1], [1.68527726E12, 19.6], [1.68527752E12, 17.0], [1.68527735E12, 17.6], [1.68527718E12, 20.2], [1.68527761E12, 17.3], [1.68527744E12, 17.1], [1.68527757E12, 17.3], [1.6852774E12, 16.9], [1.68527723E12, 20.1], [1.68527706E12, 20.6], [1.68527749E12, 16.1], [1.68527732E12, 17.4], [1.68527715E12, 20.2], [1.68527741E12, 16.6], [1.68527724E12, 20.4], [1.68527758E12, 17.2], [1.68527707E12, 20.9], [1.68527733E12, 17.6], [1.68527716E12, 19.9], [1.6852775E12, 16.6]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.68527764E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

